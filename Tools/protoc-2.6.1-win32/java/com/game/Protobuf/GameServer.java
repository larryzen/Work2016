// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameServer.proto

package com.game.Protobuf;

public final class GameServer {
  private GameServer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface SGOMsMapInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMsMapInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 mapid = 1;</code>
     */
    boolean hasMapid();
    /**
     * <code>required int32 mapid = 1;</code>
     */
    int getMapid();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SGOMsMapInfo}
   */
  public  static final class SGOMsMapInfo extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMsMapInfo, SGOMsMapInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMsMapInfo)
      SGOMsMapInfoOrBuilder {
    private SGOMsMapInfo() {
    }
    private int bitField0_;
    public static final int MAPID_FIELD_NUMBER = 1;
    private int mapid_;
    /**
     * <code>required int32 mapid = 1;</code>
     */
    public boolean hasMapid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 mapid = 1;</code>
     */
    public int getMapid() {
      return mapid_;
    }
    /**
     * <code>required int32 mapid = 1;</code>
     */
    private void setMapid(int value) {
      bitField0_ |= 0x00000001;
      mapid_ = value;
    }
    /**
     * <code>required int32 mapid = 1;</code>
     */
    private void clearMapid() {
      bitField0_ = (bitField0_ & ~0x00000001);
      mapid_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mapid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mapid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMsMapInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMsMapInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMsMapInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMsMapInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMsMapInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMsMapInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMsMapInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMsMapInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMsMapInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMsMapInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMsMapInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SGOMsMapInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMsMapInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMsMapInfo)
        com.game.Protobuf.GameServer.SGOMsMapInfoOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMsMapInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 mapid = 1;</code>
       */
      public boolean hasMapid() {
        return instance.hasMapid();
      }
      /**
       * <code>required int32 mapid = 1;</code>
       */
      public int getMapid() {
        return instance.getMapid();
      }
      /**
       * <code>required int32 mapid = 1;</code>
       */
      public Builder setMapid(int value) {
        copyOnWrite();
        instance.setMapid(value);
        return this;
      }
      /**
       * <code>required int32 mapid = 1;</code>
       */
      public Builder clearMapid() {
        copyOnWrite();
        instance.clearMapid();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMsMapInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMsMapInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasMapid()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMsMapInfo other = (com.game.Protobuf.GameServer.SGOMsMapInfo) arg1;
          mapid_ = visitor.visitInt(
              hasMapid(), mapid_,
              other.hasMapid(), other.mapid_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  mapid_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMsMapInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMsMapInfo)
    private static final com.game.Protobuf.GameServer.SGOMsMapInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMsMapInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMsMapInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMsMapInfo> PARSER;

    public static com.google.protobuf.Parser<SGOMsMapInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SCGMsPlayerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SCGMsPlayerInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>required int32 ret = 1;</code>
     */
    int getRet();

    /**
     * <code>optional string gameId = 2;</code>
     */
    boolean hasGameId();
    /**
     * <code>optional string gameId = 2;</code>
     */
    java.lang.String getGameId();
    /**
     * <code>optional string gameId = 2;</code>
     */
    com.google.protobuf.ByteString
        getGameIdBytes();

    /**
     * <code>optional int32 nickName = 3;</code>
     */
    boolean hasNickName();
    /**
     * <code>optional int32 nickName = 3;</code>
     */
    int getNickName();

    /**
     * <code>optional int32 gold = 4;</code>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 4;</code>
     */
    int getGold();

    /**
     * <code>optional int32 diamonds = 5;</code>
     */
    boolean hasDiamonds();
    /**
     * <code>optional int32 diamonds = 5;</code>
     */
    int getDiamonds();

    /**
     * <code>optional int32 headID = 6;</code>
     */
    boolean hasHeadID();
    /**
     * <code>optional int32 headID = 6;</code>
     */
    int getHeadID();

    /**
     * <code>optional int32 Prop1 = 7;</code>
     */
    boolean hasProp1();
    /**
     * <code>optional int32 Prop1 = 7;</code>
     */
    int getProp1();

    /**
     * <code>optional int32 Prop2 = 8;</code>
     */
    boolean hasProp2();
    /**
     * <code>optional int32 Prop2 = 8;</code>
     */
    int getProp2();

    /**
     * <code>optional int32 vip = 9;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 9;</code>
     */
    int getVip();

    /**
     * <code>optional int32 level = 10;</code>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 10;</code>
     */
    int getLevel();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SCGMsPlayerInfo}
   */
  public  static final class SCGMsPlayerInfo extends
      com.google.protobuf.GeneratedMessageLite<
          SCGMsPlayerInfo, SCGMsPlayerInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SCGMsPlayerInfo)
      SCGMsPlayerInfoOrBuilder {
    private SCGMsPlayerInfo() {
      gameId_ = "";
    }
    private int bitField0_;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>required int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }
    /**
     * <code>required int32 ret = 1;</code>
     */
    private void setRet(int value) {
      bitField0_ |= 0x00000001;
      ret_ = value;
    }
    /**
     * <code>required int32 ret = 1;</code>
     */
    private void clearRet() {
      bitField0_ = (bitField0_ & ~0x00000001);
      ret_ = 0;
    }

    public static final int GAMEID_FIELD_NUMBER = 2;
    private java.lang.String gameId_;
    /**
     * <code>optional string gameId = 2;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string gameId = 2;</code>
     */
    public java.lang.String getGameId() {
      return gameId_;
    }
    /**
     * <code>optional string gameId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getGameIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gameId_);
    }
    /**
     * <code>optional string gameId = 2;</code>
     */
    private void setGameId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      gameId_ = value;
    }
    /**
     * <code>optional string gameId = 2;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      gameId_ = getDefaultInstance().getGameId();
    }
    /**
     * <code>optional string gameId = 2;</code>
     */
    private void setGameIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      gameId_ = value.toStringUtf8();
    }

    public static final int NICKNAME_FIELD_NUMBER = 3;
    private int nickName_;
    /**
     * <code>optional int32 nickName = 3;</code>
     */
    public boolean hasNickName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 nickName = 3;</code>
     */
    public int getNickName() {
      return nickName_;
    }
    /**
     * <code>optional int32 nickName = 3;</code>
     */
    private void setNickName(int value) {
      bitField0_ |= 0x00000004;
      nickName_ = value;
    }
    /**
     * <code>optional int32 nickName = 3;</code>
     */
    private void clearNickName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      nickName_ = 0;
    }

    public static final int GOLD_FIELD_NUMBER = 4;
    private int gold_;
    /**
     * <code>optional int32 gold = 4;</code>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 gold = 4;</code>
     */
    public int getGold() {
      return gold_;
    }
    /**
     * <code>optional int32 gold = 4;</code>
     */
    private void setGold(int value) {
      bitField0_ |= 0x00000008;
      gold_ = value;
    }
    /**
     * <code>optional int32 gold = 4;</code>
     */
    private void clearGold() {
      bitField0_ = (bitField0_ & ~0x00000008);
      gold_ = 0;
    }

    public static final int DIAMONDS_FIELD_NUMBER = 5;
    private int diamonds_;
    /**
     * <code>optional int32 diamonds = 5;</code>
     */
    public boolean hasDiamonds() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 diamonds = 5;</code>
     */
    public int getDiamonds() {
      return diamonds_;
    }
    /**
     * <code>optional int32 diamonds = 5;</code>
     */
    private void setDiamonds(int value) {
      bitField0_ |= 0x00000010;
      diamonds_ = value;
    }
    /**
     * <code>optional int32 diamonds = 5;</code>
     */
    private void clearDiamonds() {
      bitField0_ = (bitField0_ & ~0x00000010);
      diamonds_ = 0;
    }

    public static final int HEADID_FIELD_NUMBER = 6;
    private int headID_;
    /**
     * <code>optional int32 headID = 6;</code>
     */
    public boolean hasHeadID() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 headID = 6;</code>
     */
    public int getHeadID() {
      return headID_;
    }
    /**
     * <code>optional int32 headID = 6;</code>
     */
    private void setHeadID(int value) {
      bitField0_ |= 0x00000020;
      headID_ = value;
    }
    /**
     * <code>optional int32 headID = 6;</code>
     */
    private void clearHeadID() {
      bitField0_ = (bitField0_ & ~0x00000020);
      headID_ = 0;
    }

    public static final int PROP1_FIELD_NUMBER = 7;
    private int prop1_;
    /**
     * <code>optional int32 Prop1 = 7;</code>
     */
    public boolean hasProp1() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 Prop1 = 7;</code>
     */
    public int getProp1() {
      return prop1_;
    }
    /**
     * <code>optional int32 Prop1 = 7;</code>
     */
    private void setProp1(int value) {
      bitField0_ |= 0x00000040;
      prop1_ = value;
    }
    /**
     * <code>optional int32 Prop1 = 7;</code>
     */
    private void clearProp1() {
      bitField0_ = (bitField0_ & ~0x00000040);
      prop1_ = 0;
    }

    public static final int PROP2_FIELD_NUMBER = 8;
    private int prop2_;
    /**
     * <code>optional int32 Prop2 = 8;</code>
     */
    public boolean hasProp2() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 Prop2 = 8;</code>
     */
    public int getProp2() {
      return prop2_;
    }
    /**
     * <code>optional int32 Prop2 = 8;</code>
     */
    private void setProp2(int value) {
      bitField0_ |= 0x00000080;
      prop2_ = value;
    }
    /**
     * <code>optional int32 Prop2 = 8;</code>
     */
    private void clearProp2() {
      bitField0_ = (bitField0_ & ~0x00000080);
      prop2_ = 0;
    }

    public static final int VIP_FIELD_NUMBER = 9;
    private int vip_;
    /**
     * <code>optional int32 vip = 9;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 vip = 9;</code>
     */
    public int getVip() {
      return vip_;
    }
    /**
     * <code>optional int32 vip = 9;</code>
     */
    private void setVip(int value) {
      bitField0_ |= 0x00000100;
      vip_ = value;
    }
    /**
     * <code>optional int32 vip = 9;</code>
     */
    private void clearVip() {
      bitField0_ = (bitField0_ & ~0x00000100);
      vip_ = 0;
    }

    public static final int LEVEL_FIELD_NUMBER = 10;
    private int level_;
    /**
     * <code>optional int32 level = 10;</code>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 level = 10;</code>
     */
    public int getLevel() {
      return level_;
    }
    /**
     * <code>optional int32 level = 10;</code>
     */
    private void setLevel(int value) {
      bitField0_ |= 0x00000200;
      level_ = value;
    }
    /**
     * <code>optional int32 level = 10;</code>
     */
    private void clearLevel() {
      bitField0_ = (bitField0_ & ~0x00000200);
      level_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getGameId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, nickName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, gold_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, diamonds_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, headID_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, prop1_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, prop2_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, vip_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, level_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getGameId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, nickName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gold_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, diamonds_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, headID_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, prop1_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, prop2_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, vip_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, level_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SCGMsPlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SCGMsPlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SCGMsPlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SCGMsPlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SCGMsPlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SCGMsPlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SCGMsPlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SCGMsPlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SCGMsPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SCGMsPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SCGMsPlayerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SCGMsPlayerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SCGMsPlayerInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SCGMsPlayerInfo)
        com.game.Protobuf.GameServer.SCGMsPlayerInfoOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SCGMsPlayerInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return instance.hasRet();
      }
      /**
       * <code>required int32 ret = 1;</code>
       */
      public int getRet() {
        return instance.getRet();
      }
      /**
       * <code>required int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        copyOnWrite();
        instance.setRet(value);
        return this;
      }
      /**
       * <code>required int32 ret = 1;</code>
       */
      public Builder clearRet() {
        copyOnWrite();
        instance.clearRet();
        return this;
      }

      /**
       * <code>optional string gameId = 2;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>optional string gameId = 2;</code>
       */
      public java.lang.String getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>optional string gameId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getGameIdBytes() {
        return instance.getGameIdBytes();
      }
      /**
       * <code>optional string gameId = 2;</code>
       */
      public Builder setGameId(
          java.lang.String value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>optional string gameId = 2;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }
      /**
       * <code>optional string gameId = 2;</code>
       */
      public Builder setGameIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGameIdBytes(value);
        return this;
      }

      /**
       * <code>optional int32 nickName = 3;</code>
       */
      public boolean hasNickName() {
        return instance.hasNickName();
      }
      /**
       * <code>optional int32 nickName = 3;</code>
       */
      public int getNickName() {
        return instance.getNickName();
      }
      /**
       * <code>optional int32 nickName = 3;</code>
       */
      public Builder setNickName(int value) {
        copyOnWrite();
        instance.setNickName(value);
        return this;
      }
      /**
       * <code>optional int32 nickName = 3;</code>
       */
      public Builder clearNickName() {
        copyOnWrite();
        instance.clearNickName();
        return this;
      }

      /**
       * <code>optional int32 gold = 4;</code>
       */
      public boolean hasGold() {
        return instance.hasGold();
      }
      /**
       * <code>optional int32 gold = 4;</code>
       */
      public int getGold() {
        return instance.getGold();
      }
      /**
       * <code>optional int32 gold = 4;</code>
       */
      public Builder setGold(int value) {
        copyOnWrite();
        instance.setGold(value);
        return this;
      }
      /**
       * <code>optional int32 gold = 4;</code>
       */
      public Builder clearGold() {
        copyOnWrite();
        instance.clearGold();
        return this;
      }

      /**
       * <code>optional int32 diamonds = 5;</code>
       */
      public boolean hasDiamonds() {
        return instance.hasDiamonds();
      }
      /**
       * <code>optional int32 diamonds = 5;</code>
       */
      public int getDiamonds() {
        return instance.getDiamonds();
      }
      /**
       * <code>optional int32 diamonds = 5;</code>
       */
      public Builder setDiamonds(int value) {
        copyOnWrite();
        instance.setDiamonds(value);
        return this;
      }
      /**
       * <code>optional int32 diamonds = 5;</code>
       */
      public Builder clearDiamonds() {
        copyOnWrite();
        instance.clearDiamonds();
        return this;
      }

      /**
       * <code>optional int32 headID = 6;</code>
       */
      public boolean hasHeadID() {
        return instance.hasHeadID();
      }
      /**
       * <code>optional int32 headID = 6;</code>
       */
      public int getHeadID() {
        return instance.getHeadID();
      }
      /**
       * <code>optional int32 headID = 6;</code>
       */
      public Builder setHeadID(int value) {
        copyOnWrite();
        instance.setHeadID(value);
        return this;
      }
      /**
       * <code>optional int32 headID = 6;</code>
       */
      public Builder clearHeadID() {
        copyOnWrite();
        instance.clearHeadID();
        return this;
      }

      /**
       * <code>optional int32 Prop1 = 7;</code>
       */
      public boolean hasProp1() {
        return instance.hasProp1();
      }
      /**
       * <code>optional int32 Prop1 = 7;</code>
       */
      public int getProp1() {
        return instance.getProp1();
      }
      /**
       * <code>optional int32 Prop1 = 7;</code>
       */
      public Builder setProp1(int value) {
        copyOnWrite();
        instance.setProp1(value);
        return this;
      }
      /**
       * <code>optional int32 Prop1 = 7;</code>
       */
      public Builder clearProp1() {
        copyOnWrite();
        instance.clearProp1();
        return this;
      }

      /**
       * <code>optional int32 Prop2 = 8;</code>
       */
      public boolean hasProp2() {
        return instance.hasProp2();
      }
      /**
       * <code>optional int32 Prop2 = 8;</code>
       */
      public int getProp2() {
        return instance.getProp2();
      }
      /**
       * <code>optional int32 Prop2 = 8;</code>
       */
      public Builder setProp2(int value) {
        copyOnWrite();
        instance.setProp2(value);
        return this;
      }
      /**
       * <code>optional int32 Prop2 = 8;</code>
       */
      public Builder clearProp2() {
        copyOnWrite();
        instance.clearProp2();
        return this;
      }

      /**
       * <code>optional int32 vip = 9;</code>
       */
      public boolean hasVip() {
        return instance.hasVip();
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public int getVip() {
        return instance.getVip();
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public Builder setVip(int value) {
        copyOnWrite();
        instance.setVip(value);
        return this;
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public Builder clearVip() {
        copyOnWrite();
        instance.clearVip();
        return this;
      }

      /**
       * <code>optional int32 level = 10;</code>
       */
      public boolean hasLevel() {
        return instance.hasLevel();
      }
      /**
       * <code>optional int32 level = 10;</code>
       */
      public int getLevel() {
        return instance.getLevel();
      }
      /**
       * <code>optional int32 level = 10;</code>
       */
      public Builder setLevel(int value) {
        copyOnWrite();
        instance.setLevel(value);
        return this;
      }
      /**
       * <code>optional int32 level = 10;</code>
       */
      public Builder clearLevel() {
        copyOnWrite();
        instance.clearLevel();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SCGMsPlayerInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SCGMsPlayerInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRet()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SCGMsPlayerInfo other = (com.game.Protobuf.GameServer.SCGMsPlayerInfo) arg1;
          ret_ = visitor.visitInt(
              hasRet(), ret_,
              other.hasRet(), other.ret_);
          gameId_ = visitor.visitString(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          nickName_ = visitor.visitInt(
              hasNickName(), nickName_,
              other.hasNickName(), other.nickName_);
          gold_ = visitor.visitInt(
              hasGold(), gold_,
              other.hasGold(), other.gold_);
          diamonds_ = visitor.visitInt(
              hasDiamonds(), diamonds_,
              other.hasDiamonds(), other.diamonds_);
          headID_ = visitor.visitInt(
              hasHeadID(), headID_,
              other.hasHeadID(), other.headID_);
          prop1_ = visitor.visitInt(
              hasProp1(), prop1_,
              other.hasProp1(), other.prop1_);
          prop2_ = visitor.visitInt(
              hasProp2(), prop2_,
              other.hasProp2(), other.prop2_);
          vip_ = visitor.visitInt(
              hasVip(), vip_,
              other.hasVip(), other.vip_);
          level_ = visitor.visitInt(
              hasLevel(), level_,
              other.hasLevel(), other.level_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  ret_ = input.readInt32();
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  gameId_ = s;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  nickName_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  gold_ = input.readInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  diamonds_ = input.readInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  headID_ = input.readInt32();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000040;
                  prop1_ = input.readInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000080;
                  prop2_ = input.readInt32();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000100;
                  vip_ = input.readInt32();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000200;
                  level_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SCGMsPlayerInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SCGMsPlayerInfo)
    private static final com.game.Protobuf.GameServer.SCGMsPlayerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SCGMsPlayerInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SCGMsPlayerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SCGMsPlayerInfo> PARSER;

    public static com.google.protobuf.Parser<SCGMsPlayerInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GamePlayerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.GamePlayerInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required bool isMyself = 1;</code>
     */
    boolean hasIsMyself();
    /**
     * <code>required bool isMyself = 1;</code>
     */
    boolean getIsMyself();

    /**
     * <code>required int32 chairID = 2;</code>
     */
    boolean hasChairID();
    /**
     * <code>required int32 chairID = 2;</code>
     */
    int getChairID();

    /**
     * <code>required string nickName = 3;</code>
     */
    boolean hasNickName();
    /**
     * <code>required string nickName = 3;</code>
     */
    java.lang.String getNickName();
    /**
     * <code>required string nickName = 3;</code>
     */
    com.google.protobuf.ByteString
        getNickNameBytes();

    /**
     * <code>required string gameid = 4;</code>
     */
    boolean hasGameid();
    /**
     * <code>required string gameid = 4;</code>
     */
    java.lang.String getGameid();
    /**
     * <code>required string gameid = 4;</code>
     */
    com.google.protobuf.ByteString
        getGameidBytes();

    /**
     * <code>required int32 gold = 5;</code>
     */
    boolean hasGold();
    /**
     * <code>required int32 gold = 5;</code>
     */
    int getGold();

    /**
     * <code>optional int32 diamonds = 6;</code>
     */
    boolean hasDiamonds();
    /**
     * <code>optional int32 diamonds = 6;</code>
     */
    int getDiamonds();

    /**
     * <code>optional int32 itemStop = 7;</code>
     */
    boolean hasItemStop();
    /**
     * <code>optional int32 itemStop = 7;</code>
     */
    int getItemStop();

    /**
     * <code>optional int32 itemLock = 8;</code>
     */
    boolean hasItemLock();
    /**
     * <code>optional int32 itemLock = 8;</code>
     */
    int getItemLock();

    /**
     * <code>optional int32 vip = 9;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 9;</code>
     */
    int getVip();

    /**
     * <code>optional int32 level = 10;</code>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 10;</code>
     */
    int getLevel();

    /**
     * <code>optional int32 cannonLv = 11;</code>
     */
    boolean hasCannonLv();
    /**
     * <code>optional int32 cannonLv = 11;</code>
     */
    int getCannonLv();

    /**
     * <code>required int32 headID = 12;</code>
     */
    boolean hasHeadID();
    /**
     * <code>required int32 headID = 12;</code>
     */
    int getHeadID();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.GamePlayerInfo}
   */
  public  static final class GamePlayerInfo extends
      com.google.protobuf.GeneratedMessageLite<
          GamePlayerInfo, GamePlayerInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.GamePlayerInfo)
      GamePlayerInfoOrBuilder {
    private GamePlayerInfo() {
      nickName_ = "";
      gameid_ = "";
    }
    private int bitField0_;
    public static final int ISMYSELF_FIELD_NUMBER = 1;
    private boolean isMyself_;
    /**
     * <code>required bool isMyself = 1;</code>
     */
    public boolean hasIsMyself() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool isMyself = 1;</code>
     */
    public boolean getIsMyself() {
      return isMyself_;
    }
    /**
     * <code>required bool isMyself = 1;</code>
     */
    private void setIsMyself(boolean value) {
      bitField0_ |= 0x00000001;
      isMyself_ = value;
    }
    /**
     * <code>required bool isMyself = 1;</code>
     */
    private void clearIsMyself() {
      bitField0_ = (bitField0_ & ~0x00000001);
      isMyself_ = false;
    }

    public static final int CHAIRID_FIELD_NUMBER = 2;
    private int chairID_;
    /**
     * <code>required int32 chairID = 2;</code>
     */
    public boolean hasChairID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 chairID = 2;</code>
     */
    public int getChairID() {
      return chairID_;
    }
    /**
     * <code>required int32 chairID = 2;</code>
     */
    private void setChairID(int value) {
      bitField0_ |= 0x00000002;
      chairID_ = value;
    }
    /**
     * <code>required int32 chairID = 2;</code>
     */
    private void clearChairID() {
      bitField0_ = (bitField0_ & ~0x00000002);
      chairID_ = 0;
    }

    public static final int NICKNAME_FIELD_NUMBER = 3;
    private java.lang.String nickName_;
    /**
     * <code>required string nickName = 3;</code>
     */
    public boolean hasNickName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string nickName = 3;</code>
     */
    public java.lang.String getNickName() {
      return nickName_;
    }
    /**
     * <code>required string nickName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNickNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(nickName_);
    }
    /**
     * <code>required string nickName = 3;</code>
     */
    private void setNickName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      nickName_ = value;
    }
    /**
     * <code>required string nickName = 3;</code>
     */
    private void clearNickName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      nickName_ = getDefaultInstance().getNickName();
    }
    /**
     * <code>required string nickName = 3;</code>
     */
    private void setNickNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      nickName_ = value.toStringUtf8();
    }

    public static final int GAMEID_FIELD_NUMBER = 4;
    private java.lang.String gameid_;
    /**
     * <code>required string gameid = 4;</code>
     */
    public boolean hasGameid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string gameid = 4;</code>
     */
    public java.lang.String getGameid() {
      return gameid_;
    }
    /**
     * <code>required string gameid = 4;</code>
     */
    public com.google.protobuf.ByteString
        getGameidBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gameid_);
    }
    /**
     * <code>required string gameid = 4;</code>
     */
    private void setGameid(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      gameid_ = value;
    }
    /**
     * <code>required string gameid = 4;</code>
     */
    private void clearGameid() {
      bitField0_ = (bitField0_ & ~0x00000008);
      gameid_ = getDefaultInstance().getGameid();
    }
    /**
     * <code>required string gameid = 4;</code>
     */
    private void setGameidBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      gameid_ = value.toStringUtf8();
    }

    public static final int GOLD_FIELD_NUMBER = 5;
    private int gold_;
    /**
     * <code>required int32 gold = 5;</code>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 gold = 5;</code>
     */
    public int getGold() {
      return gold_;
    }
    /**
     * <code>required int32 gold = 5;</code>
     */
    private void setGold(int value) {
      bitField0_ |= 0x00000010;
      gold_ = value;
    }
    /**
     * <code>required int32 gold = 5;</code>
     */
    private void clearGold() {
      bitField0_ = (bitField0_ & ~0x00000010);
      gold_ = 0;
    }

    public static final int DIAMONDS_FIELD_NUMBER = 6;
    private int diamonds_;
    /**
     * <code>optional int32 diamonds = 6;</code>
     */
    public boolean hasDiamonds() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 diamonds = 6;</code>
     */
    public int getDiamonds() {
      return diamonds_;
    }
    /**
     * <code>optional int32 diamonds = 6;</code>
     */
    private void setDiamonds(int value) {
      bitField0_ |= 0x00000020;
      diamonds_ = value;
    }
    /**
     * <code>optional int32 diamonds = 6;</code>
     */
    private void clearDiamonds() {
      bitField0_ = (bitField0_ & ~0x00000020);
      diamonds_ = 0;
    }

    public static final int ITEMSTOP_FIELD_NUMBER = 7;
    private int itemStop_;
    /**
     * <code>optional int32 itemStop = 7;</code>
     */
    public boolean hasItemStop() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 itemStop = 7;</code>
     */
    public int getItemStop() {
      return itemStop_;
    }
    /**
     * <code>optional int32 itemStop = 7;</code>
     */
    private void setItemStop(int value) {
      bitField0_ |= 0x00000040;
      itemStop_ = value;
    }
    /**
     * <code>optional int32 itemStop = 7;</code>
     */
    private void clearItemStop() {
      bitField0_ = (bitField0_ & ~0x00000040);
      itemStop_ = 0;
    }

    public static final int ITEMLOCK_FIELD_NUMBER = 8;
    private int itemLock_;
    /**
     * <code>optional int32 itemLock = 8;</code>
     */
    public boolean hasItemLock() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 itemLock = 8;</code>
     */
    public int getItemLock() {
      return itemLock_;
    }
    /**
     * <code>optional int32 itemLock = 8;</code>
     */
    private void setItemLock(int value) {
      bitField0_ |= 0x00000080;
      itemLock_ = value;
    }
    /**
     * <code>optional int32 itemLock = 8;</code>
     */
    private void clearItemLock() {
      bitField0_ = (bitField0_ & ~0x00000080);
      itemLock_ = 0;
    }

    public static final int VIP_FIELD_NUMBER = 9;
    private int vip_;
    /**
     * <code>optional int32 vip = 9;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 vip = 9;</code>
     */
    public int getVip() {
      return vip_;
    }
    /**
     * <code>optional int32 vip = 9;</code>
     */
    private void setVip(int value) {
      bitField0_ |= 0x00000100;
      vip_ = value;
    }
    /**
     * <code>optional int32 vip = 9;</code>
     */
    private void clearVip() {
      bitField0_ = (bitField0_ & ~0x00000100);
      vip_ = 0;
    }

    public static final int LEVEL_FIELD_NUMBER = 10;
    private int level_;
    /**
     * <code>optional int32 level = 10;</code>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 level = 10;</code>
     */
    public int getLevel() {
      return level_;
    }
    /**
     * <code>optional int32 level = 10;</code>
     */
    private void setLevel(int value) {
      bitField0_ |= 0x00000200;
      level_ = value;
    }
    /**
     * <code>optional int32 level = 10;</code>
     */
    private void clearLevel() {
      bitField0_ = (bitField0_ & ~0x00000200);
      level_ = 0;
    }

    public static final int CANNONLV_FIELD_NUMBER = 11;
    private int cannonLv_;
    /**
     * <code>optional int32 cannonLv = 11;</code>
     */
    public boolean hasCannonLv() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 cannonLv = 11;</code>
     */
    public int getCannonLv() {
      return cannonLv_;
    }
    /**
     * <code>optional int32 cannonLv = 11;</code>
     */
    private void setCannonLv(int value) {
      bitField0_ |= 0x00000400;
      cannonLv_ = value;
    }
    /**
     * <code>optional int32 cannonLv = 11;</code>
     */
    private void clearCannonLv() {
      bitField0_ = (bitField0_ & ~0x00000400);
      cannonLv_ = 0;
    }

    public static final int HEADID_FIELD_NUMBER = 12;
    private int headID_;
    /**
     * <code>required int32 headID = 12;</code>
     */
    public boolean hasHeadID() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 headID = 12;</code>
     */
    public int getHeadID() {
      return headID_;
    }
    /**
     * <code>required int32 headID = 12;</code>
     */
    private void setHeadID(int value) {
      bitField0_ |= 0x00000800;
      headID_ = value;
    }
    /**
     * <code>required int32 headID = 12;</code>
     */
    private void clearHeadID() {
      bitField0_ = (bitField0_ & ~0x00000800);
      headID_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isMyself_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, chairID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getNickName());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getGameid());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, gold_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, diamonds_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, itemStop_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, itemLock_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, vip_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, level_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, cannonLv_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, headID_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isMyself_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, chairID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getNickName());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getGameid());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, gold_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, diamonds_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, itemStop_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, itemLock_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, vip_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, level_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, cannonLv_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, headID_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.GamePlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.GamePlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.GamePlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.GamePlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.GamePlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.GamePlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.GamePlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.GamePlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.GamePlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.GamePlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.GamePlayerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.GamePlayerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.GamePlayerInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.GamePlayerInfo)
        com.game.Protobuf.GameServer.GamePlayerInfoOrBuilder {
      // Construct using com.game.Protobuf.GameServer.GamePlayerInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required bool isMyself = 1;</code>
       */
      public boolean hasIsMyself() {
        return instance.hasIsMyself();
      }
      /**
       * <code>required bool isMyself = 1;</code>
       */
      public boolean getIsMyself() {
        return instance.getIsMyself();
      }
      /**
       * <code>required bool isMyself = 1;</code>
       */
      public Builder setIsMyself(boolean value) {
        copyOnWrite();
        instance.setIsMyself(value);
        return this;
      }
      /**
       * <code>required bool isMyself = 1;</code>
       */
      public Builder clearIsMyself() {
        copyOnWrite();
        instance.clearIsMyself();
        return this;
      }

      /**
       * <code>required int32 chairID = 2;</code>
       */
      public boolean hasChairID() {
        return instance.hasChairID();
      }
      /**
       * <code>required int32 chairID = 2;</code>
       */
      public int getChairID() {
        return instance.getChairID();
      }
      /**
       * <code>required int32 chairID = 2;</code>
       */
      public Builder setChairID(int value) {
        copyOnWrite();
        instance.setChairID(value);
        return this;
      }
      /**
       * <code>required int32 chairID = 2;</code>
       */
      public Builder clearChairID() {
        copyOnWrite();
        instance.clearChairID();
        return this;
      }

      /**
       * <code>required string nickName = 3;</code>
       */
      public boolean hasNickName() {
        return instance.hasNickName();
      }
      /**
       * <code>required string nickName = 3;</code>
       */
      public java.lang.String getNickName() {
        return instance.getNickName();
      }
      /**
       * <code>required string nickName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNickNameBytes() {
        return instance.getNickNameBytes();
      }
      /**
       * <code>required string nickName = 3;</code>
       */
      public Builder setNickName(
          java.lang.String value) {
        copyOnWrite();
        instance.setNickName(value);
        return this;
      }
      /**
       * <code>required string nickName = 3;</code>
       */
      public Builder clearNickName() {
        copyOnWrite();
        instance.clearNickName();
        return this;
      }
      /**
       * <code>required string nickName = 3;</code>
       */
      public Builder setNickNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNickNameBytes(value);
        return this;
      }

      /**
       * <code>required string gameid = 4;</code>
       */
      public boolean hasGameid() {
        return instance.hasGameid();
      }
      /**
       * <code>required string gameid = 4;</code>
       */
      public java.lang.String getGameid() {
        return instance.getGameid();
      }
      /**
       * <code>required string gameid = 4;</code>
       */
      public com.google.protobuf.ByteString
          getGameidBytes() {
        return instance.getGameidBytes();
      }
      /**
       * <code>required string gameid = 4;</code>
       */
      public Builder setGameid(
          java.lang.String value) {
        copyOnWrite();
        instance.setGameid(value);
        return this;
      }
      /**
       * <code>required string gameid = 4;</code>
       */
      public Builder clearGameid() {
        copyOnWrite();
        instance.clearGameid();
        return this;
      }
      /**
       * <code>required string gameid = 4;</code>
       */
      public Builder setGameidBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGameidBytes(value);
        return this;
      }

      /**
       * <code>required int32 gold = 5;</code>
       */
      public boolean hasGold() {
        return instance.hasGold();
      }
      /**
       * <code>required int32 gold = 5;</code>
       */
      public int getGold() {
        return instance.getGold();
      }
      /**
       * <code>required int32 gold = 5;</code>
       */
      public Builder setGold(int value) {
        copyOnWrite();
        instance.setGold(value);
        return this;
      }
      /**
       * <code>required int32 gold = 5;</code>
       */
      public Builder clearGold() {
        copyOnWrite();
        instance.clearGold();
        return this;
      }

      /**
       * <code>optional int32 diamonds = 6;</code>
       */
      public boolean hasDiamonds() {
        return instance.hasDiamonds();
      }
      /**
       * <code>optional int32 diamonds = 6;</code>
       */
      public int getDiamonds() {
        return instance.getDiamonds();
      }
      /**
       * <code>optional int32 diamonds = 6;</code>
       */
      public Builder setDiamonds(int value) {
        copyOnWrite();
        instance.setDiamonds(value);
        return this;
      }
      /**
       * <code>optional int32 diamonds = 6;</code>
       */
      public Builder clearDiamonds() {
        copyOnWrite();
        instance.clearDiamonds();
        return this;
      }

      /**
       * <code>optional int32 itemStop = 7;</code>
       */
      public boolean hasItemStop() {
        return instance.hasItemStop();
      }
      /**
       * <code>optional int32 itemStop = 7;</code>
       */
      public int getItemStop() {
        return instance.getItemStop();
      }
      /**
       * <code>optional int32 itemStop = 7;</code>
       */
      public Builder setItemStop(int value) {
        copyOnWrite();
        instance.setItemStop(value);
        return this;
      }
      /**
       * <code>optional int32 itemStop = 7;</code>
       */
      public Builder clearItemStop() {
        copyOnWrite();
        instance.clearItemStop();
        return this;
      }

      /**
       * <code>optional int32 itemLock = 8;</code>
       */
      public boolean hasItemLock() {
        return instance.hasItemLock();
      }
      /**
       * <code>optional int32 itemLock = 8;</code>
       */
      public int getItemLock() {
        return instance.getItemLock();
      }
      /**
       * <code>optional int32 itemLock = 8;</code>
       */
      public Builder setItemLock(int value) {
        copyOnWrite();
        instance.setItemLock(value);
        return this;
      }
      /**
       * <code>optional int32 itemLock = 8;</code>
       */
      public Builder clearItemLock() {
        copyOnWrite();
        instance.clearItemLock();
        return this;
      }

      /**
       * <code>optional int32 vip = 9;</code>
       */
      public boolean hasVip() {
        return instance.hasVip();
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public int getVip() {
        return instance.getVip();
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public Builder setVip(int value) {
        copyOnWrite();
        instance.setVip(value);
        return this;
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public Builder clearVip() {
        copyOnWrite();
        instance.clearVip();
        return this;
      }

      /**
       * <code>optional int32 level = 10;</code>
       */
      public boolean hasLevel() {
        return instance.hasLevel();
      }
      /**
       * <code>optional int32 level = 10;</code>
       */
      public int getLevel() {
        return instance.getLevel();
      }
      /**
       * <code>optional int32 level = 10;</code>
       */
      public Builder setLevel(int value) {
        copyOnWrite();
        instance.setLevel(value);
        return this;
      }
      /**
       * <code>optional int32 level = 10;</code>
       */
      public Builder clearLevel() {
        copyOnWrite();
        instance.clearLevel();
        return this;
      }

      /**
       * <code>optional int32 cannonLv = 11;</code>
       */
      public boolean hasCannonLv() {
        return instance.hasCannonLv();
      }
      /**
       * <code>optional int32 cannonLv = 11;</code>
       */
      public int getCannonLv() {
        return instance.getCannonLv();
      }
      /**
       * <code>optional int32 cannonLv = 11;</code>
       */
      public Builder setCannonLv(int value) {
        copyOnWrite();
        instance.setCannonLv(value);
        return this;
      }
      /**
       * <code>optional int32 cannonLv = 11;</code>
       */
      public Builder clearCannonLv() {
        copyOnWrite();
        instance.clearCannonLv();
        return this;
      }

      /**
       * <code>required int32 headID = 12;</code>
       */
      public boolean hasHeadID() {
        return instance.hasHeadID();
      }
      /**
       * <code>required int32 headID = 12;</code>
       */
      public int getHeadID() {
        return instance.getHeadID();
      }
      /**
       * <code>required int32 headID = 12;</code>
       */
      public Builder setHeadID(int value) {
        copyOnWrite();
        instance.setHeadID(value);
        return this;
      }
      /**
       * <code>required int32 headID = 12;</code>
       */
      public Builder clearHeadID() {
        copyOnWrite();
        instance.clearHeadID();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.GamePlayerInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.GamePlayerInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasIsMyself()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasChairID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNickName()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGameid()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGold()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasHeadID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.GamePlayerInfo other = (com.game.Protobuf.GameServer.GamePlayerInfo) arg1;
          isMyself_ = visitor.visitBoolean(
              hasIsMyself(), isMyself_,
              other.hasIsMyself(), other.isMyself_);
          chairID_ = visitor.visitInt(
              hasChairID(), chairID_,
              other.hasChairID(), other.chairID_);
          nickName_ = visitor.visitString(
              hasNickName(), nickName_,
              other.hasNickName(), other.nickName_);
          gameid_ = visitor.visitString(
              hasGameid(), gameid_,
              other.hasGameid(), other.gameid_);
          gold_ = visitor.visitInt(
              hasGold(), gold_,
              other.hasGold(), other.gold_);
          diamonds_ = visitor.visitInt(
              hasDiamonds(), diamonds_,
              other.hasDiamonds(), other.diamonds_);
          itemStop_ = visitor.visitInt(
              hasItemStop(), itemStop_,
              other.hasItemStop(), other.itemStop_);
          itemLock_ = visitor.visitInt(
              hasItemLock(), itemLock_,
              other.hasItemLock(), other.itemLock_);
          vip_ = visitor.visitInt(
              hasVip(), vip_,
              other.hasVip(), other.vip_);
          level_ = visitor.visitInt(
              hasLevel(), level_,
              other.hasLevel(), other.level_);
          cannonLv_ = visitor.visitInt(
              hasCannonLv(), cannonLv_,
              other.hasCannonLv(), other.cannonLv_);
          headID_ = visitor.visitInt(
              hasHeadID(), headID_,
              other.hasHeadID(), other.headID_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  isMyself_ = input.readBool();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  chairID_ = input.readInt32();
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  nickName_ = s;
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  gameid_ = s;
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  gold_ = input.readInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  diamonds_ = input.readInt32();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000040;
                  itemStop_ = input.readInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000080;
                  itemLock_ = input.readInt32();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000100;
                  vip_ = input.readInt32();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000200;
                  level_ = input.readInt32();
                  break;
                }
                case 88: {
                  bitField0_ |= 0x00000400;
                  cannonLv_ = input.readInt32();
                  break;
                }
                case 96: {
                  bitField0_ |= 0x00000800;
                  headID_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.GamePlayerInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.GamePlayerInfo)
    private static final com.game.Protobuf.GameServer.GamePlayerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GamePlayerInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.GamePlayerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GamePlayerInfo> PARSER;

    public static com.google.protobuf.Parser<GamePlayerInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface COGMsEntyrGameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.COGMsEntyrGame)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required string gameId = 1;</code>
     */
    java.lang.String getGameId();
    /**
     * <code>required string gameId = 1;</code>
     */
    com.google.protobuf.ByteString
        getGameIdBytes();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.COGMsEntyrGame}
   */
  public  static final class COGMsEntyrGame extends
      com.google.protobuf.GeneratedMessageLite<
          COGMsEntyrGame, COGMsEntyrGame.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.COGMsEntyrGame)
      COGMsEntyrGameOrBuilder {
    private COGMsEntyrGame() {
      gameId_ = "";
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private java.lang.String gameId_;
    /**
     * <code>required string gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string gameId = 1;</code>
     */
    public java.lang.String getGameId() {
      return gameId_;
    }
    /**
     * <code>required string gameId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGameIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gameId_);
    }
    /**
     * <code>required string gameId = 1;</code>
     */
    private void setGameId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      gameId_ = value;
    }
    /**
     * <code>required string gameId = 1;</code>
     */
    private void clearGameId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameId_ = getDefaultInstance().getGameId();
    }
    /**
     * <code>required string gameId = 1;</code>
     */
    private void setGameIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      gameId_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getGameId());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getGameId());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.COGMsEntyrGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.COGMsEntyrGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMsEntyrGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.COGMsEntyrGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMsEntyrGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMsEntyrGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMsEntyrGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMsEntyrGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMsEntyrGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMsEntyrGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.COGMsEntyrGame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.COGMsEntyrGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.COGMsEntyrGame, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.COGMsEntyrGame)
        com.game.Protobuf.GameServer.COGMsEntyrGameOrBuilder {
      // Construct using com.game.Protobuf.GameServer.COGMsEntyrGame.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string gameId = 1;</code>
       */
      public boolean hasGameId() {
        return instance.hasGameId();
      }
      /**
       * <code>required string gameId = 1;</code>
       */
      public java.lang.String getGameId() {
        return instance.getGameId();
      }
      /**
       * <code>required string gameId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGameIdBytes() {
        return instance.getGameIdBytes();
      }
      /**
       * <code>required string gameId = 1;</code>
       */
      public Builder setGameId(
          java.lang.String value) {
        copyOnWrite();
        instance.setGameId(value);
        return this;
      }
      /**
       * <code>required string gameId = 1;</code>
       */
      public Builder clearGameId() {
        copyOnWrite();
        instance.clearGameId();
        return this;
      }
      /**
       * <code>required string gameId = 1;</code>
       */
      public Builder setGameIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGameIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.COGMsEntyrGame)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.COGMsEntyrGame();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.COGMsEntyrGame other = (com.game.Protobuf.GameServer.COGMsEntyrGame) arg1;
          gameId_ = visitor.visitString(
              hasGameId(), gameId_,
              other.hasGameId(), other.gameId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  gameId_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.COGMsEntyrGame.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.COGMsEntyrGame)
    private static final com.game.Protobuf.GameServer.COGMsEntyrGame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new COGMsEntyrGame();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.COGMsEntyrGame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<COGMsEntyrGame> PARSER;

    public static com.google.protobuf.Parser<COGMsEntyrGame> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SGOMsPlayerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMsPlayerInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    java.util.List<com.game.Protobuf.GameServer.GamePlayerInfo> 
        getPlayerListList();
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    com.game.Protobuf.GameServer.GamePlayerInfo getPlayerList(int index);
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    int getPlayerListCount();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SGOMsPlayerInfo}
   */
  public  static final class SGOMsPlayerInfo extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMsPlayerInfo, SGOMsPlayerInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMsPlayerInfo)
      SGOMsPlayerInfoOrBuilder {
    private SGOMsPlayerInfo() {
      playerList_ = emptyProtobufList();
    }
    public static final int PLAYERLIST_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.game.Protobuf.GameServer.GamePlayerInfo> playerList_;
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    public java.util.List<com.game.Protobuf.GameServer.GamePlayerInfo> getPlayerListList() {
      return playerList_;
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    public java.util.List<? extends com.game.Protobuf.GameServer.GamePlayerInfoOrBuilder> 
        getPlayerListOrBuilderList() {
      return playerList_;
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    public int getPlayerListCount() {
      return playerList_.size();
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    public com.game.Protobuf.GameServer.GamePlayerInfo getPlayerList(int index) {
      return playerList_.get(index);
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    public com.game.Protobuf.GameServer.GamePlayerInfoOrBuilder getPlayerListOrBuilder(
        int index) {
      return playerList_.get(index);
    }
    private void ensurePlayerListIsMutable() {
      if (!playerList_.isModifiable()) {
        playerList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(playerList_);
       }
    }

    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    private void setPlayerList(
        int index, com.game.Protobuf.GameServer.GamePlayerInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePlayerListIsMutable();
      playerList_.set(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    private void setPlayerList(
        int index, com.game.Protobuf.GameServer.GamePlayerInfo.Builder builderForValue) {
      ensurePlayerListIsMutable();
      playerList_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    private void addPlayerList(com.game.Protobuf.GameServer.GamePlayerInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePlayerListIsMutable();
      playerList_.add(value);
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    private void addPlayerList(
        int index, com.game.Protobuf.GameServer.GamePlayerInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePlayerListIsMutable();
      playerList_.add(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    private void addPlayerList(
        com.game.Protobuf.GameServer.GamePlayerInfo.Builder builderForValue) {
      ensurePlayerListIsMutable();
      playerList_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    private void addPlayerList(
        int index, com.game.Protobuf.GameServer.GamePlayerInfo.Builder builderForValue) {
      ensurePlayerListIsMutable();
      playerList_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    private void addAllPlayerList(
        java.lang.Iterable<? extends com.game.Protobuf.GameServer.GamePlayerInfo> values) {
      ensurePlayerListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, playerList_);
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    private void clearPlayerList() {
      playerList_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
     */
    private void removePlayerList(int index) {
      ensurePlayerListIsMutable();
      playerList_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < playerList_.size(); i++) {
        output.writeMessage(1, playerList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playerList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMsPlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMsPlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMsPlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMsPlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMsPlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMsPlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMsPlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMsPlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMsPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMsPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMsPlayerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SGOMsPlayerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMsPlayerInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMsPlayerInfo)
        com.game.Protobuf.GameServer.SGOMsPlayerInfoOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMsPlayerInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public java.util.List<com.game.Protobuf.GameServer.GamePlayerInfo> getPlayerListList() {
        return java.util.Collections.unmodifiableList(
            instance.getPlayerListList());
      }
      /**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public int getPlayerListCount() {
        return instance.getPlayerListCount();
      }/**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public com.game.Protobuf.GameServer.GamePlayerInfo getPlayerList(int index) {
        return instance.getPlayerList(index);
      }
      /**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public Builder setPlayerList(
          int index, com.game.Protobuf.GameServer.GamePlayerInfo value) {
        copyOnWrite();
        instance.setPlayerList(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public Builder setPlayerList(
          int index, com.game.Protobuf.GameServer.GamePlayerInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setPlayerList(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(com.game.Protobuf.GameServer.GamePlayerInfo value) {
        copyOnWrite();
        instance.addPlayerList(value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(
          int index, com.game.Protobuf.GameServer.GamePlayerInfo value) {
        copyOnWrite();
        instance.addPlayerList(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(
          com.game.Protobuf.GameServer.GamePlayerInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addPlayerList(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(
          int index, com.game.Protobuf.GameServer.GamePlayerInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addPlayerList(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public Builder addAllPlayerList(
          java.lang.Iterable<? extends com.game.Protobuf.GameServer.GamePlayerInfo> values) {
        copyOnWrite();
        instance.addAllPlayerList(values);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public Builder clearPlayerList() {
        copyOnWrite();
        instance.clearPlayerList();
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.GamePlayerInfo playerList = 1;</code>
       */
      public Builder removePlayerList(int index) {
        copyOnWrite();
        instance.removePlayerList(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMsPlayerInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMsPlayerInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getPlayerListCount(); i++) {
            if (!getPlayerList(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          playerList_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMsPlayerInfo other = (com.game.Protobuf.GameServer.SGOMsPlayerInfo) arg1;
          playerList_= visitor.visitList(playerList_, other.playerList_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!playerList_.isModifiable()) {
                    playerList_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(playerList_);
                  }
                  playerList_.add(
                      input.readMessage(com.game.Protobuf.GameServer.GamePlayerInfo.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMsPlayerInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMsPlayerInfo)
    private static final com.game.Protobuf.GameServer.SGOMsPlayerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMsPlayerInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMsPlayerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMsPlayerInfo> PARSER;

    public static com.google.protobuf.Parser<SGOMsPlayerInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Fish_ObjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.Fish_Object)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 wID = 1;</code>
     */
    boolean hasWID();
    /**
     * <code>required int32 wID = 1;</code>
     */
    int getWID();

    /**
     * <code>required int32 cbType = 2;</code>
     */
    boolean hasCbType();
    /**
     * <code>required int32 cbType = 2;</code>
     */
    int getCbType();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.Fish_Object}
   */
  public  static final class Fish_Object extends
      com.google.protobuf.GeneratedMessageLite<
          Fish_Object, Fish_Object.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.Fish_Object)
      Fish_ObjectOrBuilder {
    private Fish_Object() {
    }
    private int bitField0_;
    public static final int WID_FIELD_NUMBER = 1;
    private int wID_;
    /**
     * <code>required int32 wID = 1;</code>
     */
    public boolean hasWID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 wID = 1;</code>
     */
    public int getWID() {
      return wID_;
    }
    /**
     * <code>required int32 wID = 1;</code>
     */
    private void setWID(int value) {
      bitField0_ |= 0x00000001;
      wID_ = value;
    }
    /**
     * <code>required int32 wID = 1;</code>
     */
    private void clearWID() {
      bitField0_ = (bitField0_ & ~0x00000001);
      wID_ = 0;
    }

    public static final int CBTYPE_FIELD_NUMBER = 2;
    private int cbType_;
    /**
     * <code>required int32 cbType = 2;</code>
     */
    public boolean hasCbType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 cbType = 2;</code>
     */
    public int getCbType() {
      return cbType_;
    }
    /**
     * <code>required int32 cbType = 2;</code>
     */
    private void setCbType(int value) {
      bitField0_ |= 0x00000002;
      cbType_ = value;
    }
    /**
     * <code>required int32 cbType = 2;</code>
     */
    private void clearCbType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cbType_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, wID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cbType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, wID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cbType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.Fish_Object parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.Fish_Object parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.Fish_Object parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.Fish_Object parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.Fish_Object parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.Fish_Object parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.Fish_Object parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.Fish_Object parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.Fish_Object parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.Fish_Object parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.Fish_Object prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.Fish_Object}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.Fish_Object, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.Fish_Object)
        com.game.Protobuf.GameServer.Fish_ObjectOrBuilder {
      // Construct using com.game.Protobuf.GameServer.Fish_Object.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 wID = 1;</code>
       */
      public boolean hasWID() {
        return instance.hasWID();
      }
      /**
       * <code>required int32 wID = 1;</code>
       */
      public int getWID() {
        return instance.getWID();
      }
      /**
       * <code>required int32 wID = 1;</code>
       */
      public Builder setWID(int value) {
        copyOnWrite();
        instance.setWID(value);
        return this;
      }
      /**
       * <code>required int32 wID = 1;</code>
       */
      public Builder clearWID() {
        copyOnWrite();
        instance.clearWID();
        return this;
      }

      /**
       * <code>required int32 cbType = 2;</code>
       */
      public boolean hasCbType() {
        return instance.hasCbType();
      }
      /**
       * <code>required int32 cbType = 2;</code>
       */
      public int getCbType() {
        return instance.getCbType();
      }
      /**
       * <code>required int32 cbType = 2;</code>
       */
      public Builder setCbType(int value) {
        copyOnWrite();
        instance.setCbType(value);
        return this;
      }
      /**
       * <code>required int32 cbType = 2;</code>
       */
      public Builder clearCbType() {
        copyOnWrite();
        instance.clearCbType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.Fish_Object)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.Fish_Object();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasWID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCbType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.Fish_Object other = (com.game.Protobuf.GameServer.Fish_Object) arg1;
          wID_ = visitor.visitInt(
              hasWID(), wID_,
              other.hasWID(), other.wID_);
          cbType_ = visitor.visitInt(
              hasCbType(), cbType_,
              other.hasCbType(), other.cbType_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  wID_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  cbType_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.Fish_Object.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.Fish_Object)
    private static final com.game.Protobuf.GameServer.Fish_Object DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Fish_Object();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.Fish_Object getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Fish_Object> PARSER;

    public static com.google.protobuf.Parser<Fish_Object> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Net_ObjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.Net_Object)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *网的ID
     * </pre>
     *
     * <code>required int32 wID = 1;</code>
     */
    boolean hasWID();
    /**
     * <pre>
     *网的ID
     * </pre>
     *
     * <code>required int32 wID = 1;</code>
     */
    int getWID();

    /**
     * <pre>
     *网的类型
     * </pre>
     *
     * <code>required int32 cbType = 2;</code>
     */
    boolean hasCbType();
    /**
     * <pre>
     *网的类型
     * </pre>
     *
     * <code>required int32 cbType = 2;</code>
     */
    int getCbType();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.Net_Object}
   */
  public  static final class Net_Object extends
      com.google.protobuf.GeneratedMessageLite<
          Net_Object, Net_Object.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.Net_Object)
      Net_ObjectOrBuilder {
    private Net_Object() {
    }
    private int bitField0_;
    public static final int WID_FIELD_NUMBER = 1;
    private int wID_;
    /**
     * <pre>
     *网的ID
     * </pre>
     *
     * <code>required int32 wID = 1;</code>
     */
    public boolean hasWID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *网的ID
     * </pre>
     *
     * <code>required int32 wID = 1;</code>
     */
    public int getWID() {
      return wID_;
    }
    /**
     * <pre>
     *网的ID
     * </pre>
     *
     * <code>required int32 wID = 1;</code>
     */
    private void setWID(int value) {
      bitField0_ |= 0x00000001;
      wID_ = value;
    }
    /**
     * <pre>
     *网的ID
     * </pre>
     *
     * <code>required int32 wID = 1;</code>
     */
    private void clearWID() {
      bitField0_ = (bitField0_ & ~0x00000001);
      wID_ = 0;
    }

    public static final int CBTYPE_FIELD_NUMBER = 2;
    private int cbType_;
    /**
     * <pre>
     *网的类型
     * </pre>
     *
     * <code>required int32 cbType = 2;</code>
     */
    public boolean hasCbType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *网的类型
     * </pre>
     *
     * <code>required int32 cbType = 2;</code>
     */
    public int getCbType() {
      return cbType_;
    }
    /**
     * <pre>
     *网的类型
     * </pre>
     *
     * <code>required int32 cbType = 2;</code>
     */
    private void setCbType(int value) {
      bitField0_ |= 0x00000002;
      cbType_ = value;
    }
    /**
     * <pre>
     *网的类型
     * </pre>
     *
     * <code>required int32 cbType = 2;</code>
     */
    private void clearCbType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cbType_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, wID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cbType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, wID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cbType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.Net_Object parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.Net_Object parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.Net_Object parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.Net_Object parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.Net_Object parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.Net_Object parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.Net_Object parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.Net_Object parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.Net_Object parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.Net_Object parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.Net_Object prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.Net_Object}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.Net_Object, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.Net_Object)
        com.game.Protobuf.GameServer.Net_ObjectOrBuilder {
      // Construct using com.game.Protobuf.GameServer.Net_Object.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *网的ID
       * </pre>
       *
       * <code>required int32 wID = 1;</code>
       */
      public boolean hasWID() {
        return instance.hasWID();
      }
      /**
       * <pre>
       *网的ID
       * </pre>
       *
       * <code>required int32 wID = 1;</code>
       */
      public int getWID() {
        return instance.getWID();
      }
      /**
       * <pre>
       *网的ID
       * </pre>
       *
       * <code>required int32 wID = 1;</code>
       */
      public Builder setWID(int value) {
        copyOnWrite();
        instance.setWID(value);
        return this;
      }
      /**
       * <pre>
       *网的ID
       * </pre>
       *
       * <code>required int32 wID = 1;</code>
       */
      public Builder clearWID() {
        copyOnWrite();
        instance.clearWID();
        return this;
      }

      /**
       * <pre>
       *网的类型
       * </pre>
       *
       * <code>required int32 cbType = 2;</code>
       */
      public boolean hasCbType() {
        return instance.hasCbType();
      }
      /**
       * <pre>
       *网的类型
       * </pre>
       *
       * <code>required int32 cbType = 2;</code>
       */
      public int getCbType() {
        return instance.getCbType();
      }
      /**
       * <pre>
       *网的类型
       * </pre>
       *
       * <code>required int32 cbType = 2;</code>
       */
      public Builder setCbType(int value) {
        copyOnWrite();
        instance.setCbType(value);
        return this;
      }
      /**
       * <pre>
       *网的类型
       * </pre>
       *
       * <code>required int32 cbType = 2;</code>
       */
      public Builder clearCbType() {
        copyOnWrite();
        instance.clearCbType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.Net_Object)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.Net_Object();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasWID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCbType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.Net_Object other = (com.game.Protobuf.GameServer.Net_Object) arg1;
          wID_ = visitor.visitInt(
              hasWID(), wID_,
              other.hasWID(), other.wID_);
          cbType_ = visitor.visitInt(
              hasCbType(), cbType_,
              other.hasCbType(), other.cbType_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  wID_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  cbType_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.Net_Object.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.Net_Object)
    private static final com.game.Protobuf.GameServer.Net_Object DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Net_Object();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.Net_Object getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Net_Object> PARSER;

    public static com.google.protobuf.Parser<Net_Object> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SGOMs_Fish_PathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMs_Fish_Path)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *路径类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    boolean hasCbType();
    /**
     * <pre>
     *路径类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    int getCbType();

    /**
     * <pre>
     *实际鱼的数量
     * </pre>
     *
     * <code>required int32 cbCount = 2;</code>
     */
    boolean hasCbCount();
    /**
     * <pre>
     *实际鱼的数量
     * </pre>
     *
     * <code>required int32 cbCount = 2;</code>
     */
    int getCbCount();

    /**
     * <pre>
     *随机和种子
     * </pre>
     *
     * <code>required int32 cbSeed = 3;</code>
     */
    boolean hasCbSeed();
    /**
     * <pre>
     *随机和种子
     * </pre>
     *
     * <code>required int32 cbSeed = 3;</code>
     */
    int getCbSeed();

    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    java.util.List<com.game.Protobuf.GameServer.Fish_Object> 
        getFishNetObjectList();
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    com.game.Protobuf.GameServer.Fish_Object getFishNetObject(int index);
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    int getFishNetObjectCount();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SGOMs_Fish_Path}
   */
  public  static final class SGOMs_Fish_Path extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMs_Fish_Path, SGOMs_Fish_Path.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMs_Fish_Path)
      SGOMs_Fish_PathOrBuilder {
    private SGOMs_Fish_Path() {
      fishNetObject_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int CBTYPE_FIELD_NUMBER = 1;
    private int cbType_;
    /**
     * <pre>
     *路径类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    public boolean hasCbType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *路径类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    public int getCbType() {
      return cbType_;
    }
    /**
     * <pre>
     *路径类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    private void setCbType(int value) {
      bitField0_ |= 0x00000001;
      cbType_ = value;
    }
    /**
     * <pre>
     *路径类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    private void clearCbType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cbType_ = 0;
    }

    public static final int CBCOUNT_FIELD_NUMBER = 2;
    private int cbCount_;
    /**
     * <pre>
     *实际鱼的数量
     * </pre>
     *
     * <code>required int32 cbCount = 2;</code>
     */
    public boolean hasCbCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *实际鱼的数量
     * </pre>
     *
     * <code>required int32 cbCount = 2;</code>
     */
    public int getCbCount() {
      return cbCount_;
    }
    /**
     * <pre>
     *实际鱼的数量
     * </pre>
     *
     * <code>required int32 cbCount = 2;</code>
     */
    private void setCbCount(int value) {
      bitField0_ |= 0x00000002;
      cbCount_ = value;
    }
    /**
     * <pre>
     *实际鱼的数量
     * </pre>
     *
     * <code>required int32 cbCount = 2;</code>
     */
    private void clearCbCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cbCount_ = 0;
    }

    public static final int CBSEED_FIELD_NUMBER = 3;
    private int cbSeed_;
    /**
     * <pre>
     *随机和种子
     * </pre>
     *
     * <code>required int32 cbSeed = 3;</code>
     */
    public boolean hasCbSeed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *随机和种子
     * </pre>
     *
     * <code>required int32 cbSeed = 3;</code>
     */
    public int getCbSeed() {
      return cbSeed_;
    }
    /**
     * <pre>
     *随机和种子
     * </pre>
     *
     * <code>required int32 cbSeed = 3;</code>
     */
    private void setCbSeed(int value) {
      bitField0_ |= 0x00000004;
      cbSeed_ = value;
    }
    /**
     * <pre>
     *随机和种子
     * </pre>
     *
     * <code>required int32 cbSeed = 3;</code>
     */
    private void clearCbSeed() {
      bitField0_ = (bitField0_ & ~0x00000004);
      cbSeed_ = 0;
    }

    public static final int FISHNETOBJECT_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<com.game.Protobuf.GameServer.Fish_Object> fishNetObject_;
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishNetObjectList() {
      return fishNetObject_;
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    public java.util.List<? extends com.game.Protobuf.GameServer.Fish_ObjectOrBuilder> 
        getFishNetObjectOrBuilderList() {
      return fishNetObject_;
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    public int getFishNetObjectCount() {
      return fishNetObject_.size();
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    public com.game.Protobuf.GameServer.Fish_Object getFishNetObject(int index) {
      return fishNetObject_.get(index);
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    public com.game.Protobuf.GameServer.Fish_ObjectOrBuilder getFishNetObjectOrBuilder(
        int index) {
      return fishNetObject_.get(index);
    }
    private void ensureFishNetObjectIsMutable() {
      if (!fishNetObject_.isModifiable()) {
        fishNetObject_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(fishNetObject_);
       }
    }

    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    private void setFishNetObject(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishNetObjectIsMutable();
      fishNetObject_.set(index, value);
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    private void setFishNetObject(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishNetObjectIsMutable();
      fishNetObject_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    private void addFishNetObject(com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishNetObjectIsMutable();
      fishNetObject_.add(value);
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    private void addFishNetObject(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishNetObjectIsMutable();
      fishNetObject_.add(index, value);
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    private void addFishNetObject(
        com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishNetObjectIsMutable();
      fishNetObject_.add(builderForValue.build());
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    private void addFishNetObject(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishNetObjectIsMutable();
      fishNetObject_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    private void addAllFishNetObject(
        java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
      ensureFishNetObjectIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, fishNetObject_);
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    private void clearFishNetObject() {
      fishNetObject_ = emptyProtobufList();
    }
    /**
     * <pre>
     *路径中鱼的信息
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
     */
    private void removeFishNetObject(int index) {
      ensureFishNetObjectIsMutable();
      fishNetObject_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cbType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cbCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, cbSeed_);
      }
      for (int i = 0; i < fishNetObject_.size(); i++) {
        output.writeMessage(4, fishNetObject_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cbType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cbCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cbSeed_);
      }
      for (int i = 0; i < fishNetObject_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, fishNetObject_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMs_Fish_Path parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Path parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Path parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Path parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Path parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Path parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Path parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Path parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Path parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Path parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMs_Fish_Path prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SGOMs_Fish_Path}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMs_Fish_Path, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMs_Fish_Path)
        com.game.Protobuf.GameServer.SGOMs_Fish_PathOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMs_Fish_Path.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *路径类型
       * </pre>
       *
       * <code>required int32 cbType = 1;</code>
       */
      public boolean hasCbType() {
        return instance.hasCbType();
      }
      /**
       * <pre>
       *路径类型
       * </pre>
       *
       * <code>required int32 cbType = 1;</code>
       */
      public int getCbType() {
        return instance.getCbType();
      }
      /**
       * <pre>
       *路径类型
       * </pre>
       *
       * <code>required int32 cbType = 1;</code>
       */
      public Builder setCbType(int value) {
        copyOnWrite();
        instance.setCbType(value);
        return this;
      }
      /**
       * <pre>
       *路径类型
       * </pre>
       *
       * <code>required int32 cbType = 1;</code>
       */
      public Builder clearCbType() {
        copyOnWrite();
        instance.clearCbType();
        return this;
      }

      /**
       * <pre>
       *实际鱼的数量
       * </pre>
       *
       * <code>required int32 cbCount = 2;</code>
       */
      public boolean hasCbCount() {
        return instance.hasCbCount();
      }
      /**
       * <pre>
       *实际鱼的数量
       * </pre>
       *
       * <code>required int32 cbCount = 2;</code>
       */
      public int getCbCount() {
        return instance.getCbCount();
      }
      /**
       * <pre>
       *实际鱼的数量
       * </pre>
       *
       * <code>required int32 cbCount = 2;</code>
       */
      public Builder setCbCount(int value) {
        copyOnWrite();
        instance.setCbCount(value);
        return this;
      }
      /**
       * <pre>
       *实际鱼的数量
       * </pre>
       *
       * <code>required int32 cbCount = 2;</code>
       */
      public Builder clearCbCount() {
        copyOnWrite();
        instance.clearCbCount();
        return this;
      }

      /**
       * <pre>
       *随机和种子
       * </pre>
       *
       * <code>required int32 cbSeed = 3;</code>
       */
      public boolean hasCbSeed() {
        return instance.hasCbSeed();
      }
      /**
       * <pre>
       *随机和种子
       * </pre>
       *
       * <code>required int32 cbSeed = 3;</code>
       */
      public int getCbSeed() {
        return instance.getCbSeed();
      }
      /**
       * <pre>
       *随机和种子
       * </pre>
       *
       * <code>required int32 cbSeed = 3;</code>
       */
      public Builder setCbSeed(int value) {
        copyOnWrite();
        instance.setCbSeed(value);
        return this;
      }
      /**
       * <pre>
       *随机和种子
       * </pre>
       *
       * <code>required int32 cbSeed = 3;</code>
       */
      public Builder clearCbSeed() {
        copyOnWrite();
        instance.clearCbSeed();
        return this;
      }

      /**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishNetObjectList() {
        return java.util.Collections.unmodifiableList(
            instance.getFishNetObjectList());
      }
      /**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public int getFishNetObjectCount() {
        return instance.getFishNetObjectCount();
      }/**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public com.game.Protobuf.GameServer.Fish_Object getFishNetObject(int index) {
        return instance.getFishNetObject(index);
      }
      /**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public Builder setFishNetObject(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.setFishNetObject(index, value);
        return this;
      }
      /**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public Builder setFishNetObject(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.setFishNetObject(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public Builder addFishNetObject(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishNetObject(value);
        return this;
      }
      /**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public Builder addFishNetObject(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishNetObject(index, value);
        return this;
      }
      /**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public Builder addFishNetObject(
          com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishNetObject(builderForValue);
        return this;
      }
      /**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public Builder addFishNetObject(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishNetObject(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public Builder addAllFishNetObject(
          java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
        copyOnWrite();
        instance.addAllFishNetObject(values);
        return this;
      }
      /**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public Builder clearFishNetObject() {
        copyOnWrite();
        instance.clearFishNetObject();
        return this;
      }
      /**
       * <pre>
       *路径中鱼的信息
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishNetObject = 4;</code>
       */
      public Builder removeFishNetObject(int index) {
        copyOnWrite();
        instance.removeFishNetObject(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMs_Fish_Path)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMs_Fish_Path();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasCbType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCbCount()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCbSeed()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getFishNetObjectCount(); i++) {
            if (!getFishNetObject(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          fishNetObject_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMs_Fish_Path other = (com.game.Protobuf.GameServer.SGOMs_Fish_Path) arg1;
          cbType_ = visitor.visitInt(
              hasCbType(), cbType_,
              other.hasCbType(), other.cbType_);
          cbCount_ = visitor.visitInt(
              hasCbCount(), cbCount_,
              other.hasCbCount(), other.cbCount_);
          cbSeed_ = visitor.visitInt(
              hasCbSeed(), cbSeed_,
              other.hasCbSeed(), other.cbSeed_);
          fishNetObject_= visitor.visitList(fishNetObject_, other.fishNetObject_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  cbType_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  cbCount_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  cbSeed_ = input.readInt32();
                  break;
                }
                case 34: {
                  if (!fishNetObject_.isModifiable()) {
                    fishNetObject_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(fishNetObject_);
                  }
                  fishNetObject_.add(
                      input.readMessage(com.game.Protobuf.GameServer.Fish_Object.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMs_Fish_Path.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMs_Fish_Path)
    private static final com.game.Protobuf.GameServer.SGOMs_Fish_Path DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMs_Fish_Path();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMs_Fish_Path getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMs_Fish_Path> PARSER;

    public static com.google.protobuf.Parser<SGOMs_Fish_Path> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SGOMs_Fish_GroupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMs_Fish_Group)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *群组类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    boolean hasCbType();
    /**
     * <pre>
     *群组类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    int getCbType();

    /**
     * <pre>
     *随机种子
     * </pre>
     *
     * <code>required int32 cbSeed = 2;</code>
     */
    boolean hasCbSeed();
    /**
     * <pre>
     *随机种子
     * </pre>
     *
     * <code>required int32 cbSeed = 2;</code>
     */
    int getCbSeed();

    /**
     * <pre>
     *阵型出现累计时间，单位秒
     * </pre>
     *
     * <code>required float fPassTime = 3;</code>
     */
    boolean hasFPassTime();
    /**
     * <pre>
     *阵型出现累计时间，单位秒
     * </pre>
     *
     * <code>required float fPassTime = 3;</code>
     */
    float getFPassTime();

    /**
     * <code>required int32 wCount = 4;</code>
     */
    boolean hasWCount();
    /**
     * <code>required int32 wCount = 4;</code>
     */
    int getWCount();

    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    java.util.List<com.game.Protobuf.GameServer.Fish_Object> 
        getFishGroupIDsList();
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    com.game.Protobuf.GameServer.Fish_Object getFishGroupIDs(int index);
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    int getFishGroupIDsCount();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SGOMs_Fish_Group}
   */
  public  static final class SGOMs_Fish_Group extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMs_Fish_Group, SGOMs_Fish_Group.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMs_Fish_Group)
      SGOMs_Fish_GroupOrBuilder {
    private SGOMs_Fish_Group() {
      fishGroupIDs_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int CBTYPE_FIELD_NUMBER = 1;
    private int cbType_;
    /**
     * <pre>
     *群组类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    public boolean hasCbType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *群组类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    public int getCbType() {
      return cbType_;
    }
    /**
     * <pre>
     *群组类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    private void setCbType(int value) {
      bitField0_ |= 0x00000001;
      cbType_ = value;
    }
    /**
     * <pre>
     *群组类型
     * </pre>
     *
     * <code>required int32 cbType = 1;</code>
     */
    private void clearCbType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cbType_ = 0;
    }

    public static final int CBSEED_FIELD_NUMBER = 2;
    private int cbSeed_;
    /**
     * <pre>
     *随机种子
     * </pre>
     *
     * <code>required int32 cbSeed = 2;</code>
     */
    public boolean hasCbSeed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *随机种子
     * </pre>
     *
     * <code>required int32 cbSeed = 2;</code>
     */
    public int getCbSeed() {
      return cbSeed_;
    }
    /**
     * <pre>
     *随机种子
     * </pre>
     *
     * <code>required int32 cbSeed = 2;</code>
     */
    private void setCbSeed(int value) {
      bitField0_ |= 0x00000002;
      cbSeed_ = value;
    }
    /**
     * <pre>
     *随机种子
     * </pre>
     *
     * <code>required int32 cbSeed = 2;</code>
     */
    private void clearCbSeed() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cbSeed_ = 0;
    }

    public static final int FPASSTIME_FIELD_NUMBER = 3;
    private float fPassTime_;
    /**
     * <pre>
     *阵型出现累计时间，单位秒
     * </pre>
     *
     * <code>required float fPassTime = 3;</code>
     */
    public boolean hasFPassTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *阵型出现累计时间，单位秒
     * </pre>
     *
     * <code>required float fPassTime = 3;</code>
     */
    public float getFPassTime() {
      return fPassTime_;
    }
    /**
     * <pre>
     *阵型出现累计时间，单位秒
     * </pre>
     *
     * <code>required float fPassTime = 3;</code>
     */
    private void setFPassTime(float value) {
      bitField0_ |= 0x00000004;
      fPassTime_ = value;
    }
    /**
     * <pre>
     *阵型出现累计时间，单位秒
     * </pre>
     *
     * <code>required float fPassTime = 3;</code>
     */
    private void clearFPassTime() {
      bitField0_ = (bitField0_ & ~0x00000004);
      fPassTime_ = 0F;
    }

    public static final int WCOUNT_FIELD_NUMBER = 4;
    private int wCount_;
    /**
     * <code>required int32 wCount = 4;</code>
     */
    public boolean hasWCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 wCount = 4;</code>
     */
    public int getWCount() {
      return wCount_;
    }
    /**
     * <code>required int32 wCount = 4;</code>
     */
    private void setWCount(int value) {
      bitField0_ |= 0x00000008;
      wCount_ = value;
    }
    /**
     * <code>required int32 wCount = 4;</code>
     */
    private void clearWCount() {
      bitField0_ = (bitField0_ & ~0x00000008);
      wCount_ = 0;
    }

    public static final int FISHGROUPIDS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<com.game.Protobuf.GameServer.Fish_Object> fishGroupIDs_;
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishGroupIDsList() {
      return fishGroupIDs_;
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    public java.util.List<? extends com.game.Protobuf.GameServer.Fish_ObjectOrBuilder> 
        getFishGroupIDsOrBuilderList() {
      return fishGroupIDs_;
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    public int getFishGroupIDsCount() {
      return fishGroupIDs_.size();
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    public com.game.Protobuf.GameServer.Fish_Object getFishGroupIDs(int index) {
      return fishGroupIDs_.get(index);
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    public com.game.Protobuf.GameServer.Fish_ObjectOrBuilder getFishGroupIDsOrBuilder(
        int index) {
      return fishGroupIDs_.get(index);
    }
    private void ensureFishGroupIDsIsMutable() {
      if (!fishGroupIDs_.isModifiable()) {
        fishGroupIDs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(fishGroupIDs_);
       }
    }

    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    private void setFishGroupIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishGroupIDsIsMutable();
      fishGroupIDs_.set(index, value);
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    private void setFishGroupIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishGroupIDsIsMutable();
      fishGroupIDs_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    private void addFishGroupIDs(com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishGroupIDsIsMutable();
      fishGroupIDs_.add(value);
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    private void addFishGroupIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishGroupIDsIsMutable();
      fishGroupIDs_.add(index, value);
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    private void addFishGroupIDs(
        com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishGroupIDsIsMutable();
      fishGroupIDs_.add(builderForValue.build());
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    private void addFishGroupIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishGroupIDsIsMutable();
      fishGroupIDs_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    private void addAllFishGroupIDs(
        java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
      ensureFishGroupIDsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, fishGroupIDs_);
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    private void clearFishGroupIDs() {
      fishGroupIDs_ = emptyProtobufList();
    }
    /**
     * <pre>
     *阵型出现后被杀死的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
     */
    private void removeFishGroupIDs(int index) {
      ensureFishGroupIDsIsMutable();
      fishGroupIDs_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cbType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cbSeed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, fPassTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, wCount_);
      }
      for (int i = 0; i < fishGroupIDs_.size(); i++) {
        output.writeMessage(5, fishGroupIDs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cbType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cbSeed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, fPassTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, wCount_);
      }
      for (int i = 0; i < fishGroupIDs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, fishGroupIDs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMs_Fish_Group parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Group parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Group parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Group parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Group parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Group parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Group parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Group parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Group parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fish_Group parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMs_Fish_Group prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SGOMs_Fish_Group}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMs_Fish_Group, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMs_Fish_Group)
        com.game.Protobuf.GameServer.SGOMs_Fish_GroupOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMs_Fish_Group.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *群组类型
       * </pre>
       *
       * <code>required int32 cbType = 1;</code>
       */
      public boolean hasCbType() {
        return instance.hasCbType();
      }
      /**
       * <pre>
       *群组类型
       * </pre>
       *
       * <code>required int32 cbType = 1;</code>
       */
      public int getCbType() {
        return instance.getCbType();
      }
      /**
       * <pre>
       *群组类型
       * </pre>
       *
       * <code>required int32 cbType = 1;</code>
       */
      public Builder setCbType(int value) {
        copyOnWrite();
        instance.setCbType(value);
        return this;
      }
      /**
       * <pre>
       *群组类型
       * </pre>
       *
       * <code>required int32 cbType = 1;</code>
       */
      public Builder clearCbType() {
        copyOnWrite();
        instance.clearCbType();
        return this;
      }

      /**
       * <pre>
       *随机种子
       * </pre>
       *
       * <code>required int32 cbSeed = 2;</code>
       */
      public boolean hasCbSeed() {
        return instance.hasCbSeed();
      }
      /**
       * <pre>
       *随机种子
       * </pre>
       *
       * <code>required int32 cbSeed = 2;</code>
       */
      public int getCbSeed() {
        return instance.getCbSeed();
      }
      /**
       * <pre>
       *随机种子
       * </pre>
       *
       * <code>required int32 cbSeed = 2;</code>
       */
      public Builder setCbSeed(int value) {
        copyOnWrite();
        instance.setCbSeed(value);
        return this;
      }
      /**
       * <pre>
       *随机种子
       * </pre>
       *
       * <code>required int32 cbSeed = 2;</code>
       */
      public Builder clearCbSeed() {
        copyOnWrite();
        instance.clearCbSeed();
        return this;
      }

      /**
       * <pre>
       *阵型出现累计时间，单位秒
       * </pre>
       *
       * <code>required float fPassTime = 3;</code>
       */
      public boolean hasFPassTime() {
        return instance.hasFPassTime();
      }
      /**
       * <pre>
       *阵型出现累计时间，单位秒
       * </pre>
       *
       * <code>required float fPassTime = 3;</code>
       */
      public float getFPassTime() {
        return instance.getFPassTime();
      }
      /**
       * <pre>
       *阵型出现累计时间，单位秒
       * </pre>
       *
       * <code>required float fPassTime = 3;</code>
       */
      public Builder setFPassTime(float value) {
        copyOnWrite();
        instance.setFPassTime(value);
        return this;
      }
      /**
       * <pre>
       *阵型出现累计时间，单位秒
       * </pre>
       *
       * <code>required float fPassTime = 3;</code>
       */
      public Builder clearFPassTime() {
        copyOnWrite();
        instance.clearFPassTime();
        return this;
      }

      /**
       * <code>required int32 wCount = 4;</code>
       */
      public boolean hasWCount() {
        return instance.hasWCount();
      }
      /**
       * <code>required int32 wCount = 4;</code>
       */
      public int getWCount() {
        return instance.getWCount();
      }
      /**
       * <code>required int32 wCount = 4;</code>
       */
      public Builder setWCount(int value) {
        copyOnWrite();
        instance.setWCount(value);
        return this;
      }
      /**
       * <code>required int32 wCount = 4;</code>
       */
      public Builder clearWCount() {
        copyOnWrite();
        instance.clearWCount();
        return this;
      }

      /**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishGroupIDsList() {
        return java.util.Collections.unmodifiableList(
            instance.getFishGroupIDsList());
      }
      /**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public int getFishGroupIDsCount() {
        return instance.getFishGroupIDsCount();
      }/**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public com.game.Protobuf.GameServer.Fish_Object getFishGroupIDs(int index) {
        return instance.getFishGroupIDs(index);
      }
      /**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public Builder setFishGroupIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.setFishGroupIDs(index, value);
        return this;
      }
      /**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public Builder setFishGroupIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.setFishGroupIDs(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public Builder addFishGroupIDs(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishGroupIDs(value);
        return this;
      }
      /**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public Builder addFishGroupIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishGroupIDs(index, value);
        return this;
      }
      /**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public Builder addFishGroupIDs(
          com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishGroupIDs(builderForValue);
        return this;
      }
      /**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public Builder addFishGroupIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishGroupIDs(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public Builder addAllFishGroupIDs(
          java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
        copyOnWrite();
        instance.addAllFishGroupIDs(values);
        return this;
      }
      /**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public Builder clearFishGroupIDs() {
        copyOnWrite();
        instance.clearFishGroupIDs();
        return this;
      }
      /**
       * <pre>
       *阵型出现后被杀死的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishGroupIDs = 5;</code>
       */
      public Builder removeFishGroupIDs(int index) {
        copyOnWrite();
        instance.removeFishGroupIDs(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMs_Fish_Group)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMs_Fish_Group();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasCbType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCbSeed()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFPassTime()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasWCount()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getFishGroupIDsCount(); i++) {
            if (!getFishGroupIDs(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          fishGroupIDs_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMs_Fish_Group other = (com.game.Protobuf.GameServer.SGOMs_Fish_Group) arg1;
          cbType_ = visitor.visitInt(
              hasCbType(), cbType_,
              other.hasCbType(), other.cbType_);
          cbSeed_ = visitor.visitInt(
              hasCbSeed(), cbSeed_,
              other.hasCbSeed(), other.cbSeed_);
          fPassTime_ = visitor.visitFloat(
              hasFPassTime(), fPassTime_,
              other.hasFPassTime(), other.fPassTime_);
          wCount_ = visitor.visitInt(
              hasWCount(), wCount_,
              other.hasWCount(), other.wCount_);
          fishGroupIDs_= visitor.visitList(fishGroupIDs_, other.fishGroupIDs_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  cbType_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  cbSeed_ = input.readInt32();
                  break;
                }
                case 29: {
                  bitField0_ |= 0x00000004;
                  fPassTime_ = input.readFloat();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  wCount_ = input.readInt32();
                  break;
                }
                case 42: {
                  if (!fishGroupIDs_.isModifiable()) {
                    fishGroupIDs_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(fishGroupIDs_);
                  }
                  fishGroupIDs_.add(
                      input.readMessage(com.game.Protobuf.GameServer.Fish_Object.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMs_Fish_Group.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMs_Fish_Group)
    private static final com.game.Protobuf.GameServer.SGOMs_Fish_Group DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMs_Fish_Group();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMs_Fish_Group getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMs_Fish_Group> PARSER;

    public static com.google.protobuf.Parser<SGOMs_Fish_Group> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SGOMs_Fire_SuccessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMs_Fire_Success)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    boolean hasCbChairID();
    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    int getCbChairID();

    /**
     * <code>required int32 fRote = 2;</code>
     */
    boolean hasFRote();
    /**
     * <code>required int32 fRote = 2;</code>
     */
    int getFRote();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SGOMs_Fire_Success}
   */
  public  static final class SGOMs_Fire_Success extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMs_Fire_Success, SGOMs_Fire_Success.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMs_Fire_Success)
      SGOMs_Fire_SuccessOrBuilder {
    private SGOMs_Fire_Success() {
    }
    private int bitField0_;
    public static final int CBCHAIRID_FIELD_NUMBER = 1;
    private int cbChairID_;
    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    public boolean hasCbChairID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    public int getCbChairID() {
      return cbChairID_;
    }
    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    private void setCbChairID(int value) {
      bitField0_ |= 0x00000001;
      cbChairID_ = value;
    }
    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    private void clearCbChairID() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cbChairID_ = 0;
    }

    public static final int FROTE_FIELD_NUMBER = 2;
    private int fRote_;
    /**
     * <code>required int32 fRote = 2;</code>
     */
    public boolean hasFRote() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 fRote = 2;</code>
     */
    public int getFRote() {
      return fRote_;
    }
    /**
     * <code>required int32 fRote = 2;</code>
     */
    private void setFRote(int value) {
      bitField0_ |= 0x00000002;
      fRote_ = value;
    }
    /**
     * <code>required int32 fRote = 2;</code>
     */
    private void clearFRote() {
      bitField0_ = (bitField0_ & ~0x00000002);
      fRote_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cbChairID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fRote_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cbChairID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fRote_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMs_Fire_Success parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Success parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Success parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Success parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Success parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Success parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Success parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Success parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Success parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Success parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMs_Fire_Success prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SGOMs_Fire_Success}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMs_Fire_Success, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMs_Fire_Success)
        com.game.Protobuf.GameServer.SGOMs_Fire_SuccessOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMs_Fire_Success.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 cbChairID = 1;</code>
       */
      public boolean hasCbChairID() {
        return instance.hasCbChairID();
      }
      /**
       * <code>required int32 cbChairID = 1;</code>
       */
      public int getCbChairID() {
        return instance.getCbChairID();
      }
      /**
       * <code>required int32 cbChairID = 1;</code>
       */
      public Builder setCbChairID(int value) {
        copyOnWrite();
        instance.setCbChairID(value);
        return this;
      }
      /**
       * <code>required int32 cbChairID = 1;</code>
       */
      public Builder clearCbChairID() {
        copyOnWrite();
        instance.clearCbChairID();
        return this;
      }

      /**
       * <code>required int32 fRote = 2;</code>
       */
      public boolean hasFRote() {
        return instance.hasFRote();
      }
      /**
       * <code>required int32 fRote = 2;</code>
       */
      public int getFRote() {
        return instance.getFRote();
      }
      /**
       * <code>required int32 fRote = 2;</code>
       */
      public Builder setFRote(int value) {
        copyOnWrite();
        instance.setFRote(value);
        return this;
      }
      /**
       * <code>required int32 fRote = 2;</code>
       */
      public Builder clearFRote() {
        copyOnWrite();
        instance.clearFRote();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMs_Fire_Success)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMs_Fire_Success();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasCbChairID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFRote()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMs_Fire_Success other = (com.game.Protobuf.GameServer.SGOMs_Fire_Success) arg1;
          cbChairID_ = visitor.visitInt(
              hasCbChairID(), cbChairID_,
              other.hasCbChairID(), other.cbChairID_);
          fRote_ = visitor.visitInt(
              hasFRote(), fRote_,
              other.hasFRote(), other.fRote_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  cbChairID_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  fRote_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMs_Fire_Success.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMs_Fire_Success)
    private static final com.game.Protobuf.GameServer.SGOMs_Fire_Success DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMs_Fire_Success();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMs_Fire_Success getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMs_Fire_Success> PARSER;

    public static com.google.protobuf.Parser<SGOMs_Fire_Success> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SGOMs_Fire_FailedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMs_Fire_Failed)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *可改进，使用BYTE即可
     * </pre>
     *
     * <code>required int32 wChairID = 1;</code>
     */
    boolean hasWChairID();
    /**
     * <pre>
     *可改进，使用BYTE即可
     * </pre>
     *
     * <code>required int32 wChairID = 1;</code>
     */
    int getWChairID();

    /**
     * <code>required string szReason = 2;</code>
     */
    boolean hasSzReason();
    /**
     * <code>required string szReason = 2;</code>
     */
    java.lang.String getSzReason();
    /**
     * <code>required string szReason = 2;</code>
     */
    com.google.protobuf.ByteString
        getSzReasonBytes();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SGOMs_Fire_Failed}
   */
  public  static final class SGOMs_Fire_Failed extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMs_Fire_Failed, SGOMs_Fire_Failed.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMs_Fire_Failed)
      SGOMs_Fire_FailedOrBuilder {
    private SGOMs_Fire_Failed() {
      szReason_ = "";
    }
    private int bitField0_;
    public static final int WCHAIRID_FIELD_NUMBER = 1;
    private int wChairID_;
    /**
     * <pre>
     *可改进，使用BYTE即可
     * </pre>
     *
     * <code>required int32 wChairID = 1;</code>
     */
    public boolean hasWChairID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *可改进，使用BYTE即可
     * </pre>
     *
     * <code>required int32 wChairID = 1;</code>
     */
    public int getWChairID() {
      return wChairID_;
    }
    /**
     * <pre>
     *可改进，使用BYTE即可
     * </pre>
     *
     * <code>required int32 wChairID = 1;</code>
     */
    private void setWChairID(int value) {
      bitField0_ |= 0x00000001;
      wChairID_ = value;
    }
    /**
     * <pre>
     *可改进，使用BYTE即可
     * </pre>
     *
     * <code>required int32 wChairID = 1;</code>
     */
    private void clearWChairID() {
      bitField0_ = (bitField0_ & ~0x00000001);
      wChairID_ = 0;
    }

    public static final int SZREASON_FIELD_NUMBER = 2;
    private java.lang.String szReason_;
    /**
     * <code>required string szReason = 2;</code>
     */
    public boolean hasSzReason() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string szReason = 2;</code>
     */
    public java.lang.String getSzReason() {
      return szReason_;
    }
    /**
     * <code>required string szReason = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSzReasonBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(szReason_);
    }
    /**
     * <code>required string szReason = 2;</code>
     */
    private void setSzReason(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      szReason_ = value;
    }
    /**
     * <code>required string szReason = 2;</code>
     */
    private void clearSzReason() {
      bitField0_ = (bitField0_ & ~0x00000002);
      szReason_ = getDefaultInstance().getSzReason();
    }
    /**
     * <code>required string szReason = 2;</code>
     */
    private void setSzReasonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      szReason_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, wChairID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getSzReason());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, wChairID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getSzReason());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMs_Fire_Failed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Failed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Failed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Failed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Failed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Failed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Failed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Failed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Failed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Fire_Failed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMs_Fire_Failed prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SGOMs_Fire_Failed}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMs_Fire_Failed, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMs_Fire_Failed)
        com.game.Protobuf.GameServer.SGOMs_Fire_FailedOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMs_Fire_Failed.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *可改进，使用BYTE即可
       * </pre>
       *
       * <code>required int32 wChairID = 1;</code>
       */
      public boolean hasWChairID() {
        return instance.hasWChairID();
      }
      /**
       * <pre>
       *可改进，使用BYTE即可
       * </pre>
       *
       * <code>required int32 wChairID = 1;</code>
       */
      public int getWChairID() {
        return instance.getWChairID();
      }
      /**
       * <pre>
       *可改进，使用BYTE即可
       * </pre>
       *
       * <code>required int32 wChairID = 1;</code>
       */
      public Builder setWChairID(int value) {
        copyOnWrite();
        instance.setWChairID(value);
        return this;
      }
      /**
       * <pre>
       *可改进，使用BYTE即可
       * </pre>
       *
       * <code>required int32 wChairID = 1;</code>
       */
      public Builder clearWChairID() {
        copyOnWrite();
        instance.clearWChairID();
        return this;
      }

      /**
       * <code>required string szReason = 2;</code>
       */
      public boolean hasSzReason() {
        return instance.hasSzReason();
      }
      /**
       * <code>required string szReason = 2;</code>
       */
      public java.lang.String getSzReason() {
        return instance.getSzReason();
      }
      /**
       * <code>required string szReason = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSzReasonBytes() {
        return instance.getSzReasonBytes();
      }
      /**
       * <code>required string szReason = 2;</code>
       */
      public Builder setSzReason(
          java.lang.String value) {
        copyOnWrite();
        instance.setSzReason(value);
        return this;
      }
      /**
       * <code>required string szReason = 2;</code>
       */
      public Builder clearSzReason() {
        copyOnWrite();
        instance.clearSzReason();
        return this;
      }
      /**
       * <code>required string szReason = 2;</code>
       */
      public Builder setSzReasonBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSzReasonBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMs_Fire_Failed)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMs_Fire_Failed();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasWChairID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasSzReason()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMs_Fire_Failed other = (com.game.Protobuf.GameServer.SGOMs_Fire_Failed) arg1;
          wChairID_ = visitor.visitInt(
              hasWChairID(), wChairID_,
              other.hasWChairID(), other.wChairID_);
          szReason_ = visitor.visitString(
              hasSzReason(), szReason_,
              other.hasSzReason(), other.szReason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  wChairID_ = input.readInt32();
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  szReason_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMs_Fire_Failed.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMs_Fire_Failed)
    private static final com.game.Protobuf.GameServer.SGOMs_Fire_Failed DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMs_Fire_Failed();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMs_Fire_Failed getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMs_Fire_Failed> PARSER;

    public static com.google.protobuf.Parser<SGOMs_Fire_Failed> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SGOMs_Change_Cannon_RetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMs_Change_Cannon_Ret)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    boolean hasCbChairID();
    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    int getCbChairID();

    /**
     * <code>required int32 cbStyle = 2;</code>
     */
    boolean hasCbStyle();
    /**
     * <code>required int32 cbStyle = 2;</code>
     */
    int getCbStyle();

    /**
     * <code>required int32 wCost = 3;</code>
     */
    boolean hasWCost();
    /**
     * <code>required int32 wCost = 3;</code>
     */
    int getWCost();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SGOMs_Change_Cannon_Ret}
   */
  public  static final class SGOMs_Change_Cannon_Ret extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMs_Change_Cannon_Ret, SGOMs_Change_Cannon_Ret.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMs_Change_Cannon_Ret)
      SGOMs_Change_Cannon_RetOrBuilder {
    private SGOMs_Change_Cannon_Ret() {
    }
    private int bitField0_;
    public static final int CBCHAIRID_FIELD_NUMBER = 1;
    private int cbChairID_;
    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    public boolean hasCbChairID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    public int getCbChairID() {
      return cbChairID_;
    }
    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    private void setCbChairID(int value) {
      bitField0_ |= 0x00000001;
      cbChairID_ = value;
    }
    /**
     * <code>required int32 cbChairID = 1;</code>
     */
    private void clearCbChairID() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cbChairID_ = 0;
    }

    public static final int CBSTYLE_FIELD_NUMBER = 2;
    private int cbStyle_;
    /**
     * <code>required int32 cbStyle = 2;</code>
     */
    public boolean hasCbStyle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 cbStyle = 2;</code>
     */
    public int getCbStyle() {
      return cbStyle_;
    }
    /**
     * <code>required int32 cbStyle = 2;</code>
     */
    private void setCbStyle(int value) {
      bitField0_ |= 0x00000002;
      cbStyle_ = value;
    }
    /**
     * <code>required int32 cbStyle = 2;</code>
     */
    private void clearCbStyle() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cbStyle_ = 0;
    }

    public static final int WCOST_FIELD_NUMBER = 3;
    private int wCost_;
    /**
     * <code>required int32 wCost = 3;</code>
     */
    public boolean hasWCost() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 wCost = 3;</code>
     */
    public int getWCost() {
      return wCost_;
    }
    /**
     * <code>required int32 wCost = 3;</code>
     */
    private void setWCost(int value) {
      bitField0_ |= 0x00000004;
      wCost_ = value;
    }
    /**
     * <code>required int32 wCost = 3;</code>
     */
    private void clearWCost() {
      bitField0_ = (bitField0_ & ~0x00000004);
      wCost_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cbChairID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cbStyle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, wCost_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cbChairID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cbStyle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, wCost_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SGOMs_Change_Cannon_Ret}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMs_Change_Cannon_Ret)
        com.game.Protobuf.GameServer.SGOMs_Change_Cannon_RetOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 cbChairID = 1;</code>
       */
      public boolean hasCbChairID() {
        return instance.hasCbChairID();
      }
      /**
       * <code>required int32 cbChairID = 1;</code>
       */
      public int getCbChairID() {
        return instance.getCbChairID();
      }
      /**
       * <code>required int32 cbChairID = 1;</code>
       */
      public Builder setCbChairID(int value) {
        copyOnWrite();
        instance.setCbChairID(value);
        return this;
      }
      /**
       * <code>required int32 cbChairID = 1;</code>
       */
      public Builder clearCbChairID() {
        copyOnWrite();
        instance.clearCbChairID();
        return this;
      }

      /**
       * <code>required int32 cbStyle = 2;</code>
       */
      public boolean hasCbStyle() {
        return instance.hasCbStyle();
      }
      /**
       * <code>required int32 cbStyle = 2;</code>
       */
      public int getCbStyle() {
        return instance.getCbStyle();
      }
      /**
       * <code>required int32 cbStyle = 2;</code>
       */
      public Builder setCbStyle(int value) {
        copyOnWrite();
        instance.setCbStyle(value);
        return this;
      }
      /**
       * <code>required int32 cbStyle = 2;</code>
       */
      public Builder clearCbStyle() {
        copyOnWrite();
        instance.clearCbStyle();
        return this;
      }

      /**
       * <code>required int32 wCost = 3;</code>
       */
      public boolean hasWCost() {
        return instance.hasWCost();
      }
      /**
       * <code>required int32 wCost = 3;</code>
       */
      public int getWCost() {
        return instance.getWCost();
      }
      /**
       * <code>required int32 wCost = 3;</code>
       */
      public Builder setWCost(int value) {
        copyOnWrite();
        instance.setWCost(value);
        return this;
      }
      /**
       * <code>required int32 wCost = 3;</code>
       */
      public Builder clearWCost() {
        copyOnWrite();
        instance.clearWCost();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMs_Change_Cannon_Ret)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasCbChairID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCbStyle()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasWCost()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret other = (com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret) arg1;
          cbChairID_ = visitor.visitInt(
              hasCbChairID(), cbChairID_,
              other.hasCbChairID(), other.cbChairID_);
          cbStyle_ = visitor.visitInt(
              hasCbStyle(), cbStyle_,
              other.hasCbStyle(), other.cbStyle_);
          wCost_ = visitor.visitInt(
              hasWCost(), wCost_,
              other.hasWCost(), other.wCost_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  cbChairID_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  cbStyle_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  wCost_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMs_Change_Cannon_Ret)
    private static final com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMs_Change_Cannon_Ret();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMs_Change_Cannon_Ret getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMs_Change_Cannon_Ret> PARSER;

    public static com.google.protobuf.Parser<SGOMs_Change_Cannon_Ret> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SGOMs_Cast_Nets_SuccessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMs_Cast_Nets_Success)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *打中鱼的数目
     * </pre>
     *
     * <code>required int32 cbCount = 1;</code>
     */
    boolean hasCbCount();
    /**
     * <pre>
     *打中鱼的数目
     * </pre>
     *
     * <code>required int32 cbCount = 1;</code>
     */
    int getCbCount();

    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>required int32 cbChairID = 2;</code>
     */
    boolean hasCbChairID();
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>required int32 cbChairID = 2;</code>
     */
    int getCbChairID();

    /**
     * <pre>
     *玩家当前分数
     * </pre>
     *
     * <code>required int32 totalGoin = 3;</code>
     */
    boolean hasTotalGoin();
    /**
     * <pre>
     *玩家当前分数
     * </pre>
     *
     * <code>required int32 totalGoin = 3;</code>
     */
    int getTotalGoin();

    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    boolean hasAddGoin();
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    int getAddGoin();

    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    java.util.List<com.game.Protobuf.GameServer.Fish_Object> 
        getFishIDsList();
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index);
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    int getFishIDsCount();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SGOMs_Cast_Nets_Success}
   */
  public  static final class SGOMs_Cast_Nets_Success extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMs_Cast_Nets_Success, SGOMs_Cast_Nets_Success.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMs_Cast_Nets_Success)
      SGOMs_Cast_Nets_SuccessOrBuilder {
    private SGOMs_Cast_Nets_Success() {
      fishIDs_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int CBCOUNT_FIELD_NUMBER = 1;
    private int cbCount_;
    /**
     * <pre>
     *打中鱼的数目
     * </pre>
     *
     * <code>required int32 cbCount = 1;</code>
     */
    public boolean hasCbCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *打中鱼的数目
     * </pre>
     *
     * <code>required int32 cbCount = 1;</code>
     */
    public int getCbCount() {
      return cbCount_;
    }
    /**
     * <pre>
     *打中鱼的数目
     * </pre>
     *
     * <code>required int32 cbCount = 1;</code>
     */
    private void setCbCount(int value) {
      bitField0_ |= 0x00000001;
      cbCount_ = value;
    }
    /**
     * <pre>
     *打中鱼的数目
     * </pre>
     *
     * <code>required int32 cbCount = 1;</code>
     */
    private void clearCbCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cbCount_ = 0;
    }

    public static final int CBCHAIRID_FIELD_NUMBER = 2;
    private int cbChairID_;
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>required int32 cbChairID = 2;</code>
     */
    public boolean hasCbChairID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>required int32 cbChairID = 2;</code>
     */
    public int getCbChairID() {
      return cbChairID_;
    }
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>required int32 cbChairID = 2;</code>
     */
    private void setCbChairID(int value) {
      bitField0_ |= 0x00000002;
      cbChairID_ = value;
    }
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>required int32 cbChairID = 2;</code>
     */
    private void clearCbChairID() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cbChairID_ = 0;
    }

    public static final int TOTALGOIN_FIELD_NUMBER = 3;
    private int totalGoin_;
    /**
     * <pre>
     *玩家当前分数
     * </pre>
     *
     * <code>required int32 totalGoin = 3;</code>
     */
    public boolean hasTotalGoin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *玩家当前分数
     * </pre>
     *
     * <code>required int32 totalGoin = 3;</code>
     */
    public int getTotalGoin() {
      return totalGoin_;
    }
    /**
     * <pre>
     *玩家当前分数
     * </pre>
     *
     * <code>required int32 totalGoin = 3;</code>
     */
    private void setTotalGoin(int value) {
      bitField0_ |= 0x00000004;
      totalGoin_ = value;
    }
    /**
     * <pre>
     *玩家当前分数
     * </pre>
     *
     * <code>required int32 totalGoin = 3;</code>
     */
    private void clearTotalGoin() {
      bitField0_ = (bitField0_ & ~0x00000004);
      totalGoin_ = 0;
    }

    public static final int ADDGOIN_FIELD_NUMBER = 4;
    private int addGoin_;
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    public boolean hasAddGoin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    public int getAddGoin() {
      return addGoin_;
    }
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    private void setAddGoin(int value) {
      bitField0_ |= 0x00000008;
      addGoin_ = value;
    }
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    private void clearAddGoin() {
      bitField0_ = (bitField0_ & ~0x00000008);
      addGoin_ = 0;
    }

    public static final int FISHIDS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<com.game.Protobuf.GameServer.Fish_Object> fishIDs_;
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishIDsList() {
      return fishIDs_;
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    public java.util.List<? extends com.game.Protobuf.GameServer.Fish_ObjectOrBuilder> 
        getFishIDsOrBuilderList() {
      return fishIDs_;
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    public int getFishIDsCount() {
      return fishIDs_.size();
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    public com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index) {
      return fishIDs_.get(index);
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    public com.game.Protobuf.GameServer.Fish_ObjectOrBuilder getFishIDsOrBuilder(
        int index) {
      return fishIDs_.get(index);
    }
    private void ensureFishIDsIsMutable() {
      if (!fishIDs_.isModifiable()) {
        fishIDs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
       }
    }

    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.set(index, value);
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void addFishIDs(com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(value);
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(index, value);
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void addFishIDs(
        com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(builderForValue.build());
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void addAllFishIDs(
        java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
      ensureFishIDsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, fishIDs_);
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void clearFishIDs() {
      fishIDs_ = emptyProtobufList();
    }
    /**
     * <pre>
     *打中的鱼
     * </pre>
     *
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void removeFishIDs(int index) {
      ensureFishIDsIsMutable();
      fishIDs_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cbCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cbChairID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, totalGoin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, addGoin_);
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        output.writeMessage(6, fishIDs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cbCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cbChairID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, totalGoin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, addGoin_);
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, fishIDs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SGOMs_Cast_Nets_Success}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMs_Cast_Nets_Success)
        com.game.Protobuf.GameServer.SGOMs_Cast_Nets_SuccessOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *打中鱼的数目
       * </pre>
       *
       * <code>required int32 cbCount = 1;</code>
       */
      public boolean hasCbCount() {
        return instance.hasCbCount();
      }
      /**
       * <pre>
       *打中鱼的数目
       * </pre>
       *
       * <code>required int32 cbCount = 1;</code>
       */
      public int getCbCount() {
        return instance.getCbCount();
      }
      /**
       * <pre>
       *打中鱼的数目
       * </pre>
       *
       * <code>required int32 cbCount = 1;</code>
       */
      public Builder setCbCount(int value) {
        copyOnWrite();
        instance.setCbCount(value);
        return this;
      }
      /**
       * <pre>
       *打中鱼的数目
       * </pre>
       *
       * <code>required int32 cbCount = 1;</code>
       */
      public Builder clearCbCount() {
        copyOnWrite();
        instance.clearCbCount();
        return this;
      }

      /**
       * <pre>
       *玩家信息
       * </pre>
       *
       * <code>required int32 cbChairID = 2;</code>
       */
      public boolean hasCbChairID() {
        return instance.hasCbChairID();
      }
      /**
       * <pre>
       *玩家信息
       * </pre>
       *
       * <code>required int32 cbChairID = 2;</code>
       */
      public int getCbChairID() {
        return instance.getCbChairID();
      }
      /**
       * <pre>
       *玩家信息
       * </pre>
       *
       * <code>required int32 cbChairID = 2;</code>
       */
      public Builder setCbChairID(int value) {
        copyOnWrite();
        instance.setCbChairID(value);
        return this;
      }
      /**
       * <pre>
       *玩家信息
       * </pre>
       *
       * <code>required int32 cbChairID = 2;</code>
       */
      public Builder clearCbChairID() {
        copyOnWrite();
        instance.clearCbChairID();
        return this;
      }

      /**
       * <pre>
       *玩家当前分数
       * </pre>
       *
       * <code>required int32 totalGoin = 3;</code>
       */
      public boolean hasTotalGoin() {
        return instance.hasTotalGoin();
      }
      /**
       * <pre>
       *玩家当前分数
       * </pre>
       *
       * <code>required int32 totalGoin = 3;</code>
       */
      public int getTotalGoin() {
        return instance.getTotalGoin();
      }
      /**
       * <pre>
       *玩家当前分数
       * </pre>
       *
       * <code>required int32 totalGoin = 3;</code>
       */
      public Builder setTotalGoin(int value) {
        copyOnWrite();
        instance.setTotalGoin(value);
        return this;
      }
      /**
       * <pre>
       *玩家当前分数
       * </pre>
       *
       * <code>required int32 totalGoin = 3;</code>
       */
      public Builder clearTotalGoin() {
        copyOnWrite();
        instance.clearTotalGoin();
        return this;
      }

      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public boolean hasAddGoin() {
        return instance.hasAddGoin();
      }
      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public int getAddGoin() {
        return instance.getAddGoin();
      }
      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public Builder setAddGoin(int value) {
        copyOnWrite();
        instance.setAddGoin(value);
        return this;
      }
      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public Builder clearAddGoin() {
        copyOnWrite();
        instance.clearAddGoin();
        return this;
      }

      /**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishIDsList() {
        return java.util.Collections.unmodifiableList(
            instance.getFishIDsList());
      }
      /**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public int getFishIDsCount() {
        return instance.getFishIDsCount();
      }/**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index) {
        return instance.getFishIDs(index);
      }
      /**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.setFishIDs(index, value);
        return this;
      }
      /**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.setFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishIDs(value);
        return this;
      }
      /**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishIDs(index, value);
        return this;
      }
      /**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(
          com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(builderForValue);
        return this;
      }
      /**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder addAllFishIDs(
          java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
        copyOnWrite();
        instance.addAllFishIDs(values);
        return this;
      }
      /**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder clearFishIDs() {
        copyOnWrite();
        instance.clearFishIDs();
        return this;
      }
      /**
       * <pre>
       *打中的鱼
       * </pre>
       *
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder removeFishIDs(int index) {
        copyOnWrite();
        instance.removeFishIDs(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMs_Cast_Nets_Success)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasCbCount()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCbChairID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasTotalGoin()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAddGoin()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getFishIDsCount(); i++) {
            if (!getFishIDs(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          fishIDs_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success other = (com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success) arg1;
          cbCount_ = visitor.visitInt(
              hasCbCount(), cbCount_,
              other.hasCbCount(), other.cbCount_);
          cbChairID_ = visitor.visitInt(
              hasCbChairID(), cbChairID_,
              other.hasCbChairID(), other.cbChairID_);
          totalGoin_ = visitor.visitInt(
              hasTotalGoin(), totalGoin_,
              other.hasTotalGoin(), other.totalGoin_);
          addGoin_ = visitor.visitInt(
              hasAddGoin(), addGoin_,
              other.hasAddGoin(), other.addGoin_);
          fishIDs_= visitor.visitList(fishIDs_, other.fishIDs_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  cbCount_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  cbChairID_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  totalGoin_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  addGoin_ = input.readInt32();
                  break;
                }
                case 50: {
                  if (!fishIDs_.isModifiable()) {
                    fishIDs_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
                  }
                  fishIDs_.add(
                      input.readMessage(com.game.Protobuf.GameServer.Fish_Object.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMs_Cast_Nets_Success)
    private static final com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMs_Cast_Nets_Success();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMs_Cast_Nets_Success getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMs_Cast_Nets_Success> PARSER;

    public static com.google.protobuf.Parser<SGOMs_Cast_Nets_Success> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SGOMs_Get_ItemLockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMs_Get_ItemLock)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 gameID = 1;</code>
     */
    boolean hasGameID();
    /**
     * <code>required int32 gameID = 1;</code>
     */
    int getGameID();
  }
  /**
   * <pre>
   *锁定的道具
   * </pre>
   *
   * Protobuf type {@code com.game.Protobuf.SGOMs_Get_ItemLock}
   */
  public  static final class SGOMs_Get_ItemLock extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMs_Get_ItemLock, SGOMs_Get_ItemLock.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMs_Get_ItemLock)
      SGOMs_Get_ItemLockOrBuilder {
    private SGOMs_Get_ItemLock() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameID_;
    /**
     * <code>required int32 gameID = 1;</code>
     */
    public boolean hasGameID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 gameID = 1;</code>
     */
    public int getGameID() {
      return gameID_;
    }
    /**
     * <code>required int32 gameID = 1;</code>
     */
    private void setGameID(int value) {
      bitField0_ |= 0x00000001;
      gameID_ = value;
    }
    /**
     * <code>required int32 gameID = 1;</code>
     */
    private void clearGameID() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameID_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gameID_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gameID_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemLock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemLock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemLock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemLock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemLock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemLock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemLock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemLock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemLock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemLock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMs_Get_ItemLock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *锁定的道具
     * </pre>
     *
     * Protobuf type {@code com.game.Protobuf.SGOMs_Get_ItemLock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMs_Get_ItemLock, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMs_Get_ItemLock)
        com.game.Protobuf.GameServer.SGOMs_Get_ItemLockOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMs_Get_ItemLock.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 gameID = 1;</code>
       */
      public boolean hasGameID() {
        return instance.hasGameID();
      }
      /**
       * <code>required int32 gameID = 1;</code>
       */
      public int getGameID() {
        return instance.getGameID();
      }
      /**
       * <code>required int32 gameID = 1;</code>
       */
      public Builder setGameID(int value) {
        copyOnWrite();
        instance.setGameID(value);
        return this;
      }
      /**
       * <code>required int32 gameID = 1;</code>
       */
      public Builder clearGameID() {
        copyOnWrite();
        instance.clearGameID();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMs_Get_ItemLock)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMs_Get_ItemLock();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMs_Get_ItemLock other = (com.game.Protobuf.GameServer.SGOMs_Get_ItemLock) arg1;
          gameID_ = visitor.visitInt(
              hasGameID(), gameID_,
              other.hasGameID(), other.gameID_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameID_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMs_Get_ItemLock.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMs_Get_ItemLock)
    private static final com.game.Protobuf.GameServer.SGOMs_Get_ItemLock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMs_Get_ItemLock();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemLock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMs_Get_ItemLock> PARSER;

    public static com.google.protobuf.Parser<SGOMs_Get_ItemLock> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SGOMs_Get_ItemStopOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMs_Get_ItemStop)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 gameID = 1;</code>
     */
    boolean hasGameID();
    /**
     * <code>required int32 gameID = 1;</code>
     */
    int getGameID();
  }
  /**
   * <pre>
   *定屏道具
   * </pre>
   *
   * Protobuf type {@code com.game.Protobuf.SGOMs_Get_ItemStop}
   */
  public  static final class SGOMs_Get_ItemStop extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMs_Get_ItemStop, SGOMs_Get_ItemStop.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMs_Get_ItemStop)
      SGOMs_Get_ItemStopOrBuilder {
    private SGOMs_Get_ItemStop() {
    }
    private int bitField0_;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameID_;
    /**
     * <code>required int32 gameID = 1;</code>
     */
    public boolean hasGameID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 gameID = 1;</code>
     */
    public int getGameID() {
      return gameID_;
    }
    /**
     * <code>required int32 gameID = 1;</code>
     */
    private void setGameID(int value) {
      bitField0_ |= 0x00000001;
      gameID_ = value;
    }
    /**
     * <code>required int32 gameID = 1;</code>
     */
    private void clearGameID() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gameID_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gameID_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gameID_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemStop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemStop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemStop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemStop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemStop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemStop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemStop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemStop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemStop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemStop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMs_Get_ItemStop prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *定屏道具
     * </pre>
     *
     * Protobuf type {@code com.game.Protobuf.SGOMs_Get_ItemStop}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMs_Get_ItemStop, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMs_Get_ItemStop)
        com.game.Protobuf.GameServer.SGOMs_Get_ItemStopOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMs_Get_ItemStop.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 gameID = 1;</code>
       */
      public boolean hasGameID() {
        return instance.hasGameID();
      }
      /**
       * <code>required int32 gameID = 1;</code>
       */
      public int getGameID() {
        return instance.getGameID();
      }
      /**
       * <code>required int32 gameID = 1;</code>
       */
      public Builder setGameID(int value) {
        copyOnWrite();
        instance.setGameID(value);
        return this;
      }
      /**
       * <code>required int32 gameID = 1;</code>
       */
      public Builder clearGameID() {
        copyOnWrite();
        instance.clearGameID();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMs_Get_ItemStop)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMs_Get_ItemStop();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGameID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMs_Get_ItemStop other = (com.game.Protobuf.GameServer.SGOMs_Get_ItemStop) arg1;
          gameID_ = visitor.visitInt(
              hasGameID(), gameID_,
              other.hasGameID(), other.gameID_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gameID_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMs_Get_ItemStop.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMs_Get_ItemStop)
    private static final com.game.Protobuf.GameServer.SGOMs_Get_ItemStop DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMs_Get_ItemStop();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMs_Get_ItemStop getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMs_Get_ItemStop> PARSER;

    public static com.google.protobuf.Parser<SGOMs_Get_ItemStop> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface COGMs_OnFireOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.COGMs_OnFire)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required float fRote = 1;</code>
     */
    boolean hasFRote();
    /**
     * <code>required float fRote = 1;</code>
     */
    float getFRote();

    /**
     * <code>required int32 canonlv = 2;</code>
     */
    boolean hasCanonlv();
    /**
     * <code>required int32 canonlv = 2;</code>
     */
    int getCanonlv();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.COGMs_OnFire}
   */
  public  static final class COGMs_OnFire extends
      com.google.protobuf.GeneratedMessageLite<
          COGMs_OnFire, COGMs_OnFire.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.COGMs_OnFire)
      COGMs_OnFireOrBuilder {
    private COGMs_OnFire() {
    }
    private int bitField0_;
    public static final int FROTE_FIELD_NUMBER = 1;
    private float fRote_;
    /**
     * <code>required float fRote = 1;</code>
     */
    public boolean hasFRote() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float fRote = 1;</code>
     */
    public float getFRote() {
      return fRote_;
    }
    /**
     * <code>required float fRote = 1;</code>
     */
    private void setFRote(float value) {
      bitField0_ |= 0x00000001;
      fRote_ = value;
    }
    /**
     * <code>required float fRote = 1;</code>
     */
    private void clearFRote() {
      bitField0_ = (bitField0_ & ~0x00000001);
      fRote_ = 0F;
    }

    public static final int CANONLV_FIELD_NUMBER = 2;
    private int canonlv_;
    /**
     * <code>required int32 canonlv = 2;</code>
     */
    public boolean hasCanonlv() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 canonlv = 2;</code>
     */
    public int getCanonlv() {
      return canonlv_;
    }
    /**
     * <code>required int32 canonlv = 2;</code>
     */
    private void setCanonlv(int value) {
      bitField0_ |= 0x00000002;
      canonlv_ = value;
    }
    /**
     * <code>required int32 canonlv = 2;</code>
     */
    private void clearCanonlv() {
      bitField0_ = (bitField0_ & ~0x00000002);
      canonlv_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, fRote_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, canonlv_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, fRote_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, canonlv_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.COGMs_OnFire parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.COGMs_OnFire parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_OnFire parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.COGMs_OnFire parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_OnFire parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_OnFire parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_OnFire parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_OnFire parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_OnFire parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_OnFire parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.COGMs_OnFire prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.COGMs_OnFire}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.COGMs_OnFire, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.COGMs_OnFire)
        com.game.Protobuf.GameServer.COGMs_OnFireOrBuilder {
      // Construct using com.game.Protobuf.GameServer.COGMs_OnFire.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required float fRote = 1;</code>
       */
      public boolean hasFRote() {
        return instance.hasFRote();
      }
      /**
       * <code>required float fRote = 1;</code>
       */
      public float getFRote() {
        return instance.getFRote();
      }
      /**
       * <code>required float fRote = 1;</code>
       */
      public Builder setFRote(float value) {
        copyOnWrite();
        instance.setFRote(value);
        return this;
      }
      /**
       * <code>required float fRote = 1;</code>
       */
      public Builder clearFRote() {
        copyOnWrite();
        instance.clearFRote();
        return this;
      }

      /**
       * <code>required int32 canonlv = 2;</code>
       */
      public boolean hasCanonlv() {
        return instance.hasCanonlv();
      }
      /**
       * <code>required int32 canonlv = 2;</code>
       */
      public int getCanonlv() {
        return instance.getCanonlv();
      }
      /**
       * <code>required int32 canonlv = 2;</code>
       */
      public Builder setCanonlv(int value) {
        copyOnWrite();
        instance.setCanonlv(value);
        return this;
      }
      /**
       * <code>required int32 canonlv = 2;</code>
       */
      public Builder clearCanonlv() {
        copyOnWrite();
        instance.clearCanonlv();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.COGMs_OnFire)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.COGMs_OnFire();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFRote()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCanonlv()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.COGMs_OnFire other = (com.game.Protobuf.GameServer.COGMs_OnFire) arg1;
          fRote_ = visitor.visitFloat(
              hasFRote(), fRote_,
              other.hasFRote(), other.fRote_);
          canonlv_ = visitor.visitInt(
              hasCanonlv(), canonlv_,
              other.hasCanonlv(), other.canonlv_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 13: {
                  bitField0_ |= 0x00000001;
                  fRote_ = input.readFloat();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  canonlv_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.COGMs_OnFire.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.COGMs_OnFire)
    private static final com.game.Protobuf.GameServer.COGMs_OnFire DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new COGMs_OnFire();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.COGMs_OnFire getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<COGMs_OnFire> PARSER;

    public static com.google.protobuf.Parser<COGMs_OnFire> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface COGMs_Cast_NetsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.COGMs_Cast_Nets)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 cbCount = 1;</code>
     */
    boolean hasCbCount();
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    int getCbCount();

    /**
     * <code>required int32 wRatio = 2;</code>
     */
    boolean hasWRatio();
    /**
     * <code>required int32 wRatio = 2;</code>
     */
    int getWRatio();

    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    java.util.List<com.game.Protobuf.GameServer.Fish_Object> 
        getFishIDsList();
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index);
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    int getFishIDsCount();
  }
  /**
   * <pre>
   *撒网消息
   * </pre>
   *
   * Protobuf type {@code com.game.Protobuf.COGMs_Cast_Nets}
   */
  public  static final class COGMs_Cast_Nets extends
      com.google.protobuf.GeneratedMessageLite<
          COGMs_Cast_Nets, COGMs_Cast_Nets.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.COGMs_Cast_Nets)
      COGMs_Cast_NetsOrBuilder {
    private COGMs_Cast_Nets() {
      fishIDs_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int CBCOUNT_FIELD_NUMBER = 1;
    private int cbCount_;
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    public boolean hasCbCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    public int getCbCount() {
      return cbCount_;
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    private void setCbCount(int value) {
      bitField0_ |= 0x00000001;
      cbCount_ = value;
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    private void clearCbCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cbCount_ = 0;
    }

    public static final int WRATIO_FIELD_NUMBER = 2;
    private int wRatio_;
    /**
     * <code>required int32 wRatio = 2;</code>
     */
    public boolean hasWRatio() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 wRatio = 2;</code>
     */
    public int getWRatio() {
      return wRatio_;
    }
    /**
     * <code>required int32 wRatio = 2;</code>
     */
    private void setWRatio(int value) {
      bitField0_ |= 0x00000002;
      wRatio_ = value;
    }
    /**
     * <code>required int32 wRatio = 2;</code>
     */
    private void clearWRatio() {
      bitField0_ = (bitField0_ & ~0x00000002);
      wRatio_ = 0;
    }

    public static final int FISHIDS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.game.Protobuf.GameServer.Fish_Object> fishIDs_;
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishIDsList() {
      return fishIDs_;
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    public java.util.List<? extends com.game.Protobuf.GameServer.Fish_ObjectOrBuilder> 
        getFishIDsOrBuilderList() {
      return fishIDs_;
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    public int getFishIDsCount() {
      return fishIDs_.size();
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    public com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index) {
      return fishIDs_.get(index);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    public com.game.Protobuf.GameServer.Fish_ObjectOrBuilder getFishIDsOrBuilder(
        int index) {
      return fishIDs_.get(index);
    }
    private void ensureFishIDsIsMutable() {
      if (!fishIDs_.isModifiable()) {
        fishIDs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
       }
    }

    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.set(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void addFishIDs(com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void addFishIDs(
        com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void addAllFishIDs(
        java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
      ensureFishIDsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, fishIDs_);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void clearFishIDs() {
      fishIDs_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void removeFishIDs(int index) {
      ensureFishIDsIsMutable();
      fishIDs_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cbCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, wRatio_);
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        output.writeMessage(3, fishIDs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cbCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, wRatio_);
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fishIDs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.COGMs_Cast_Nets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.COGMs_Cast_Nets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_Cast_Nets parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.COGMs_Cast_Nets parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_Cast_Nets parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_Cast_Nets parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_Cast_Nets parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_Cast_Nets parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_Cast_Nets parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_Cast_Nets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.COGMs_Cast_Nets prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *撒网消息
     * </pre>
     *
     * Protobuf type {@code com.game.Protobuf.COGMs_Cast_Nets}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.COGMs_Cast_Nets, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.COGMs_Cast_Nets)
        com.game.Protobuf.GameServer.COGMs_Cast_NetsOrBuilder {
      // Construct using com.game.Protobuf.GameServer.COGMs_Cast_Nets.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public boolean hasCbCount() {
        return instance.hasCbCount();
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public int getCbCount() {
        return instance.getCbCount();
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public Builder setCbCount(int value) {
        copyOnWrite();
        instance.setCbCount(value);
        return this;
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public Builder clearCbCount() {
        copyOnWrite();
        instance.clearCbCount();
        return this;
      }

      /**
       * <code>required int32 wRatio = 2;</code>
       */
      public boolean hasWRatio() {
        return instance.hasWRatio();
      }
      /**
       * <code>required int32 wRatio = 2;</code>
       */
      public int getWRatio() {
        return instance.getWRatio();
      }
      /**
       * <code>required int32 wRatio = 2;</code>
       */
      public Builder setWRatio(int value) {
        copyOnWrite();
        instance.setWRatio(value);
        return this;
      }
      /**
       * <code>required int32 wRatio = 2;</code>
       */
      public Builder clearWRatio() {
        copyOnWrite();
        instance.clearWRatio();
        return this;
      }

      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishIDsList() {
        return java.util.Collections.unmodifiableList(
            instance.getFishIDsList());
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public int getFishIDsCount() {
        return instance.getFishIDsCount();
      }/**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index) {
        return instance.getFishIDs(index);
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.setFishIDs(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.setFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishIDs(value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishIDs(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(
          com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder addAllFishIDs(
          java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
        copyOnWrite();
        instance.addAllFishIDs(values);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder clearFishIDs() {
        copyOnWrite();
        instance.clearFishIDs();
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder removeFishIDs(int index) {
        copyOnWrite();
        instance.removeFishIDs(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.COGMs_Cast_Nets)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.COGMs_Cast_Nets();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasCbCount()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasWRatio()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getFishIDsCount(); i++) {
            if (!getFishIDs(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          fishIDs_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.COGMs_Cast_Nets other = (com.game.Protobuf.GameServer.COGMs_Cast_Nets) arg1;
          cbCount_ = visitor.visitInt(
              hasCbCount(), cbCount_,
              other.hasCbCount(), other.cbCount_);
          wRatio_ = visitor.visitInt(
              hasWRatio(), wRatio_,
              other.hasWRatio(), other.wRatio_);
          fishIDs_= visitor.visitList(fishIDs_, other.fishIDs_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  cbCount_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  wRatio_ = input.readInt32();
                  break;
                }
                case 26: {
                  if (!fishIDs_.isModifiable()) {
                    fishIDs_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
                  }
                  fishIDs_.add(
                      input.readMessage(com.game.Protobuf.GameServer.Fish_Object.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.COGMs_Cast_Nets.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.COGMs_Cast_Nets)
    private static final com.game.Protobuf.GameServer.COGMs_Cast_Nets DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new COGMs_Cast_Nets();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.COGMs_Cast_Nets getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<COGMs_Cast_Nets> PARSER;

    public static com.google.protobuf.Parser<COGMs_Cast_Nets> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface COGMs_HitTeamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.COGMs_HitTeam)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 cbCount = 1;</code>
     */
    boolean hasCbCount();
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    int getCbCount();

    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
     */
    boolean hasHitFish();
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
     */
    com.game.Protobuf.GameServer.Fish_Object getHitFish();

    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    java.util.List<com.game.Protobuf.GameServer.Net_Object> 
        getFishIDsList();
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    com.game.Protobuf.GameServer.Net_Object getFishIDs(int index);
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    int getFishIDsCount();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.COGMs_HitTeam}
   */
  public  static final class COGMs_HitTeam extends
      com.google.protobuf.GeneratedMessageLite<
          COGMs_HitTeam, COGMs_HitTeam.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.COGMs_HitTeam)
      COGMs_HitTeamOrBuilder {
    private COGMs_HitTeam() {
      fishIDs_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int CBCOUNT_FIELD_NUMBER = 1;
    private int cbCount_;
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    public boolean hasCbCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    public int getCbCount() {
      return cbCount_;
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    private void setCbCount(int value) {
      bitField0_ |= 0x00000001;
      cbCount_ = value;
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    private void clearCbCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cbCount_ = 0;
    }

    public static final int HITFISH_FIELD_NUMBER = 2;
    private com.game.Protobuf.GameServer.Fish_Object hitFish_;
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
     */
    public boolean hasHitFish() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
     */
    public com.game.Protobuf.GameServer.Fish_Object getHitFish() {
      return hitFish_ == null ? com.game.Protobuf.GameServer.Fish_Object.getDefaultInstance() : hitFish_;
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
     */
    private void setHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hitFish_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
     */
    private void setHitFish(
        com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      hitFish_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
     */
    private void mergeHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
      if (hitFish_ != null &&
          hitFish_ != com.game.Protobuf.GameServer.Fish_Object.getDefaultInstance()) {
        hitFish_ =
          com.game.Protobuf.GameServer.Fish_Object.newBuilder(hitFish_).mergeFrom(value).buildPartial();
      } else {
        hitFish_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
     */
    private void clearHitFish() {  hitFish_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int FISHIDS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.game.Protobuf.GameServer.Net_Object> fishIDs_;
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    public java.util.List<com.game.Protobuf.GameServer.Net_Object> getFishIDsList() {
      return fishIDs_;
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    public java.util.List<? extends com.game.Protobuf.GameServer.Net_ObjectOrBuilder> 
        getFishIDsOrBuilderList() {
      return fishIDs_;
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    public int getFishIDsCount() {
      return fishIDs_.size();
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    public com.game.Protobuf.GameServer.Net_Object getFishIDs(int index) {
      return fishIDs_.get(index);
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    public com.game.Protobuf.GameServer.Net_ObjectOrBuilder getFishIDsOrBuilder(
        int index) {
      return fishIDs_.get(index);
    }
    private void ensureFishIDsIsMutable() {
      if (!fishIDs_.isModifiable()) {
        fishIDs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
       }
    }

    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Net_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.set(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    private void addFishIDs(com.game.Protobuf.GameServer.Net_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Net_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    private void addFishIDs(
        com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    private void addAllFishIDs(
        java.lang.Iterable<? extends com.game.Protobuf.GameServer.Net_Object> values) {
      ensureFishIDsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, fishIDs_);
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    private void clearFishIDs() {
      fishIDs_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
     */
    private void removeFishIDs(int index) {
      ensureFishIDsIsMutable();
      fishIDs_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cbCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getHitFish());
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        output.writeMessage(3, fishIDs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cbCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getHitFish());
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fishIDs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.COGMs_HitTeam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitTeam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitTeam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitTeam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitTeam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitTeam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitTeam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitTeam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitTeam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitTeam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.COGMs_HitTeam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.COGMs_HitTeam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.COGMs_HitTeam, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.COGMs_HitTeam)
        com.game.Protobuf.GameServer.COGMs_HitTeamOrBuilder {
      // Construct using com.game.Protobuf.GameServer.COGMs_HitTeam.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public boolean hasCbCount() {
        return instance.hasCbCount();
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public int getCbCount() {
        return instance.getCbCount();
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public Builder setCbCount(int value) {
        copyOnWrite();
        instance.setCbCount(value);
        return this;
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public Builder clearCbCount() {
        copyOnWrite();
        instance.clearCbCount();
        return this;
      }

      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
       */
      public boolean hasHitFish() {
        return instance.hasHitFish();
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
       */
      public com.game.Protobuf.GameServer.Fish_Object getHitFish() {
        return instance.getHitFish();
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
       */
      public Builder setHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.setHitFish(value);
        return this;
        }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
       */
      public Builder setHitFish(
          com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.setHitFish(builderForValue);
        return this;
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
       */
      public Builder mergeHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.mergeHitFish(value);
        return this;
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 2;</code>
       */
      public Builder clearHitFish() {  copyOnWrite();
        instance.clearHitFish();
        return this;
      }

      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public java.util.List<com.game.Protobuf.GameServer.Net_Object> getFishIDsList() {
        return java.util.Collections.unmodifiableList(
            instance.getFishIDsList());
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public int getFishIDsCount() {
        return instance.getFishIDsCount();
      }/**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public com.game.Protobuf.GameServer.Net_Object getFishIDs(int index) {
        return instance.getFishIDs(index);
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Net_Object value) {
        copyOnWrite();
        instance.setFishIDs(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
        copyOnWrite();
        instance.setFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(com.game.Protobuf.GameServer.Net_Object value) {
        copyOnWrite();
        instance.addFishIDs(value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Net_Object value) {
        copyOnWrite();
        instance.addFishIDs(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(
          com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public Builder addAllFishIDs(
          java.lang.Iterable<? extends com.game.Protobuf.GameServer.Net_Object> values) {
        copyOnWrite();
        instance.addAllFishIDs(values);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public Builder clearFishIDs() {
        copyOnWrite();
        instance.clearFishIDs();
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 3;</code>
       */
      public Builder removeFishIDs(int index) {
        copyOnWrite();
        instance.removeFishIDs(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.COGMs_HitTeam)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.COGMs_HitTeam();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasCbCount()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasHitFish()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getHitFish().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getFishIDsCount(); i++) {
            if (!getFishIDs(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          fishIDs_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.COGMs_HitTeam other = (com.game.Protobuf.GameServer.COGMs_HitTeam) arg1;
          cbCount_ = visitor.visitInt(
              hasCbCount(), cbCount_,
              other.hasCbCount(), other.cbCount_);
          hitFish_ = visitor.visitMessage(hitFish_, other.hitFish_);
          fishIDs_= visitor.visitList(fishIDs_, other.fishIDs_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  cbCount_ = input.readInt32();
                  break;
                }
                case 18: {
                  com.game.Protobuf.GameServer.Fish_Object.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = hitFish_.toBuilder();
                  }
                  hitFish_ = input.readMessage(com.game.Protobuf.GameServer.Fish_Object.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hitFish_);
                    hitFish_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 26: {
                  if (!fishIDs_.isModifiable()) {
                    fishIDs_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
                  }
                  fishIDs_.add(
                      input.readMessage(com.game.Protobuf.GameServer.Net_Object.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.COGMs_HitTeam.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.COGMs_HitTeam)
    private static final com.game.Protobuf.GameServer.COGMs_HitTeam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new COGMs_HitTeam();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.COGMs_HitTeam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<COGMs_HitTeam> PARSER;

    public static com.google.protobuf.Parser<COGMs_HitTeam> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SGOMs_HitTeam_SuccessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMs_HitTeam_Success)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 cbCount = 1;</code>
     */
    boolean hasCbCount();
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    int getCbCount();

    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    boolean hasCbChairID();
    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    int getCbChairID();

    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    boolean hasTotalGoin();
    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    int getTotalGoin();

    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    boolean hasAddGoin();
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    int getAddGoin();

    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    boolean hasHitFish();
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    com.game.Protobuf.GameServer.Fish_Object getHitFish();

    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    java.util.List<com.game.Protobuf.GameServer.Net_Object> 
        getFishIDsList();
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    com.game.Protobuf.GameServer.Net_Object getFishIDs(int index);
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    int getFishIDsCount();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SGOMs_HitTeam_Success}
   */
  public  static final class SGOMs_HitTeam_Success extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMs_HitTeam_Success, SGOMs_HitTeam_Success.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMs_HitTeam_Success)
      SGOMs_HitTeam_SuccessOrBuilder {
    private SGOMs_HitTeam_Success() {
      fishIDs_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int CBCOUNT_FIELD_NUMBER = 1;
    private int cbCount_;
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    public boolean hasCbCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    public int getCbCount() {
      return cbCount_;
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    private void setCbCount(int value) {
      bitField0_ |= 0x00000001;
      cbCount_ = value;
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    private void clearCbCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cbCount_ = 0;
    }

    public static final int CBCHAIRID_FIELD_NUMBER = 2;
    private int cbChairID_;
    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    public boolean hasCbChairID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    public int getCbChairID() {
      return cbChairID_;
    }
    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    private void setCbChairID(int value) {
      bitField0_ |= 0x00000002;
      cbChairID_ = value;
    }
    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    private void clearCbChairID() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cbChairID_ = 0;
    }

    public static final int TOTALGOIN_FIELD_NUMBER = 3;
    private int totalGoin_;
    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    public boolean hasTotalGoin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    public int getTotalGoin() {
      return totalGoin_;
    }
    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    private void setTotalGoin(int value) {
      bitField0_ |= 0x00000004;
      totalGoin_ = value;
    }
    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    private void clearTotalGoin() {
      bitField0_ = (bitField0_ & ~0x00000004);
      totalGoin_ = 0;
    }

    public static final int ADDGOIN_FIELD_NUMBER = 4;
    private int addGoin_;
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    public boolean hasAddGoin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    public int getAddGoin() {
      return addGoin_;
    }
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    private void setAddGoin(int value) {
      bitField0_ |= 0x00000008;
      addGoin_ = value;
    }
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    private void clearAddGoin() {
      bitField0_ = (bitField0_ & ~0x00000008);
      addGoin_ = 0;
    }

    public static final int HITFISH_FIELD_NUMBER = 5;
    private com.game.Protobuf.GameServer.Fish_Object hitFish_;
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    public boolean hasHitFish() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    public com.game.Protobuf.GameServer.Fish_Object getHitFish() {
      return hitFish_ == null ? com.game.Protobuf.GameServer.Fish_Object.getDefaultInstance() : hitFish_;
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    private void setHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hitFish_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    private void setHitFish(
        com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      hitFish_ = builderForValue.build();
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    private void mergeHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
      if (hitFish_ != null &&
          hitFish_ != com.game.Protobuf.GameServer.Fish_Object.getDefaultInstance()) {
        hitFish_ =
          com.game.Protobuf.GameServer.Fish_Object.newBuilder(hitFish_).mergeFrom(value).buildPartial();
      } else {
        hitFish_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    private void clearHitFish() {  hitFish_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int FISHIDS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<com.game.Protobuf.GameServer.Net_Object> fishIDs_;
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    public java.util.List<com.game.Protobuf.GameServer.Net_Object> getFishIDsList() {
      return fishIDs_;
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    public java.util.List<? extends com.game.Protobuf.GameServer.Net_ObjectOrBuilder> 
        getFishIDsOrBuilderList() {
      return fishIDs_;
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    public int getFishIDsCount() {
      return fishIDs_.size();
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    public com.game.Protobuf.GameServer.Net_Object getFishIDs(int index) {
      return fishIDs_.get(index);
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    public com.game.Protobuf.GameServer.Net_ObjectOrBuilder getFishIDsOrBuilder(
        int index) {
      return fishIDs_.get(index);
    }
    private void ensureFishIDsIsMutable() {
      if (!fishIDs_.isModifiable()) {
        fishIDs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
       }
    }

    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Net_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.set(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    private void addFishIDs(com.game.Protobuf.GameServer.Net_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Net_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    private void addFishIDs(
        com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    private void addAllFishIDs(
        java.lang.Iterable<? extends com.game.Protobuf.GameServer.Net_Object> values) {
      ensureFishIDsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, fishIDs_);
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    private void clearFishIDs() {
      fishIDs_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
     */
    private void removeFishIDs(int index) {
      ensureFishIDsIsMutable();
      fishIDs_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cbCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cbChairID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, totalGoin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, addGoin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getHitFish());
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        output.writeMessage(6, fishIDs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cbCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cbChairID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, totalGoin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, addGoin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getHitFish());
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, fishIDs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMs_HitTeam_Success parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitTeam_Success parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitTeam_Success parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitTeam_Success parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitTeam_Success parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitTeam_Success parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitTeam_Success parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitTeam_Success parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitTeam_Success parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitTeam_Success parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMs_HitTeam_Success prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SGOMs_HitTeam_Success}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMs_HitTeam_Success, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMs_HitTeam_Success)
        com.game.Protobuf.GameServer.SGOMs_HitTeam_SuccessOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMs_HitTeam_Success.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public boolean hasCbCount() {
        return instance.hasCbCount();
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public int getCbCount() {
        return instance.getCbCount();
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public Builder setCbCount(int value) {
        copyOnWrite();
        instance.setCbCount(value);
        return this;
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public Builder clearCbCount() {
        copyOnWrite();
        instance.clearCbCount();
        return this;
      }

      /**
       * <code>required int32 cbChairID = 2;</code>
       */
      public boolean hasCbChairID() {
        return instance.hasCbChairID();
      }
      /**
       * <code>required int32 cbChairID = 2;</code>
       */
      public int getCbChairID() {
        return instance.getCbChairID();
      }
      /**
       * <code>required int32 cbChairID = 2;</code>
       */
      public Builder setCbChairID(int value) {
        copyOnWrite();
        instance.setCbChairID(value);
        return this;
      }
      /**
       * <code>required int32 cbChairID = 2;</code>
       */
      public Builder clearCbChairID() {
        copyOnWrite();
        instance.clearCbChairID();
        return this;
      }

      /**
       * <code>required int32 totalGoin = 3;</code>
       */
      public boolean hasTotalGoin() {
        return instance.hasTotalGoin();
      }
      /**
       * <code>required int32 totalGoin = 3;</code>
       */
      public int getTotalGoin() {
        return instance.getTotalGoin();
      }
      /**
       * <code>required int32 totalGoin = 3;</code>
       */
      public Builder setTotalGoin(int value) {
        copyOnWrite();
        instance.setTotalGoin(value);
        return this;
      }
      /**
       * <code>required int32 totalGoin = 3;</code>
       */
      public Builder clearTotalGoin() {
        copyOnWrite();
        instance.clearTotalGoin();
        return this;
      }

      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public boolean hasAddGoin() {
        return instance.hasAddGoin();
      }
      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public int getAddGoin() {
        return instance.getAddGoin();
      }
      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public Builder setAddGoin(int value) {
        copyOnWrite();
        instance.setAddGoin(value);
        return this;
      }
      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public Builder clearAddGoin() {
        copyOnWrite();
        instance.clearAddGoin();
        return this;
      }

      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public boolean hasHitFish() {
        return instance.hasHitFish();
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public com.game.Protobuf.GameServer.Fish_Object getHitFish() {
        return instance.getHitFish();
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public Builder setHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.setHitFish(value);
        return this;
        }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public Builder setHitFish(
          com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.setHitFish(builderForValue);
        return this;
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public Builder mergeHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.mergeHitFish(value);
        return this;
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public Builder clearHitFish() {  copyOnWrite();
        instance.clearHitFish();
        return this;
      }

      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public java.util.List<com.game.Protobuf.GameServer.Net_Object> getFishIDsList() {
        return java.util.Collections.unmodifiableList(
            instance.getFishIDsList());
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public int getFishIDsCount() {
        return instance.getFishIDsCount();
      }/**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public com.game.Protobuf.GameServer.Net_Object getFishIDs(int index) {
        return instance.getFishIDs(index);
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Net_Object value) {
        copyOnWrite();
        instance.setFishIDs(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
        copyOnWrite();
        instance.setFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(com.game.Protobuf.GameServer.Net_Object value) {
        copyOnWrite();
        instance.addFishIDs(value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Net_Object value) {
        copyOnWrite();
        instance.addFishIDs(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(
          com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Net_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public Builder addAllFishIDs(
          java.lang.Iterable<? extends com.game.Protobuf.GameServer.Net_Object> values) {
        copyOnWrite();
        instance.addAllFishIDs(values);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public Builder clearFishIDs() {
        copyOnWrite();
        instance.clearFishIDs();
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Net_Object FishIDs = 6;</code>
       */
      public Builder removeFishIDs(int index) {
        copyOnWrite();
        instance.removeFishIDs(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMs_HitTeam_Success)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMs_HitTeam_Success();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasCbCount()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCbChairID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasTotalGoin()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAddGoin()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasHitFish()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getHitFish().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getFishIDsCount(); i++) {
            if (!getFishIDs(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          fishIDs_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMs_HitTeam_Success other = (com.game.Protobuf.GameServer.SGOMs_HitTeam_Success) arg1;
          cbCount_ = visitor.visitInt(
              hasCbCount(), cbCount_,
              other.hasCbCount(), other.cbCount_);
          cbChairID_ = visitor.visitInt(
              hasCbChairID(), cbChairID_,
              other.hasCbChairID(), other.cbChairID_);
          totalGoin_ = visitor.visitInt(
              hasTotalGoin(), totalGoin_,
              other.hasTotalGoin(), other.totalGoin_);
          addGoin_ = visitor.visitInt(
              hasAddGoin(), addGoin_,
              other.hasAddGoin(), other.addGoin_);
          hitFish_ = visitor.visitMessage(hitFish_, other.hitFish_);
          fishIDs_= visitor.visitList(fishIDs_, other.fishIDs_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  cbCount_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  cbChairID_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  totalGoin_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  addGoin_ = input.readInt32();
                  break;
                }
                case 42: {
                  com.game.Protobuf.GameServer.Fish_Object.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = hitFish_.toBuilder();
                  }
                  hitFish_ = input.readMessage(com.game.Protobuf.GameServer.Fish_Object.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hitFish_);
                    hitFish_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 50: {
                  if (!fishIDs_.isModifiable()) {
                    fishIDs_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
                  }
                  fishIDs_.add(
                      input.readMessage(com.game.Protobuf.GameServer.Net_Object.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMs_HitTeam_Success.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMs_HitTeam_Success)
    private static final com.game.Protobuf.GameServer.SGOMs_HitTeam_Success DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMs_HitTeam_Success();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMs_HitTeam_Success getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMs_HitTeam_Success> PARSER;

    public static com.google.protobuf.Parser<SGOMs_HitTeam_Success> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface COGMs_HitSceenBombOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.COGMs_HitSceenBomb)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 wRatio = 1;</code>
     */
    boolean hasWRatio();
    /**
     * <code>required int32 wRatio = 1;</code>
     */
    int getWRatio();

    /**
     * <code>required int32 cbCount = 2;</code>
     */
    boolean hasCbCount();
    /**
     * <code>required int32 cbCount = 2;</code>
     */
    int getCbCount();

    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    java.util.List<com.game.Protobuf.GameServer.Fish_Object> 
        getFishIDsList();
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index);
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    int getFishIDsCount();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.COGMs_HitSceenBomb}
   */
  public  static final class COGMs_HitSceenBomb extends
      com.google.protobuf.GeneratedMessageLite<
          COGMs_HitSceenBomb, COGMs_HitSceenBomb.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.COGMs_HitSceenBomb)
      COGMs_HitSceenBombOrBuilder {
    private COGMs_HitSceenBomb() {
      fishIDs_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int WRATIO_FIELD_NUMBER = 1;
    private int wRatio_;
    /**
     * <code>required int32 wRatio = 1;</code>
     */
    public boolean hasWRatio() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 wRatio = 1;</code>
     */
    public int getWRatio() {
      return wRatio_;
    }
    /**
     * <code>required int32 wRatio = 1;</code>
     */
    private void setWRatio(int value) {
      bitField0_ |= 0x00000001;
      wRatio_ = value;
    }
    /**
     * <code>required int32 wRatio = 1;</code>
     */
    private void clearWRatio() {
      bitField0_ = (bitField0_ & ~0x00000001);
      wRatio_ = 0;
    }

    public static final int CBCOUNT_FIELD_NUMBER = 2;
    private int cbCount_;
    /**
     * <code>required int32 cbCount = 2;</code>
     */
    public boolean hasCbCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 cbCount = 2;</code>
     */
    public int getCbCount() {
      return cbCount_;
    }
    /**
     * <code>required int32 cbCount = 2;</code>
     */
    private void setCbCount(int value) {
      bitField0_ |= 0x00000002;
      cbCount_ = value;
    }
    /**
     * <code>required int32 cbCount = 2;</code>
     */
    private void clearCbCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cbCount_ = 0;
    }

    public static final int FISHIDS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.game.Protobuf.GameServer.Fish_Object> fishIDs_;
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishIDsList() {
      return fishIDs_;
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    public java.util.List<? extends com.game.Protobuf.GameServer.Fish_ObjectOrBuilder> 
        getFishIDsOrBuilderList() {
      return fishIDs_;
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    public int getFishIDsCount() {
      return fishIDs_.size();
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    public com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index) {
      return fishIDs_.get(index);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    public com.game.Protobuf.GameServer.Fish_ObjectOrBuilder getFishIDsOrBuilder(
        int index) {
      return fishIDs_.get(index);
    }
    private void ensureFishIDsIsMutable() {
      if (!fishIDs_.isModifiable()) {
        fishIDs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
       }
    }

    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.set(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void addFishIDs(com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void addFishIDs(
        com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void addAllFishIDs(
        java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
      ensureFishIDsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, fishIDs_);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void clearFishIDs() {
      fishIDs_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
     */
    private void removeFishIDs(int index) {
      ensureFishIDsIsMutable();
      fishIDs_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, wRatio_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cbCount_);
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        output.writeMessage(3, fishIDs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, wRatio_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cbCount_);
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fishIDs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.COGMs_HitSceenBomb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitSceenBomb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitSceenBomb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitSceenBomb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitSceenBomb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitSceenBomb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitSceenBomb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitSceenBomb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitSceenBomb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.COGMs_HitSceenBomb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.COGMs_HitSceenBomb prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.COGMs_HitSceenBomb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.COGMs_HitSceenBomb, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.COGMs_HitSceenBomb)
        com.game.Protobuf.GameServer.COGMs_HitSceenBombOrBuilder {
      // Construct using com.game.Protobuf.GameServer.COGMs_HitSceenBomb.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 wRatio = 1;</code>
       */
      public boolean hasWRatio() {
        return instance.hasWRatio();
      }
      /**
       * <code>required int32 wRatio = 1;</code>
       */
      public int getWRatio() {
        return instance.getWRatio();
      }
      /**
       * <code>required int32 wRatio = 1;</code>
       */
      public Builder setWRatio(int value) {
        copyOnWrite();
        instance.setWRatio(value);
        return this;
      }
      /**
       * <code>required int32 wRatio = 1;</code>
       */
      public Builder clearWRatio() {
        copyOnWrite();
        instance.clearWRatio();
        return this;
      }

      /**
       * <code>required int32 cbCount = 2;</code>
       */
      public boolean hasCbCount() {
        return instance.hasCbCount();
      }
      /**
       * <code>required int32 cbCount = 2;</code>
       */
      public int getCbCount() {
        return instance.getCbCount();
      }
      /**
       * <code>required int32 cbCount = 2;</code>
       */
      public Builder setCbCount(int value) {
        copyOnWrite();
        instance.setCbCount(value);
        return this;
      }
      /**
       * <code>required int32 cbCount = 2;</code>
       */
      public Builder clearCbCount() {
        copyOnWrite();
        instance.clearCbCount();
        return this;
      }

      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishIDsList() {
        return java.util.Collections.unmodifiableList(
            instance.getFishIDsList());
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public int getFishIDsCount() {
        return instance.getFishIDsCount();
      }/**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index) {
        return instance.getFishIDs(index);
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.setFishIDs(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.setFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishIDs(value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishIDs(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(
          com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder addAllFishIDs(
          java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
        copyOnWrite();
        instance.addAllFishIDs(values);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder clearFishIDs() {
        copyOnWrite();
        instance.clearFishIDs();
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 3;</code>
       */
      public Builder removeFishIDs(int index) {
        copyOnWrite();
        instance.removeFishIDs(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.COGMs_HitSceenBomb)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.COGMs_HitSceenBomb();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasWRatio()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCbCount()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getFishIDsCount(); i++) {
            if (!getFishIDs(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          fishIDs_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.COGMs_HitSceenBomb other = (com.game.Protobuf.GameServer.COGMs_HitSceenBomb) arg1;
          wRatio_ = visitor.visitInt(
              hasWRatio(), wRatio_,
              other.hasWRatio(), other.wRatio_);
          cbCount_ = visitor.visitInt(
              hasCbCount(), cbCount_,
              other.hasCbCount(), other.cbCount_);
          fishIDs_= visitor.visitList(fishIDs_, other.fishIDs_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  wRatio_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  cbCount_ = input.readInt32();
                  break;
                }
                case 26: {
                  if (!fishIDs_.isModifiable()) {
                    fishIDs_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
                  }
                  fishIDs_.add(
                      input.readMessage(com.game.Protobuf.GameServer.Fish_Object.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.COGMs_HitSceenBomb.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.COGMs_HitSceenBomb)
    private static final com.game.Protobuf.GameServer.COGMs_HitSceenBomb DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new COGMs_HitSceenBomb();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.COGMs_HitSceenBomb getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<COGMs_HitSceenBomb> PARSER;

    public static com.google.protobuf.Parser<COGMs_HitSceenBomb> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SGOMs_HitSceenBomb_SuccessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SGOMs_HitSceenBomb_Success)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 cbCount = 1;</code>
     */
    boolean hasCbCount();
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    int getCbCount();

    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    boolean hasCbChairID();
    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    int getCbChairID();

    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    boolean hasTotalGoin();
    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    int getTotalGoin();

    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    boolean hasAddGoin();
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    int getAddGoin();

    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    boolean hasHitFish();
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    com.game.Protobuf.GameServer.Fish_Object getHitFish();

    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    java.util.List<com.game.Protobuf.GameServer.Fish_Object> 
        getFishIDsList();
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index);
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    int getFishIDsCount();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SGOMs_HitSceenBomb_Success}
   */
  public  static final class SGOMs_HitSceenBomb_Success extends
      com.google.protobuf.GeneratedMessageLite<
          SGOMs_HitSceenBomb_Success, SGOMs_HitSceenBomb_Success.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SGOMs_HitSceenBomb_Success)
      SGOMs_HitSceenBomb_SuccessOrBuilder {
    private SGOMs_HitSceenBomb_Success() {
      fishIDs_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int CBCOUNT_FIELD_NUMBER = 1;
    private int cbCount_;
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    public boolean hasCbCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    public int getCbCount() {
      return cbCount_;
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    private void setCbCount(int value) {
      bitField0_ |= 0x00000001;
      cbCount_ = value;
    }
    /**
     * <code>required int32 cbCount = 1;</code>
     */
    private void clearCbCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cbCount_ = 0;
    }

    public static final int CBCHAIRID_FIELD_NUMBER = 2;
    private int cbChairID_;
    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    public boolean hasCbChairID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    public int getCbChairID() {
      return cbChairID_;
    }
    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    private void setCbChairID(int value) {
      bitField0_ |= 0x00000002;
      cbChairID_ = value;
    }
    /**
     * <code>required int32 cbChairID = 2;</code>
     */
    private void clearCbChairID() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cbChairID_ = 0;
    }

    public static final int TOTALGOIN_FIELD_NUMBER = 3;
    private int totalGoin_;
    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    public boolean hasTotalGoin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    public int getTotalGoin() {
      return totalGoin_;
    }
    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    private void setTotalGoin(int value) {
      bitField0_ |= 0x00000004;
      totalGoin_ = value;
    }
    /**
     * <code>required int32 totalGoin = 3;</code>
     */
    private void clearTotalGoin() {
      bitField0_ = (bitField0_ & ~0x00000004);
      totalGoin_ = 0;
    }

    public static final int ADDGOIN_FIELD_NUMBER = 4;
    private int addGoin_;
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    public boolean hasAddGoin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    public int getAddGoin() {
      return addGoin_;
    }
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    private void setAddGoin(int value) {
      bitField0_ |= 0x00000008;
      addGoin_ = value;
    }
    /**
     * <pre>
     *玩家增加的分数
     * </pre>
     *
     * <code>required int32 addGoin = 4;</code>
     */
    private void clearAddGoin() {
      bitField0_ = (bitField0_ & ~0x00000008);
      addGoin_ = 0;
    }

    public static final int HITFISH_FIELD_NUMBER = 5;
    private com.game.Protobuf.GameServer.Fish_Object hitFish_;
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    public boolean hasHitFish() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    public com.game.Protobuf.GameServer.Fish_Object getHitFish() {
      return hitFish_ == null ? com.game.Protobuf.GameServer.Fish_Object.getDefaultInstance() : hitFish_;
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    private void setHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hitFish_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    private void setHitFish(
        com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      hitFish_ = builderForValue.build();
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    private void mergeHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
      if (hitFish_ != null &&
          hitFish_ != com.game.Protobuf.GameServer.Fish_Object.getDefaultInstance()) {
        hitFish_ =
          com.game.Protobuf.GameServer.Fish_Object.newBuilder(hitFish_).mergeFrom(value).buildPartial();
      } else {
        hitFish_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
     */
    private void clearHitFish() {  hitFish_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int FISHIDS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<com.game.Protobuf.GameServer.Fish_Object> fishIDs_;
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishIDsList() {
      return fishIDs_;
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    public java.util.List<? extends com.game.Protobuf.GameServer.Fish_ObjectOrBuilder> 
        getFishIDsOrBuilderList() {
      return fishIDs_;
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    public int getFishIDsCount() {
      return fishIDs_.size();
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    public com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index) {
      return fishIDs_.get(index);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    public com.game.Protobuf.GameServer.Fish_ObjectOrBuilder getFishIDsOrBuilder(
        int index) {
      return fishIDs_.get(index);
    }
    private void ensureFishIDsIsMutable() {
      if (!fishIDs_.isModifiable()) {
        fishIDs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
       }
    }

    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.set(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void setFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void addFishIDs(com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFishIDsIsMutable();
      fishIDs_.add(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void addFishIDs(
        com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void addFishIDs(
        int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
      ensureFishIDsIsMutable();
      fishIDs_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void addAllFishIDs(
        java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
      ensureFishIDsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, fishIDs_);
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void clearFishIDs() {
      fishIDs_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
     */
    private void removeFishIDs(int index) {
      ensureFishIDsIsMutable();
      fishIDs_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cbCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cbChairID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, totalGoin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, addGoin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getHitFish());
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        output.writeMessage(6, fishIDs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cbCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cbChairID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, totalGoin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, addGoin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getHitFish());
      }
      for (int i = 0; i < fishIDs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, fishIDs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SGOMs_HitSceenBomb_Success}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SGOMs_HitSceenBomb_Success)
        com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_SuccessOrBuilder {
      // Construct using com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public boolean hasCbCount() {
        return instance.hasCbCount();
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public int getCbCount() {
        return instance.getCbCount();
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public Builder setCbCount(int value) {
        copyOnWrite();
        instance.setCbCount(value);
        return this;
      }
      /**
       * <code>required int32 cbCount = 1;</code>
       */
      public Builder clearCbCount() {
        copyOnWrite();
        instance.clearCbCount();
        return this;
      }

      /**
       * <code>required int32 cbChairID = 2;</code>
       */
      public boolean hasCbChairID() {
        return instance.hasCbChairID();
      }
      /**
       * <code>required int32 cbChairID = 2;</code>
       */
      public int getCbChairID() {
        return instance.getCbChairID();
      }
      /**
       * <code>required int32 cbChairID = 2;</code>
       */
      public Builder setCbChairID(int value) {
        copyOnWrite();
        instance.setCbChairID(value);
        return this;
      }
      /**
       * <code>required int32 cbChairID = 2;</code>
       */
      public Builder clearCbChairID() {
        copyOnWrite();
        instance.clearCbChairID();
        return this;
      }

      /**
       * <code>required int32 totalGoin = 3;</code>
       */
      public boolean hasTotalGoin() {
        return instance.hasTotalGoin();
      }
      /**
       * <code>required int32 totalGoin = 3;</code>
       */
      public int getTotalGoin() {
        return instance.getTotalGoin();
      }
      /**
       * <code>required int32 totalGoin = 3;</code>
       */
      public Builder setTotalGoin(int value) {
        copyOnWrite();
        instance.setTotalGoin(value);
        return this;
      }
      /**
       * <code>required int32 totalGoin = 3;</code>
       */
      public Builder clearTotalGoin() {
        copyOnWrite();
        instance.clearTotalGoin();
        return this;
      }

      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public boolean hasAddGoin() {
        return instance.hasAddGoin();
      }
      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public int getAddGoin() {
        return instance.getAddGoin();
      }
      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public Builder setAddGoin(int value) {
        copyOnWrite();
        instance.setAddGoin(value);
        return this;
      }
      /**
       * <pre>
       *玩家增加的分数
       * </pre>
       *
       * <code>required int32 addGoin = 4;</code>
       */
      public Builder clearAddGoin() {
        copyOnWrite();
        instance.clearAddGoin();
        return this;
      }

      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public boolean hasHitFish() {
        return instance.hasHitFish();
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public com.game.Protobuf.GameServer.Fish_Object getHitFish() {
        return instance.getHitFish();
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public Builder setHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.setHitFish(value);
        return this;
        }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public Builder setHitFish(
          com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.setHitFish(builderForValue);
        return this;
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public Builder mergeHitFish(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.mergeHitFish(value);
        return this;
      }
      /**
       * <code>required .com.game.Protobuf.Fish_Object hitFish = 5;</code>
       */
      public Builder clearHitFish() {  copyOnWrite();
        instance.clearHitFish();
        return this;
      }

      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public java.util.List<com.game.Protobuf.GameServer.Fish_Object> getFishIDsList() {
        return java.util.Collections.unmodifiableList(
            instance.getFishIDsList());
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public int getFishIDsCount() {
        return instance.getFishIDsCount();
      }/**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public com.game.Protobuf.GameServer.Fish_Object getFishIDs(int index) {
        return instance.getFishIDs(index);
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.setFishIDs(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder setFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.setFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishIDs(value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object value) {
        copyOnWrite();
        instance.addFishIDs(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(
          com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder addFishIDs(
          int index, com.game.Protobuf.GameServer.Fish_Object.Builder builderForValue) {
        copyOnWrite();
        instance.addFishIDs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder addAllFishIDs(
          java.lang.Iterable<? extends com.game.Protobuf.GameServer.Fish_Object> values) {
        copyOnWrite();
        instance.addAllFishIDs(values);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder clearFishIDs() {
        copyOnWrite();
        instance.clearFishIDs();
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.Fish_Object FishIDs = 6;</code>
       */
      public Builder removeFishIDs(int index) {
        copyOnWrite();
        instance.removeFishIDs(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SGOMs_HitSceenBomb_Success)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasCbCount()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCbChairID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasTotalGoin()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAddGoin()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasHitFish()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getHitFish().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getFishIDsCount(); i++) {
            if (!getFishIDs(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          fishIDs_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success other = (com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success) arg1;
          cbCount_ = visitor.visitInt(
              hasCbCount(), cbCount_,
              other.hasCbCount(), other.cbCount_);
          cbChairID_ = visitor.visitInt(
              hasCbChairID(), cbChairID_,
              other.hasCbChairID(), other.cbChairID_);
          totalGoin_ = visitor.visitInt(
              hasTotalGoin(), totalGoin_,
              other.hasTotalGoin(), other.totalGoin_);
          addGoin_ = visitor.visitInt(
              hasAddGoin(), addGoin_,
              other.hasAddGoin(), other.addGoin_);
          hitFish_ = visitor.visitMessage(hitFish_, other.hitFish_);
          fishIDs_= visitor.visitList(fishIDs_, other.fishIDs_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  cbCount_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  cbChairID_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  totalGoin_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  addGoin_ = input.readInt32();
                  break;
                }
                case 42: {
                  com.game.Protobuf.GameServer.Fish_Object.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = hitFish_.toBuilder();
                  }
                  hitFish_ = input.readMessage(com.game.Protobuf.GameServer.Fish_Object.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hitFish_);
                    hitFish_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 50: {
                  if (!fishIDs_.isModifiable()) {
                    fishIDs_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(fishIDs_);
                  }
                  fishIDs_.add(
                      input.readMessage(com.game.Protobuf.GameServer.Fish_Object.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SGOMs_HitSceenBomb_Success)
    private static final com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SGOMs_HitSceenBomb_Success();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.GameServer.SGOMs_HitSceenBomb_Success getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SGOMs_HitSceenBomb_Success> PARSER;

    public static com.google.protobuf.Parser<SGOMs_HitSceenBomb_Success> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
