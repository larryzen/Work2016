// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CenterServer.proto

package com.game.Protobuf;

public final class CenterServer {
  private CenterServer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ServerCOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.ServerC)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *id
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <pre>
     *id
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     *service name
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <pre>
     *service name
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *service name
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>required string ip = 3;</code>
     */
    boolean hasIp();
    /**
     * <code>required string ip = 3;</code>
     */
    java.lang.String getIp();
    /**
     * <code>required string ip = 3;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <code>required int32 port = 4;</code>
     */
    boolean hasPort();
    /**
     * <code>required int32 port = 4;</code>
     */
    int getPort();

    /**
     * <pre>
     *server status
     * </pre>
     *
     * <code>required int32 number = 5;</code>
     */
    boolean hasNumber();
    /**
     * <pre>
     *server status
     * </pre>
     *
     * <code>required int32 number = 5;</code>
     */
    int getNumber();

    /**
     * <pre>
     *0 is recommend; 1 is no recommend
     * </pre>
     *
     * <code>required int32 recommend = 6;</code>
     */
    boolean hasRecommend();
    /**
     * <pre>
     *0 is recommend; 1 is no recommend
     * </pre>
     *
     * <code>required int32 recommend = 6;</code>
     */
    int getRecommend();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.ServerC}
   */
  public  static final class ServerC extends
      com.google.protobuf.GeneratedMessageLite<
          ServerC, ServerC.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.ServerC)
      ServerCOrBuilder {
    private ServerC() {
      name_ = "";
      ip_ = "";
    }
    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *id
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *id
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }
    /**
     * <pre>
     *id
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    private void setId(int value) {
      bitField0_ |= 0x00000001;
      id_ = value;
    }
    /**
     * <pre>
     *id
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    private void clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.String name_;
    /**
     * <pre>
     *service name
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *service name
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     *service name
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     *service name
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      name_ = value;
    }
    /**
     * <pre>
     *service name
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     *service name
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      name_ = value.toStringUtf8();
    }

    public static final int IP_FIELD_NUMBER = 3;
    private java.lang.String ip_;
    /**
     * <code>required string ip = 3;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string ip = 3;</code>
     */
    public java.lang.String getIp() {
      return ip_;
    }
    /**
     * <code>required string ip = 3;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ip_);
    }
    /**
     * <code>required string ip = 3;</code>
     */
    private void setIp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      ip_ = value;
    }
    /**
     * <code>required string ip = 3;</code>
     */
    private void clearIp() {
      bitField0_ = (bitField0_ & ~0x00000004);
      ip_ = getDefaultInstance().getIp();
    }
    /**
     * <code>required string ip = 3;</code>
     */
    private void setIpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      ip_ = value.toStringUtf8();
    }

    public static final int PORT_FIELD_NUMBER = 4;
    private int port_;
    /**
     * <code>required int32 port = 4;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 port = 4;</code>
     */
    public int getPort() {
      return port_;
    }
    /**
     * <code>required int32 port = 4;</code>
     */
    private void setPort(int value) {
      bitField0_ |= 0x00000008;
      port_ = value;
    }
    /**
     * <code>required int32 port = 4;</code>
     */
    private void clearPort() {
      bitField0_ = (bitField0_ & ~0x00000008);
      port_ = 0;
    }

    public static final int NUMBER_FIELD_NUMBER = 5;
    private int number_;
    /**
     * <pre>
     *server status
     * </pre>
     *
     * <code>required int32 number = 5;</code>
     */
    public boolean hasNumber() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *server status
     * </pre>
     *
     * <code>required int32 number = 5;</code>
     */
    public int getNumber() {
      return number_;
    }
    /**
     * <pre>
     *server status
     * </pre>
     *
     * <code>required int32 number = 5;</code>
     */
    private void setNumber(int value) {
      bitField0_ |= 0x00000010;
      number_ = value;
    }
    /**
     * <pre>
     *server status
     * </pre>
     *
     * <code>required int32 number = 5;</code>
     */
    private void clearNumber() {
      bitField0_ = (bitField0_ & ~0x00000010);
      number_ = 0;
    }

    public static final int RECOMMEND_FIELD_NUMBER = 6;
    private int recommend_;
    /**
     * <pre>
     *0 is recommend; 1 is no recommend
     * </pre>
     *
     * <code>required int32 recommend = 6;</code>
     */
    public boolean hasRecommend() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *0 is recommend; 1 is no recommend
     * </pre>
     *
     * <code>required int32 recommend = 6;</code>
     */
    public int getRecommend() {
      return recommend_;
    }
    /**
     * <pre>
     *0 is recommend; 1 is no recommend
     * </pre>
     *
     * <code>required int32 recommend = 6;</code>
     */
    private void setRecommend(int value) {
      bitField0_ |= 0x00000020;
      recommend_ = value;
    }
    /**
     * <pre>
     *0 is recommend; 1 is no recommend
     * </pre>
     *
     * <code>required int32 recommend = 6;</code>
     */
    private void clearRecommend() {
      bitField0_ = (bitField0_ & ~0x00000020);
      recommend_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getName());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getIp());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, port_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, number_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, recommend_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getIp());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, port_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, number_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, recommend_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.CenterServer.ServerC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.CenterServer.ServerC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.ServerC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.CenterServer.ServerC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.ServerC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.ServerC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.ServerC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.ServerC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.ServerC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.ServerC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.CenterServer.ServerC prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.ServerC}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.CenterServer.ServerC, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.ServerC)
        com.game.Protobuf.CenterServer.ServerCOrBuilder {
      // Construct using com.game.Protobuf.CenterServer.ServerC.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *id
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return instance.hasId();
      }
      /**
       * <pre>
       *id
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return instance.getId();
      }
      /**
       * <pre>
       *id
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public Builder setId(int value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       *id
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <pre>
       *service name
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <pre>
       *service name
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       *service name
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       *service name
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       *service name
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       *service name
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>required string ip = 3;</code>
       */
      public boolean hasIp() {
        return instance.hasIp();
      }
      /**
       * <code>required string ip = 3;</code>
       */
      public java.lang.String getIp() {
        return instance.getIp();
      }
      /**
       * <code>required string ip = 3;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        return instance.getIpBytes();
      }
      /**
       * <code>required string ip = 3;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        copyOnWrite();
        instance.setIp(value);
        return this;
      }
      /**
       * <code>required string ip = 3;</code>
       */
      public Builder clearIp() {
        copyOnWrite();
        instance.clearIp();
        return this;
      }
      /**
       * <code>required string ip = 3;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIpBytes(value);
        return this;
      }

      /**
       * <code>required int32 port = 4;</code>
       */
      public boolean hasPort() {
        return instance.hasPort();
      }
      /**
       * <code>required int32 port = 4;</code>
       */
      public int getPort() {
        return instance.getPort();
      }
      /**
       * <code>required int32 port = 4;</code>
       */
      public Builder setPort(int value) {
        copyOnWrite();
        instance.setPort(value);
        return this;
      }
      /**
       * <code>required int32 port = 4;</code>
       */
      public Builder clearPort() {
        copyOnWrite();
        instance.clearPort();
        return this;
      }

      /**
       * <pre>
       *server status
       * </pre>
       *
       * <code>required int32 number = 5;</code>
       */
      public boolean hasNumber() {
        return instance.hasNumber();
      }
      /**
       * <pre>
       *server status
       * </pre>
       *
       * <code>required int32 number = 5;</code>
       */
      public int getNumber() {
        return instance.getNumber();
      }
      /**
       * <pre>
       *server status
       * </pre>
       *
       * <code>required int32 number = 5;</code>
       */
      public Builder setNumber(int value) {
        copyOnWrite();
        instance.setNumber(value);
        return this;
      }
      /**
       * <pre>
       *server status
       * </pre>
       *
       * <code>required int32 number = 5;</code>
       */
      public Builder clearNumber() {
        copyOnWrite();
        instance.clearNumber();
        return this;
      }

      /**
       * <pre>
       *0 is recommend; 1 is no recommend
       * </pre>
       *
       * <code>required int32 recommend = 6;</code>
       */
      public boolean hasRecommend() {
        return instance.hasRecommend();
      }
      /**
       * <pre>
       *0 is recommend; 1 is no recommend
       * </pre>
       *
       * <code>required int32 recommend = 6;</code>
       */
      public int getRecommend() {
        return instance.getRecommend();
      }
      /**
       * <pre>
       *0 is recommend; 1 is no recommend
       * </pre>
       *
       * <code>required int32 recommend = 6;</code>
       */
      public Builder setRecommend(int value) {
        copyOnWrite();
        instance.setRecommend(value);
        return this;
      }
      /**
       * <pre>
       *0 is recommend; 1 is no recommend
       * </pre>
       *
       * <code>required int32 recommend = 6;</code>
       */
      public Builder clearRecommend() {
        copyOnWrite();
        instance.clearRecommend();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.ServerC)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.CenterServer.ServerC();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasName()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasIp()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPort()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasNumber()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasRecommend()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.CenterServer.ServerC other = (com.game.Protobuf.CenterServer.ServerC) arg1;
          id_ = visitor.visitInt(
              hasId(), id_,
              other.hasId(), other.id_);
          name_ = visitor.visitString(
              hasName(), name_,
              other.hasName(), other.name_);
          ip_ = visitor.visitString(
              hasIp(), ip_,
              other.hasIp(), other.ip_);
          port_ = visitor.visitInt(
              hasPort(), port_,
              other.hasPort(), other.port_);
          number_ = visitor.visitInt(
              hasNumber(), number_,
              other.hasNumber(), other.number_);
          recommend_ = visitor.visitInt(
              hasRecommend(), recommend_,
              other.hasRecommend(), other.recommend_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  id_ = input.readInt32();
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  name_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  ip_ = s;
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  port_ = input.readInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  number_ = input.readInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  recommend_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.CenterServer.ServerC.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.ServerC)
    private static final com.game.Protobuf.CenterServer.ServerC DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ServerC();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.CenterServer.ServerC getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ServerC> PARSER;

    public static com.google.protobuf.Parser<ServerC> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CGCMsRegisterServerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.CGCMsRegisterServer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    boolean hasServer();
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    com.game.Protobuf.CenterServer.ServerC getServer();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.CGCMsRegisterServer}
   */
  public  static final class CGCMsRegisterServer extends
      com.google.protobuf.GeneratedMessageLite<
          CGCMsRegisterServer, CGCMsRegisterServer.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.CGCMsRegisterServer)
      CGCMsRegisterServerOrBuilder {
    private CGCMsRegisterServer() {
    }
    private int bitField0_;
    public static final int SERVER_FIELD_NUMBER = 1;
    private com.game.Protobuf.CenterServer.ServerC server_;
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    public boolean hasServer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    public com.game.Protobuf.CenterServer.ServerC getServer() {
      return server_ == null ? com.game.Protobuf.CenterServer.ServerC.getDefaultInstance() : server_;
    }
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    private void setServer(com.game.Protobuf.CenterServer.ServerC value) {
      if (value == null) {
        throw new NullPointerException();
      }
      server_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    private void setServer(
        com.game.Protobuf.CenterServer.ServerC.Builder builderForValue) {
      server_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    private void mergeServer(com.game.Protobuf.CenterServer.ServerC value) {
      if (server_ != null &&
          server_ != com.game.Protobuf.CenterServer.ServerC.getDefaultInstance()) {
        server_ =
          com.game.Protobuf.CenterServer.ServerC.newBuilder(server_).mergeFrom(value).buildPartial();
      } else {
        server_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    private void clearServer() {  server_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getServer());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getServer());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.CenterServer.CGCMsRegisterServer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.CenterServer.CGCMsRegisterServer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.CGCMsRegisterServer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.CenterServer.CGCMsRegisterServer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.CGCMsRegisterServer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.CGCMsRegisterServer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.CGCMsRegisterServer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.CGCMsRegisterServer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.CGCMsRegisterServer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.CGCMsRegisterServer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.CenterServer.CGCMsRegisterServer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.CGCMsRegisterServer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.CenterServer.CGCMsRegisterServer, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.CGCMsRegisterServer)
        com.game.Protobuf.CenterServer.CGCMsRegisterServerOrBuilder {
      // Construct using com.game.Protobuf.CenterServer.CGCMsRegisterServer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public boolean hasServer() {
        return instance.hasServer();
      }
      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public com.game.Protobuf.CenterServer.ServerC getServer() {
        return instance.getServer();
      }
      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public Builder setServer(com.game.Protobuf.CenterServer.ServerC value) {
        copyOnWrite();
        instance.setServer(value);
        return this;
        }
      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public Builder setServer(
          com.game.Protobuf.CenterServer.ServerC.Builder builderForValue) {
        copyOnWrite();
        instance.setServer(builderForValue);
        return this;
      }
      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public Builder mergeServer(com.game.Protobuf.CenterServer.ServerC value) {
        copyOnWrite();
        instance.mergeServer(value);
        return this;
      }
      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public Builder clearServer() {  copyOnWrite();
        instance.clearServer();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.CGCMsRegisterServer)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.CenterServer.CGCMsRegisterServer();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasServer()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getServer().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.CenterServer.CGCMsRegisterServer other = (com.game.Protobuf.CenterServer.CGCMsRegisterServer) arg1;
          server_ = visitor.visitMessage(server_, other.server_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.game.Protobuf.CenterServer.ServerC.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = server_.toBuilder();
                  }
                  server_ = input.readMessage(com.game.Protobuf.CenterServer.ServerC.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(server_);
                    server_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.CenterServer.CGCMsRegisterServer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.CGCMsRegisterServer)
    private static final com.game.Protobuf.CenterServer.CGCMsRegisterServer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CGCMsRegisterServer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.CenterServer.CGCMsRegisterServer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CGCMsRegisterServer> PARSER;

    public static com.google.protobuf.Parser<CGCMsRegisterServer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface COCMSTokeValidateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.COCMSTokeValidate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string token = 1;</code>
     */
    boolean hasToken();
    /**
     * <code>required string token = 1;</code>
     */
    java.lang.String getToken();
    /**
     * <code>required string token = 1;</code>
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <code>required string gameID = 2;</code>
     */
    boolean hasGameID();
    /**
     * <code>required string gameID = 2;</code>
     */
    java.lang.String getGameID();
    /**
     * <code>required string gameID = 2;</code>
     */
    com.google.protobuf.ByteString
        getGameIDBytes();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.COCMSTokeValidate}
   */
  public  static final class COCMSTokeValidate extends
      com.google.protobuf.GeneratedMessageLite<
          COCMSTokeValidate, COCMSTokeValidate.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.COCMSTokeValidate)
      COCMSTokeValidateOrBuilder {
    private COCMSTokeValidate() {
      token_ = "";
      gameID_ = "";
    }
    private int bitField0_;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private java.lang.String token_;
    /**
     * <code>required string token = 1;</code>
     */
    public boolean hasToken() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string token = 1;</code>
     */
    public java.lang.String getToken() {
      return token_;
    }
    /**
     * <code>required string token = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(token_);
    }
    /**
     * <code>required string token = 1;</code>
     */
    private void setToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      token_ = value;
    }
    /**
     * <code>required string token = 1;</code>
     */
    private void clearToken() {
      bitField0_ = (bitField0_ & ~0x00000001);
      token_ = getDefaultInstance().getToken();
    }
    /**
     * <code>required string token = 1;</code>
     */
    private void setTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      token_ = value.toStringUtf8();
    }

    public static final int GAMEID_FIELD_NUMBER = 2;
    private java.lang.String gameID_;
    /**
     * <code>required string gameID = 2;</code>
     */
    public boolean hasGameID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string gameID = 2;</code>
     */
    public java.lang.String getGameID() {
      return gameID_;
    }
    /**
     * <code>required string gameID = 2;</code>
     */
    public com.google.protobuf.ByteString
        getGameIDBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gameID_);
    }
    /**
     * <code>required string gameID = 2;</code>
     */
    private void setGameID(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      gameID_ = value;
    }
    /**
     * <code>required string gameID = 2;</code>
     */
    private void clearGameID() {
      bitField0_ = (bitField0_ & ~0x00000002);
      gameID_ = getDefaultInstance().getGameID();
    }
    /**
     * <code>required string gameID = 2;</code>
     */
    private void setGameIDBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      gameID_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getToken());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getGameID());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getGameID());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.CenterServer.COCMSTokeValidate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.CenterServer.COCMSTokeValidate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.COCMSTokeValidate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.CenterServer.COCMSTokeValidate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.COCMSTokeValidate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.COCMSTokeValidate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.COCMSTokeValidate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.COCMSTokeValidate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.COCMSTokeValidate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.COCMSTokeValidate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.CenterServer.COCMSTokeValidate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.COCMSTokeValidate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.CenterServer.COCMSTokeValidate, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.COCMSTokeValidate)
        com.game.Protobuf.CenterServer.COCMSTokeValidateOrBuilder {
      // Construct using com.game.Protobuf.CenterServer.COCMSTokeValidate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string token = 1;</code>
       */
      public boolean hasToken() {
        return instance.hasToken();
      }
      /**
       * <code>required string token = 1;</code>
       */
      public java.lang.String getToken() {
        return instance.getToken();
      }
      /**
       * <code>required string token = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        return instance.getTokenBytes();
      }
      /**
       * <code>required string token = 1;</code>
       */
      public Builder setToken(
          java.lang.String value) {
        copyOnWrite();
        instance.setToken(value);
        return this;
      }
      /**
       * <code>required string token = 1;</code>
       */
      public Builder clearToken() {
        copyOnWrite();
        instance.clearToken();
        return this;
      }
      /**
       * <code>required string token = 1;</code>
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTokenBytes(value);
        return this;
      }

      /**
       * <code>required string gameID = 2;</code>
       */
      public boolean hasGameID() {
        return instance.hasGameID();
      }
      /**
       * <code>required string gameID = 2;</code>
       */
      public java.lang.String getGameID() {
        return instance.getGameID();
      }
      /**
       * <code>required string gameID = 2;</code>
       */
      public com.google.protobuf.ByteString
          getGameIDBytes() {
        return instance.getGameIDBytes();
      }
      /**
       * <code>required string gameID = 2;</code>
       */
      public Builder setGameID(
          java.lang.String value) {
        copyOnWrite();
        instance.setGameID(value);
        return this;
      }
      /**
       * <code>required string gameID = 2;</code>
       */
      public Builder clearGameID() {
        copyOnWrite();
        instance.clearGameID();
        return this;
      }
      /**
       * <code>required string gameID = 2;</code>
       */
      public Builder setGameIDBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGameIDBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.COCMSTokeValidate)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.CenterServer.COCMSTokeValidate();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasToken()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGameID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.CenterServer.COCMSTokeValidate other = (com.game.Protobuf.CenterServer.COCMSTokeValidate) arg1;
          token_ = visitor.visitString(
              hasToken(), token_,
              other.hasToken(), other.token_);
          gameID_ = visitor.visitString(
              hasGameID(), gameID_,
              other.hasGameID(), other.gameID_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  token_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  gameID_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.CenterServer.COCMSTokeValidate.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.COCMSTokeValidate)
    private static final com.game.Protobuf.CenterServer.COCMSTokeValidate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new COCMSTokeValidate();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.CenterServer.COCMSTokeValidate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<COCMSTokeValidate> PARSER;

    public static com.google.protobuf.Parser<COCMSTokeValidate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SCOMsPlayerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SCOMsPlayerInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 gold = 1;</code>
     */
    boolean hasGold();
    /**
     * <code>required int32 gold = 1;</code>
     */
    int getGold();

    /**
     * <code>required int32 diamonds = 2;</code>
     */
    boolean hasDiamonds();
    /**
     * <code>required int32 diamonds = 2;</code>
     */
    int getDiamonds();

    /**
     * <code>required bool ischangePwd = 3;</code>
     */
    boolean hasIschangePwd();
    /**
     * <code>required bool ischangePwd = 3;</code>
     */
    boolean getIschangePwd();

    /**
     * <code>required int32 Prop1 = 4;</code>
     */
    boolean hasProp1();
    /**
     * <code>required int32 Prop1 = 4;</code>
     */
    int getProp1();

    /**
     * <code>required int32 Prop2 = 5;</code>
     */
    boolean hasProp2();
    /**
     * <code>required int32 Prop2 = 5;</code>
     */
    int getProp2();

    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    java.util.List<com.game.Protobuf.CenterServer.ServerC> 
        getServerList();
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    com.game.Protobuf.CenterServer.ServerC getServer(int index);
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    int getServerCount();

    /**
     * <code>optional int32 nickName = 7;</code>
     */
    boolean hasNickName();
    /**
     * <code>optional int32 nickName = 7;</code>
     */
    int getNickName();

    /**
     * <code>optional int32 headID = 8;</code>
     */
    boolean hasHeadID();
    /**
     * <code>optional int32 headID = 8;</code>
     */
    int getHeadID();

    /**
     * <code>optional int32 vip = 9;</code>
     */
    boolean hasVip();
    /**
     * <code>optional int32 vip = 9;</code>
     */
    int getVip();

    /**
     * <code>optional int32 level = 10;</code>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 10;</code>
     */
    int getLevel();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SCOMsPlayerInfo}
   */
  public  static final class SCOMsPlayerInfo extends
      com.google.protobuf.GeneratedMessageLite<
          SCOMsPlayerInfo, SCOMsPlayerInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SCOMsPlayerInfo)
      SCOMsPlayerInfoOrBuilder {
    private SCOMsPlayerInfo() {
      server_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int GOLD_FIELD_NUMBER = 1;
    private int gold_;
    /**
     * <code>required int32 gold = 1;</code>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 gold = 1;</code>
     */
    public int getGold() {
      return gold_;
    }
    /**
     * <code>required int32 gold = 1;</code>
     */
    private void setGold(int value) {
      bitField0_ |= 0x00000001;
      gold_ = value;
    }
    /**
     * <code>required int32 gold = 1;</code>
     */
    private void clearGold() {
      bitField0_ = (bitField0_ & ~0x00000001);
      gold_ = 0;
    }

    public static final int DIAMONDS_FIELD_NUMBER = 2;
    private int diamonds_;
    /**
     * <code>required int32 diamonds = 2;</code>
     */
    public boolean hasDiamonds() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 diamonds = 2;</code>
     */
    public int getDiamonds() {
      return diamonds_;
    }
    /**
     * <code>required int32 diamonds = 2;</code>
     */
    private void setDiamonds(int value) {
      bitField0_ |= 0x00000002;
      diamonds_ = value;
    }
    /**
     * <code>required int32 diamonds = 2;</code>
     */
    private void clearDiamonds() {
      bitField0_ = (bitField0_ & ~0x00000002);
      diamonds_ = 0;
    }

    public static final int ISCHANGEPWD_FIELD_NUMBER = 3;
    private boolean ischangePwd_;
    /**
     * <code>required bool ischangePwd = 3;</code>
     */
    public boolean hasIschangePwd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool ischangePwd = 3;</code>
     */
    public boolean getIschangePwd() {
      return ischangePwd_;
    }
    /**
     * <code>required bool ischangePwd = 3;</code>
     */
    private void setIschangePwd(boolean value) {
      bitField0_ |= 0x00000004;
      ischangePwd_ = value;
    }
    /**
     * <code>required bool ischangePwd = 3;</code>
     */
    private void clearIschangePwd() {
      bitField0_ = (bitField0_ & ~0x00000004);
      ischangePwd_ = false;
    }

    public static final int PROP1_FIELD_NUMBER = 4;
    private int prop1_;
    /**
     * <code>required int32 Prop1 = 4;</code>
     */
    public boolean hasProp1() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 Prop1 = 4;</code>
     */
    public int getProp1() {
      return prop1_;
    }
    /**
     * <code>required int32 Prop1 = 4;</code>
     */
    private void setProp1(int value) {
      bitField0_ |= 0x00000008;
      prop1_ = value;
    }
    /**
     * <code>required int32 Prop1 = 4;</code>
     */
    private void clearProp1() {
      bitField0_ = (bitField0_ & ~0x00000008);
      prop1_ = 0;
    }

    public static final int PROP2_FIELD_NUMBER = 5;
    private int prop2_;
    /**
     * <code>required int32 Prop2 = 5;</code>
     */
    public boolean hasProp2() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 Prop2 = 5;</code>
     */
    public int getProp2() {
      return prop2_;
    }
    /**
     * <code>required int32 Prop2 = 5;</code>
     */
    private void setProp2(int value) {
      bitField0_ |= 0x00000010;
      prop2_ = value;
    }
    /**
     * <code>required int32 Prop2 = 5;</code>
     */
    private void clearProp2() {
      bitField0_ = (bitField0_ & ~0x00000010);
      prop2_ = 0;
    }

    public static final int SERVER_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<com.game.Protobuf.CenterServer.ServerC> server_;
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    public java.util.List<com.game.Protobuf.CenterServer.ServerC> getServerList() {
      return server_;
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    public java.util.List<? extends com.game.Protobuf.CenterServer.ServerCOrBuilder> 
        getServerOrBuilderList() {
      return server_;
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    public int getServerCount() {
      return server_.size();
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    public com.game.Protobuf.CenterServer.ServerC getServer(int index) {
      return server_.get(index);
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    public com.game.Protobuf.CenterServer.ServerCOrBuilder getServerOrBuilder(
        int index) {
      return server_.get(index);
    }
    private void ensureServerIsMutable() {
      if (!server_.isModifiable()) {
        server_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(server_);
       }
    }

    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    private void setServer(
        int index, com.game.Protobuf.CenterServer.ServerC value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureServerIsMutable();
      server_.set(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    private void setServer(
        int index, com.game.Protobuf.CenterServer.ServerC.Builder builderForValue) {
      ensureServerIsMutable();
      server_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    private void addServer(com.game.Protobuf.CenterServer.ServerC value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureServerIsMutable();
      server_.add(value);
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    private void addServer(
        int index, com.game.Protobuf.CenterServer.ServerC value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureServerIsMutable();
      server_.add(index, value);
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    private void addServer(
        com.game.Protobuf.CenterServer.ServerC.Builder builderForValue) {
      ensureServerIsMutable();
      server_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    private void addServer(
        int index, com.game.Protobuf.CenterServer.ServerC.Builder builderForValue) {
      ensureServerIsMutable();
      server_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    private void addAllServer(
        java.lang.Iterable<? extends com.game.Protobuf.CenterServer.ServerC> values) {
      ensureServerIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, server_);
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    private void clearServer() {
      server_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
     */
    private void removeServer(int index) {
      ensureServerIsMutable();
      server_.remove(index);
    }

    public static final int NICKNAME_FIELD_NUMBER = 7;
    private int nickName_;
    /**
     * <code>optional int32 nickName = 7;</code>
     */
    public boolean hasNickName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 nickName = 7;</code>
     */
    public int getNickName() {
      return nickName_;
    }
    /**
     * <code>optional int32 nickName = 7;</code>
     */
    private void setNickName(int value) {
      bitField0_ |= 0x00000020;
      nickName_ = value;
    }
    /**
     * <code>optional int32 nickName = 7;</code>
     */
    private void clearNickName() {
      bitField0_ = (bitField0_ & ~0x00000020);
      nickName_ = 0;
    }

    public static final int HEADID_FIELD_NUMBER = 8;
    private int headID_;
    /**
     * <code>optional int32 headID = 8;</code>
     */
    public boolean hasHeadID() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 headID = 8;</code>
     */
    public int getHeadID() {
      return headID_;
    }
    /**
     * <code>optional int32 headID = 8;</code>
     */
    private void setHeadID(int value) {
      bitField0_ |= 0x00000040;
      headID_ = value;
    }
    /**
     * <code>optional int32 headID = 8;</code>
     */
    private void clearHeadID() {
      bitField0_ = (bitField0_ & ~0x00000040);
      headID_ = 0;
    }

    public static final int VIP_FIELD_NUMBER = 9;
    private int vip_;
    /**
     * <code>optional int32 vip = 9;</code>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 vip = 9;</code>
     */
    public int getVip() {
      return vip_;
    }
    /**
     * <code>optional int32 vip = 9;</code>
     */
    private void setVip(int value) {
      bitField0_ |= 0x00000080;
      vip_ = value;
    }
    /**
     * <code>optional int32 vip = 9;</code>
     */
    private void clearVip() {
      bitField0_ = (bitField0_ & ~0x00000080);
      vip_ = 0;
    }

    public static final int LEVEL_FIELD_NUMBER = 10;
    private int level_;
    /**
     * <code>optional int32 level = 10;</code>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 level = 10;</code>
     */
    public int getLevel() {
      return level_;
    }
    /**
     * <code>optional int32 level = 10;</code>
     */
    private void setLevel(int value) {
      bitField0_ |= 0x00000100;
      level_ = value;
    }
    /**
     * <code>optional int32 level = 10;</code>
     */
    private void clearLevel() {
      bitField0_ = (bitField0_ & ~0x00000100);
      level_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, diamonds_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, ischangePwd_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, prop1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, prop2_);
      }
      for (int i = 0; i < server_.size(); i++) {
        output.writeMessage(6, server_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, nickName_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, headID_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, vip_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, level_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, diamonds_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, ischangePwd_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, prop1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, prop2_);
      }
      for (int i = 0; i < server_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, server_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, nickName_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, headID_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, vip_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, level_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.CenterServer.SCOMsPlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.CenterServer.SCOMsPlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.SCOMsPlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.CenterServer.SCOMsPlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.SCOMsPlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.SCOMsPlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.SCOMsPlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.SCOMsPlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.SCOMsPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.SCOMsPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.CenterServer.SCOMsPlayerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SCOMsPlayerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.CenterServer.SCOMsPlayerInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SCOMsPlayerInfo)
        com.game.Protobuf.CenterServer.SCOMsPlayerInfoOrBuilder {
      // Construct using com.game.Protobuf.CenterServer.SCOMsPlayerInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 gold = 1;</code>
       */
      public boolean hasGold() {
        return instance.hasGold();
      }
      /**
       * <code>required int32 gold = 1;</code>
       */
      public int getGold() {
        return instance.getGold();
      }
      /**
       * <code>required int32 gold = 1;</code>
       */
      public Builder setGold(int value) {
        copyOnWrite();
        instance.setGold(value);
        return this;
      }
      /**
       * <code>required int32 gold = 1;</code>
       */
      public Builder clearGold() {
        copyOnWrite();
        instance.clearGold();
        return this;
      }

      /**
       * <code>required int32 diamonds = 2;</code>
       */
      public boolean hasDiamonds() {
        return instance.hasDiamonds();
      }
      /**
       * <code>required int32 diamonds = 2;</code>
       */
      public int getDiamonds() {
        return instance.getDiamonds();
      }
      /**
       * <code>required int32 diamonds = 2;</code>
       */
      public Builder setDiamonds(int value) {
        copyOnWrite();
        instance.setDiamonds(value);
        return this;
      }
      /**
       * <code>required int32 diamonds = 2;</code>
       */
      public Builder clearDiamonds() {
        copyOnWrite();
        instance.clearDiamonds();
        return this;
      }

      /**
       * <code>required bool ischangePwd = 3;</code>
       */
      public boolean hasIschangePwd() {
        return instance.hasIschangePwd();
      }
      /**
       * <code>required bool ischangePwd = 3;</code>
       */
      public boolean getIschangePwd() {
        return instance.getIschangePwd();
      }
      /**
       * <code>required bool ischangePwd = 3;</code>
       */
      public Builder setIschangePwd(boolean value) {
        copyOnWrite();
        instance.setIschangePwd(value);
        return this;
      }
      /**
       * <code>required bool ischangePwd = 3;</code>
       */
      public Builder clearIschangePwd() {
        copyOnWrite();
        instance.clearIschangePwd();
        return this;
      }

      /**
       * <code>required int32 Prop1 = 4;</code>
       */
      public boolean hasProp1() {
        return instance.hasProp1();
      }
      /**
       * <code>required int32 Prop1 = 4;</code>
       */
      public int getProp1() {
        return instance.getProp1();
      }
      /**
       * <code>required int32 Prop1 = 4;</code>
       */
      public Builder setProp1(int value) {
        copyOnWrite();
        instance.setProp1(value);
        return this;
      }
      /**
       * <code>required int32 Prop1 = 4;</code>
       */
      public Builder clearProp1() {
        copyOnWrite();
        instance.clearProp1();
        return this;
      }

      /**
       * <code>required int32 Prop2 = 5;</code>
       */
      public boolean hasProp2() {
        return instance.hasProp2();
      }
      /**
       * <code>required int32 Prop2 = 5;</code>
       */
      public int getProp2() {
        return instance.getProp2();
      }
      /**
       * <code>required int32 Prop2 = 5;</code>
       */
      public Builder setProp2(int value) {
        copyOnWrite();
        instance.setProp2(value);
        return this;
      }
      /**
       * <code>required int32 Prop2 = 5;</code>
       */
      public Builder clearProp2() {
        copyOnWrite();
        instance.clearProp2();
        return this;
      }

      /**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public java.util.List<com.game.Protobuf.CenterServer.ServerC> getServerList() {
        return java.util.Collections.unmodifiableList(
            instance.getServerList());
      }
      /**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public int getServerCount() {
        return instance.getServerCount();
      }/**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public com.game.Protobuf.CenterServer.ServerC getServer(int index) {
        return instance.getServer(index);
      }
      /**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public Builder setServer(
          int index, com.game.Protobuf.CenterServer.ServerC value) {
        copyOnWrite();
        instance.setServer(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public Builder setServer(
          int index, com.game.Protobuf.CenterServer.ServerC.Builder builderForValue) {
        copyOnWrite();
        instance.setServer(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public Builder addServer(com.game.Protobuf.CenterServer.ServerC value) {
        copyOnWrite();
        instance.addServer(value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public Builder addServer(
          int index, com.game.Protobuf.CenterServer.ServerC value) {
        copyOnWrite();
        instance.addServer(index, value);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public Builder addServer(
          com.game.Protobuf.CenterServer.ServerC.Builder builderForValue) {
        copyOnWrite();
        instance.addServer(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public Builder addServer(
          int index, com.game.Protobuf.CenterServer.ServerC.Builder builderForValue) {
        copyOnWrite();
        instance.addServer(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public Builder addAllServer(
          java.lang.Iterable<? extends com.game.Protobuf.CenterServer.ServerC> values) {
        copyOnWrite();
        instance.addAllServer(values);
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public Builder clearServer() {
        copyOnWrite();
        instance.clearServer();
        return this;
      }
      /**
       * <code>repeated .com.game.Protobuf.ServerC server = 6;</code>
       */
      public Builder removeServer(int index) {
        copyOnWrite();
        instance.removeServer(index);
        return this;
      }

      /**
       * <code>optional int32 nickName = 7;</code>
       */
      public boolean hasNickName() {
        return instance.hasNickName();
      }
      /**
       * <code>optional int32 nickName = 7;</code>
       */
      public int getNickName() {
        return instance.getNickName();
      }
      /**
       * <code>optional int32 nickName = 7;</code>
       */
      public Builder setNickName(int value) {
        copyOnWrite();
        instance.setNickName(value);
        return this;
      }
      /**
       * <code>optional int32 nickName = 7;</code>
       */
      public Builder clearNickName() {
        copyOnWrite();
        instance.clearNickName();
        return this;
      }

      /**
       * <code>optional int32 headID = 8;</code>
       */
      public boolean hasHeadID() {
        return instance.hasHeadID();
      }
      /**
       * <code>optional int32 headID = 8;</code>
       */
      public int getHeadID() {
        return instance.getHeadID();
      }
      /**
       * <code>optional int32 headID = 8;</code>
       */
      public Builder setHeadID(int value) {
        copyOnWrite();
        instance.setHeadID(value);
        return this;
      }
      /**
       * <code>optional int32 headID = 8;</code>
       */
      public Builder clearHeadID() {
        copyOnWrite();
        instance.clearHeadID();
        return this;
      }

      /**
       * <code>optional int32 vip = 9;</code>
       */
      public boolean hasVip() {
        return instance.hasVip();
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public int getVip() {
        return instance.getVip();
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public Builder setVip(int value) {
        copyOnWrite();
        instance.setVip(value);
        return this;
      }
      /**
       * <code>optional int32 vip = 9;</code>
       */
      public Builder clearVip() {
        copyOnWrite();
        instance.clearVip();
        return this;
      }

      /**
       * <code>optional int32 level = 10;</code>
       */
      public boolean hasLevel() {
        return instance.hasLevel();
      }
      /**
       * <code>optional int32 level = 10;</code>
       */
      public int getLevel() {
        return instance.getLevel();
      }
      /**
       * <code>optional int32 level = 10;</code>
       */
      public Builder setLevel(int value) {
        copyOnWrite();
        instance.setLevel(value);
        return this;
      }
      /**
       * <code>optional int32 level = 10;</code>
       */
      public Builder clearLevel() {
        copyOnWrite();
        instance.clearLevel();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SCOMsPlayerInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.CenterServer.SCOMsPlayerInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasGold()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasDiamonds()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasIschangePwd()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasProp1()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasProp2()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getServerCount(); i++) {
            if (!getServer(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          server_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.CenterServer.SCOMsPlayerInfo other = (com.game.Protobuf.CenterServer.SCOMsPlayerInfo) arg1;
          gold_ = visitor.visitInt(
              hasGold(), gold_,
              other.hasGold(), other.gold_);
          diamonds_ = visitor.visitInt(
              hasDiamonds(), diamonds_,
              other.hasDiamonds(), other.diamonds_);
          ischangePwd_ = visitor.visitBoolean(
              hasIschangePwd(), ischangePwd_,
              other.hasIschangePwd(), other.ischangePwd_);
          prop1_ = visitor.visitInt(
              hasProp1(), prop1_,
              other.hasProp1(), other.prop1_);
          prop2_ = visitor.visitInt(
              hasProp2(), prop2_,
              other.hasProp2(), other.prop2_);
          server_= visitor.visitList(server_, other.server_);
          nickName_ = visitor.visitInt(
              hasNickName(), nickName_,
              other.hasNickName(), other.nickName_);
          headID_ = visitor.visitInt(
              hasHeadID(), headID_,
              other.hasHeadID(), other.headID_);
          vip_ = visitor.visitInt(
              hasVip(), vip_,
              other.hasVip(), other.vip_);
          level_ = visitor.visitInt(
              hasLevel(), level_,
              other.hasLevel(), other.level_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  gold_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  diamonds_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  ischangePwd_ = input.readBool();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  prop1_ = input.readInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  prop2_ = input.readInt32();
                  break;
                }
                case 50: {
                  if (!server_.isModifiable()) {
                    server_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(server_);
                  }
                  server_.add(
                      input.readMessage(com.game.Protobuf.CenterServer.ServerC.parser(), extensionRegistry));
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000020;
                  nickName_ = input.readInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000040;
                  headID_ = input.readInt32();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000080;
                  vip_ = input.readInt32();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000100;
                  level_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.CenterServer.SCOMsPlayerInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SCOMsPlayerInfo)
    private static final com.game.Protobuf.CenterServer.SCOMsPlayerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SCOMsPlayerInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.CenterServer.SCOMsPlayerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SCOMsPlayerInfo> PARSER;

    public static com.google.protobuf.Parser<SCOMsPlayerInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SCOMsRoomListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.game.Protobuf.SCOMsRoomList)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    boolean hasServer();
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    com.game.Protobuf.CenterServer.ServerC getServer();
  }
  /**
   * Protobuf type {@code com.game.Protobuf.SCOMsRoomList}
   */
  public  static final class SCOMsRoomList extends
      com.google.protobuf.GeneratedMessageLite<
          SCOMsRoomList, SCOMsRoomList.Builder> implements
      // @@protoc_insertion_point(message_implements:com.game.Protobuf.SCOMsRoomList)
      SCOMsRoomListOrBuilder {
    private SCOMsRoomList() {
    }
    private int bitField0_;
    public static final int SERVER_FIELD_NUMBER = 1;
    private com.game.Protobuf.CenterServer.ServerC server_;
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    public boolean hasServer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    public com.game.Protobuf.CenterServer.ServerC getServer() {
      return server_ == null ? com.game.Protobuf.CenterServer.ServerC.getDefaultInstance() : server_;
    }
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    private void setServer(com.game.Protobuf.CenterServer.ServerC value) {
      if (value == null) {
        throw new NullPointerException();
      }
      server_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    private void setServer(
        com.game.Protobuf.CenterServer.ServerC.Builder builderForValue) {
      server_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    private void mergeServer(com.game.Protobuf.CenterServer.ServerC value) {
      if (server_ != null &&
          server_ != com.game.Protobuf.CenterServer.ServerC.getDefaultInstance()) {
        server_ =
          com.game.Protobuf.CenterServer.ServerC.newBuilder(server_).mergeFrom(value).buildPartial();
      } else {
        server_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .com.game.Protobuf.ServerC server = 1;</code>
     */
    private void clearServer() {  server_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getServer());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getServer());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.game.Protobuf.CenterServer.SCOMsRoomList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.CenterServer.SCOMsRoomList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.SCOMsRoomList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.game.Protobuf.CenterServer.SCOMsRoomList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.SCOMsRoomList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.SCOMsRoomList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.SCOMsRoomList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.SCOMsRoomList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.game.Protobuf.CenterServer.SCOMsRoomList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.game.Protobuf.CenterServer.SCOMsRoomList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.Protobuf.CenterServer.SCOMsRoomList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.game.Protobuf.SCOMsRoomList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.game.Protobuf.CenterServer.SCOMsRoomList, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.game.Protobuf.SCOMsRoomList)
        com.game.Protobuf.CenterServer.SCOMsRoomListOrBuilder {
      // Construct using com.game.Protobuf.CenterServer.SCOMsRoomList.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public boolean hasServer() {
        return instance.hasServer();
      }
      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public com.game.Protobuf.CenterServer.ServerC getServer() {
        return instance.getServer();
      }
      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public Builder setServer(com.game.Protobuf.CenterServer.ServerC value) {
        copyOnWrite();
        instance.setServer(value);
        return this;
        }
      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public Builder setServer(
          com.game.Protobuf.CenterServer.ServerC.Builder builderForValue) {
        copyOnWrite();
        instance.setServer(builderForValue);
        return this;
      }
      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public Builder mergeServer(com.game.Protobuf.CenterServer.ServerC value) {
        copyOnWrite();
        instance.mergeServer(value);
        return this;
      }
      /**
       * <code>required .com.game.Protobuf.ServerC server = 1;</code>
       */
      public Builder clearServer() {  copyOnWrite();
        instance.clearServer();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.game.Protobuf.SCOMsRoomList)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.game.Protobuf.CenterServer.SCOMsRoomList();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasServer()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getServer().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.game.Protobuf.CenterServer.SCOMsRoomList other = (com.game.Protobuf.CenterServer.SCOMsRoomList) arg1;
          server_ = visitor.visitMessage(server_, other.server_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.game.Protobuf.CenterServer.ServerC.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = server_.toBuilder();
                  }
                  server_ = input.readMessage(com.game.Protobuf.CenterServer.ServerC.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(server_);
                    server_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.game.Protobuf.CenterServer.SCOMsRoomList.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.game.Protobuf.SCOMsRoomList)
    private static final com.game.Protobuf.CenterServer.SCOMsRoomList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SCOMsRoomList();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.game.Protobuf.CenterServer.SCOMsRoomList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SCOMsRoomList> PARSER;

    public static com.google.protobuf.Parser<SCOMsRoomList> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
