// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CMD_Game.proto

#ifndef PROTOBUF_CMD_5fGame_2eproto__INCLUDED
#define PROTOBUF_CMD_5fGame_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace game {
namespace Protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CMD_5fGame_2eproto();
void protobuf_AssignDesc_CMD_5fGame_2eproto();
void protobuf_ShutdownFile_CMD_5fGame_2eproto();

class CMD_CS_ListInfo;
class CMD_CS_UnRegGameServer;
class CMD_CS_ServerOnLineCount;

enum GAMELISTCMD {
  MDM_CS_SERVER_LIST = 1,
  SUB_CS_GET_SERVER_LIST = 2,
  SUB_CS_LIST_INFO = 100,
  SUB_CS_LIST_TYPE = 101,
  SUB_CS_LIST_KIND = 102,
  SUB_CS_LIST_STATION = 103,
  SUB_CS_LIST_SERVER = 104,
  SUB_CS_LIST_FINISH = 105
};
bool GAMELISTCMD_IsValid(int value);
const GAMELISTCMD GAMELISTCMD_MIN = MDM_CS_SERVER_LIST;
const GAMELISTCMD GAMELISTCMD_MAX = SUB_CS_LIST_FINISH;
const int GAMELISTCMD_ARRAYSIZE = GAMELISTCMD_MAX + 1;

enum ROMMGRCMD {
  MDM_CS_SERVER_MANAGER = 1,
  SUB_CS_REG_GAME_SERVER = 2,
  SUB_CS_UNREG_GAME_SERVER = 3,
  SUB_CS_SERVER_ONLINE_COUNT = 4
};
bool ROMMGRCMD_IsValid(int value);
const ROMMGRCMD ROMMGRCMD_MIN = MDM_CS_SERVER_MANAGER;
const ROMMGRCMD ROMMGRCMD_MAX = SUB_CS_SERVER_ONLINE_COUNT;
const int ROMMGRCMD_ARRAYSIZE = ROMMGRCMD_MAX + 1;

// ===================================================================

class CMD_CS_ListInfo : public ::google::protobuf::MessageLite {
 public:
  CMD_CS_ListInfo();
  virtual ~CMD_CS_ListInfo();

  CMD_CS_ListInfo(const CMD_CS_ListInfo& from);

  inline CMD_CS_ListInfo& operator=(const CMD_CS_ListInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CMD_CS_ListInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CMD_CS_ListInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CMD_CS_ListInfo* other);

  // implements Message ----------------------------------------------

  CMD_CS_ListInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CMD_CS_ListInfo& from);
  void MergeFrom(const CMD_CS_ListInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 dwTypeCount = 1;
  inline bool has_dwtypecount() const;
  inline void clear_dwtypecount();
  static const int kDwTypeCountFieldNumber = 1;
  inline ::google::protobuf::uint64 dwtypecount() const;
  inline void set_dwtypecount(::google::protobuf::uint64 value);

  // required uint64 dwKindCount = 2;
  inline bool has_dwkindcount() const;
  inline void clear_dwkindcount();
  static const int kDwKindCountFieldNumber = 2;
  inline ::google::protobuf::uint64 dwkindcount() const;
  inline void set_dwkindcount(::google::protobuf::uint64 value);

  // required uint64 dwServerCount = 3;
  inline bool has_dwservercount() const;
  inline void clear_dwservercount();
  static const int kDwServerCountFieldNumber = 3;
  inline ::google::protobuf::uint64 dwservercount() const;
  inline void set_dwservercount(::google::protobuf::uint64 value);

  // required uint64 dwStationCount = 4;
  inline bool has_dwstationcount() const;
  inline void clear_dwstationcount();
  static const int kDwStationCountFieldNumber = 4;
  inline ::google::protobuf::uint64 dwstationcount() const;
  inline void set_dwstationcount(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.game.Protobuf.CMD_CS_ListInfo)
 private:
  inline void set_has_dwtypecount();
  inline void clear_has_dwtypecount();
  inline void set_has_dwkindcount();
  inline void clear_has_dwkindcount();
  inline void set_has_dwservercount();
  inline void clear_has_dwservercount();
  inline void set_has_dwstationcount();
  inline void clear_has_dwstationcount();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 dwtypecount_;
  ::google::protobuf::uint64 dwkindcount_;
  ::google::protobuf::uint64 dwservercount_;
  ::google::protobuf::uint64 dwstationcount_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CMD_5fGame_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CMD_5fGame_2eproto();
  #endif
  friend void protobuf_AssignDesc_CMD_5fGame_2eproto();
  friend void protobuf_ShutdownFile_CMD_5fGame_2eproto();

  void InitAsDefaultInstance();
  static CMD_CS_ListInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CS_UnRegGameServer : public ::google::protobuf::MessageLite {
 public:
  CMD_CS_UnRegGameServer();
  virtual ~CMD_CS_UnRegGameServer();

  CMD_CS_UnRegGameServer(const CMD_CS_UnRegGameServer& from);

  inline CMD_CS_UnRegGameServer& operator=(const CMD_CS_UnRegGameServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CMD_CS_UnRegGameServer& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CMD_CS_UnRegGameServer* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CMD_CS_UnRegGameServer* other);

  // implements Message ----------------------------------------------

  CMD_CS_UnRegGameServer* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CMD_CS_UnRegGameServer& from);
  void MergeFrom(const CMD_CS_UnRegGameServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 wKindID = 1;
  inline bool has_wkindid() const;
  inline void clear_wkindid();
  static const int kWKindIDFieldNumber = 1;
  inline ::google::protobuf::uint32 wkindid() const;
  inline void set_wkindid(::google::protobuf::uint32 value);

  // required uint32 wServerID = 2;
  inline bool has_wserverid() const;
  inline void clear_wserverid();
  static const int kWServerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 wserverid() const;
  inline void set_wserverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.game.Protobuf.CMD_CS_UnRegGameServer)
 private:
  inline void set_has_wkindid();
  inline void clear_has_wkindid();
  inline void set_has_wserverid();
  inline void clear_has_wserverid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 wkindid_;
  ::google::protobuf::uint32 wserverid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CMD_5fGame_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CMD_5fGame_2eproto();
  #endif
  friend void protobuf_AssignDesc_CMD_5fGame_2eproto();
  friend void protobuf_ShutdownFile_CMD_5fGame_2eproto();

  void InitAsDefaultInstance();
  static CMD_CS_UnRegGameServer* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CS_ServerOnLineCount : public ::google::protobuf::MessageLite {
 public:
  CMD_CS_ServerOnLineCount();
  virtual ~CMD_CS_ServerOnLineCount();

  CMD_CS_ServerOnLineCount(const CMD_CS_ServerOnLineCount& from);

  inline CMD_CS_ServerOnLineCount& operator=(const CMD_CS_ServerOnLineCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CMD_CS_ServerOnLineCount& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CMD_CS_ServerOnLineCount* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CMD_CS_ServerOnLineCount* other);

  // implements Message ----------------------------------------------

  CMD_CS_ServerOnLineCount* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CMD_CS_ServerOnLineCount& from);
  void MergeFrom(const CMD_CS_ServerOnLineCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 wKindID = 1;
  inline bool has_wkindid() const;
  inline void clear_wkindid();
  static const int kWKindIDFieldNumber = 1;
  inline ::google::protobuf::uint32 wkindid() const;
  inline void set_wkindid(::google::protobuf::uint32 value);

  // required uint32 wServerID = 2;
  inline bool has_wserverid() const;
  inline void clear_wserverid();
  static const int kWServerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 wserverid() const;
  inline void set_wserverid(::google::protobuf::uint32 value);

  // required uint64 dwOnLineCount = 3;
  inline bool has_dwonlinecount() const;
  inline void clear_dwonlinecount();
  static const int kDwOnLineCountFieldNumber = 3;
  inline ::google::protobuf::uint64 dwonlinecount() const;
  inline void set_dwonlinecount(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.game.Protobuf.CMD_CS_ServerOnLineCount)
 private:
  inline void set_has_wkindid();
  inline void clear_has_wkindid();
  inline void set_has_wserverid();
  inline void clear_has_wserverid();
  inline void set_has_dwonlinecount();
  inline void clear_has_dwonlinecount();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 wkindid_;
  ::google::protobuf::uint32 wserverid_;
  ::google::protobuf::uint64 dwonlinecount_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CMD_5fGame_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CMD_5fGame_2eproto();
  #endif
  friend void protobuf_AssignDesc_CMD_5fGame_2eproto();
  friend void protobuf_ShutdownFile_CMD_5fGame_2eproto();

  void InitAsDefaultInstance();
  static CMD_CS_ServerOnLineCount* default_instance_;
};
// ===================================================================


// ===================================================================

// CMD_CS_ListInfo

// required uint64 dwTypeCount = 1;
inline bool CMD_CS_ListInfo::has_dwtypecount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CS_ListInfo::set_has_dwtypecount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CS_ListInfo::clear_has_dwtypecount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CS_ListInfo::clear_dwtypecount() {
  dwtypecount_ = GOOGLE_ULONGLONG(0);
  clear_has_dwtypecount();
}
inline ::google::protobuf::uint64 CMD_CS_ListInfo::dwtypecount() const {
  // @@protoc_insertion_point(field_get:com.game.Protobuf.CMD_CS_ListInfo.dwTypeCount)
  return dwtypecount_;
}
inline void CMD_CS_ListInfo::set_dwtypecount(::google::protobuf::uint64 value) {
  set_has_dwtypecount();
  dwtypecount_ = value;
  // @@protoc_insertion_point(field_set:com.game.Protobuf.CMD_CS_ListInfo.dwTypeCount)
}

// required uint64 dwKindCount = 2;
inline bool CMD_CS_ListInfo::has_dwkindcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_CS_ListInfo::set_has_dwkindcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_CS_ListInfo::clear_has_dwkindcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_CS_ListInfo::clear_dwkindcount() {
  dwkindcount_ = GOOGLE_ULONGLONG(0);
  clear_has_dwkindcount();
}
inline ::google::protobuf::uint64 CMD_CS_ListInfo::dwkindcount() const {
  // @@protoc_insertion_point(field_get:com.game.Protobuf.CMD_CS_ListInfo.dwKindCount)
  return dwkindcount_;
}
inline void CMD_CS_ListInfo::set_dwkindcount(::google::protobuf::uint64 value) {
  set_has_dwkindcount();
  dwkindcount_ = value;
  // @@protoc_insertion_point(field_set:com.game.Protobuf.CMD_CS_ListInfo.dwKindCount)
}

// required uint64 dwServerCount = 3;
inline bool CMD_CS_ListInfo::has_dwservercount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_CS_ListInfo::set_has_dwservercount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_CS_ListInfo::clear_has_dwservercount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_CS_ListInfo::clear_dwservercount() {
  dwservercount_ = GOOGLE_ULONGLONG(0);
  clear_has_dwservercount();
}
inline ::google::protobuf::uint64 CMD_CS_ListInfo::dwservercount() const {
  // @@protoc_insertion_point(field_get:com.game.Protobuf.CMD_CS_ListInfo.dwServerCount)
  return dwservercount_;
}
inline void CMD_CS_ListInfo::set_dwservercount(::google::protobuf::uint64 value) {
  set_has_dwservercount();
  dwservercount_ = value;
  // @@protoc_insertion_point(field_set:com.game.Protobuf.CMD_CS_ListInfo.dwServerCount)
}

// required uint64 dwStationCount = 4;
inline bool CMD_CS_ListInfo::has_dwstationcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_CS_ListInfo::set_has_dwstationcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_CS_ListInfo::clear_has_dwstationcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_CS_ListInfo::clear_dwstationcount() {
  dwstationcount_ = GOOGLE_ULONGLONG(0);
  clear_has_dwstationcount();
}
inline ::google::protobuf::uint64 CMD_CS_ListInfo::dwstationcount() const {
  // @@protoc_insertion_point(field_get:com.game.Protobuf.CMD_CS_ListInfo.dwStationCount)
  return dwstationcount_;
}
inline void CMD_CS_ListInfo::set_dwstationcount(::google::protobuf::uint64 value) {
  set_has_dwstationcount();
  dwstationcount_ = value;
  // @@protoc_insertion_point(field_set:com.game.Protobuf.CMD_CS_ListInfo.dwStationCount)
}

// -------------------------------------------------------------------

// CMD_CS_UnRegGameServer

// required uint32 wKindID = 1;
inline bool CMD_CS_UnRegGameServer::has_wkindid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CS_UnRegGameServer::set_has_wkindid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CS_UnRegGameServer::clear_has_wkindid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CS_UnRegGameServer::clear_wkindid() {
  wkindid_ = 0u;
  clear_has_wkindid();
}
inline ::google::protobuf::uint32 CMD_CS_UnRegGameServer::wkindid() const {
  // @@protoc_insertion_point(field_get:com.game.Protobuf.CMD_CS_UnRegGameServer.wKindID)
  return wkindid_;
}
inline void CMD_CS_UnRegGameServer::set_wkindid(::google::protobuf::uint32 value) {
  set_has_wkindid();
  wkindid_ = value;
  // @@protoc_insertion_point(field_set:com.game.Protobuf.CMD_CS_UnRegGameServer.wKindID)
}

// required uint32 wServerID = 2;
inline bool CMD_CS_UnRegGameServer::has_wserverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_CS_UnRegGameServer::set_has_wserverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_CS_UnRegGameServer::clear_has_wserverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_CS_UnRegGameServer::clear_wserverid() {
  wserverid_ = 0u;
  clear_has_wserverid();
}
inline ::google::protobuf::uint32 CMD_CS_UnRegGameServer::wserverid() const {
  // @@protoc_insertion_point(field_get:com.game.Protobuf.CMD_CS_UnRegGameServer.wServerID)
  return wserverid_;
}
inline void CMD_CS_UnRegGameServer::set_wserverid(::google::protobuf::uint32 value) {
  set_has_wserverid();
  wserverid_ = value;
  // @@protoc_insertion_point(field_set:com.game.Protobuf.CMD_CS_UnRegGameServer.wServerID)
}

// -------------------------------------------------------------------

// CMD_CS_ServerOnLineCount

// required uint32 wKindID = 1;
inline bool CMD_CS_ServerOnLineCount::has_wkindid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CS_ServerOnLineCount::set_has_wkindid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CS_ServerOnLineCount::clear_has_wkindid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CS_ServerOnLineCount::clear_wkindid() {
  wkindid_ = 0u;
  clear_has_wkindid();
}
inline ::google::protobuf::uint32 CMD_CS_ServerOnLineCount::wkindid() const {
  // @@protoc_insertion_point(field_get:com.game.Protobuf.CMD_CS_ServerOnLineCount.wKindID)
  return wkindid_;
}
inline void CMD_CS_ServerOnLineCount::set_wkindid(::google::protobuf::uint32 value) {
  set_has_wkindid();
  wkindid_ = value;
  // @@protoc_insertion_point(field_set:com.game.Protobuf.CMD_CS_ServerOnLineCount.wKindID)
}

// required uint32 wServerID = 2;
inline bool CMD_CS_ServerOnLineCount::has_wserverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_CS_ServerOnLineCount::set_has_wserverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_CS_ServerOnLineCount::clear_has_wserverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_CS_ServerOnLineCount::clear_wserverid() {
  wserverid_ = 0u;
  clear_has_wserverid();
}
inline ::google::protobuf::uint32 CMD_CS_ServerOnLineCount::wserverid() const {
  // @@protoc_insertion_point(field_get:com.game.Protobuf.CMD_CS_ServerOnLineCount.wServerID)
  return wserverid_;
}
inline void CMD_CS_ServerOnLineCount::set_wserverid(::google::protobuf::uint32 value) {
  set_has_wserverid();
  wserverid_ = value;
  // @@protoc_insertion_point(field_set:com.game.Protobuf.CMD_CS_ServerOnLineCount.wServerID)
}

// required uint64 dwOnLineCount = 3;
inline bool CMD_CS_ServerOnLineCount::has_dwonlinecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_CS_ServerOnLineCount::set_has_dwonlinecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_CS_ServerOnLineCount::clear_has_dwonlinecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_CS_ServerOnLineCount::clear_dwonlinecount() {
  dwonlinecount_ = GOOGLE_ULONGLONG(0);
  clear_has_dwonlinecount();
}
inline ::google::protobuf::uint64 CMD_CS_ServerOnLineCount::dwonlinecount() const {
  // @@protoc_insertion_point(field_get:com.game.Protobuf.CMD_CS_ServerOnLineCount.dwOnLineCount)
  return dwonlinecount_;
}
inline void CMD_CS_ServerOnLineCount::set_dwonlinecount(::google::protobuf::uint64 value) {
  set_has_dwonlinecount();
  dwonlinecount_ = value;
  // @@protoc_insertion_point(field_set:com.game.Protobuf.CMD_CS_ServerOnLineCount.dwOnLineCount)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protobuf
}  // namespace game
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CMD_5fGame_2eproto__INCLUDED
