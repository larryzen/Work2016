// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CMD.proto

#ifndef PROTOBUF_CMD_2eproto__INCLUDED
#define PROTOBUF_CMD_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace game {
namespace Protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CMD_2eproto();
void protobuf_AssignDesc_CMD_2eproto();
void protobuf_ShutdownFile_CMD_2eproto();


enum CCMD {
  C_Connect = 1,
  C_Disconnect = 2,
  C_Guest = 3,
  C_Registered = 5,
  C_Login = 6,
  C_Switch = 7,
  C_LogOut = 8,
  C_CLRegisterModel = 9,
  C_CLIdentity = 10,
  C_OCIdentity = 11,
  C_GCRegisterModel = 12,
  C_OGEntryGame = 13,
  C_GOGetGameIDInfo = 14,
  C_OGOnFire = 15,
  C_OGOnNet = 16,
  C_OGOnSceenBomb = 17
};
bool CCMD_IsValid(int value);
const CCMD CCMD_MIN = C_Connect;
const CCMD CCMD_MAX = C_OGOnSceenBomb;
const int CCMD_ARRAYSIZE = CCMD_MAX + 1;

enum SCMD {
  S_Error = 100,
  S_LoginSucc = 101,
  S_LoginFail = 102,
  S_Disconnect = 103,
  S_Email = 104,
  S_SignIn = 105,
  S_LCRegisterModel = 106,
  S_LCIdentity = 107,
  S_COUserData = 108,
  S_CORoomList = 109,
  S_GOGamePlayerInfo = 150,
  S_GOMapInfo = 151,
  S_GOPutFish = 152,
  S_GOPutFishGroup = 153,
  S_GOFireSuccess = 154,
  S_GOFireFire = 155,
  S_GONetSuccess = 156,
  S_GOOnSceenBombSucc = 157
};
bool SCMD_IsValid(int value);
const SCMD SCMD_MIN = S_Error;
const SCMD SCMD_MAX = S_GOOnSceenBombSucc;
const int SCMD_ARRAYSIZE = SCMD_MAX + 1;

// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protobuf
}  // namespace game
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CMD_2eproto__INCLUDED
