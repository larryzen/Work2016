// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CMD.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CMD.pb.h"
#include "stdafx.h"
#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace game {
namespace Protobuf {

void protobuf_ShutdownFile_CMD_2eproto() {
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_CMD_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_CMD_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CMD_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_CMD_2eproto_once_);
void protobuf_AddDesc_CMD_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_CMD_2eproto_once_,
                 &protobuf_AddDesc_CMD_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CMD_2eproto {
  StaticDescriptorInitializer_CMD_2eproto() {
    protobuf_AddDesc_CMD_2eproto();
  }
} static_descriptor_initializer_CMD_2eproto_;
#endif
bool CCMD_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

bool SCMD_IsValid(int value) {
  switch(value) {
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protobuf
}  // namespace game
}  // namespace com

// @@protoc_insertion_point(global_scope)
